
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006e7c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406e7c  00406e7c  00016e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406e84  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000304  204009d0  00407854  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400cd4  00407b58  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409b5c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001a00a  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003afe  00000000  00000000  0003aa61  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000065d1  00000000  00000000  0003e55f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a60  00000000  00000000  00044b30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a88  00000000  00000000  00045590  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021eb6  00000000  00000000  00046018  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fd85  00000000  00000000  00067ece  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090758  00000000  00000000  00077c53  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000022f4  00000000  00000000  001083ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 95 10 40 00 91 10 40 00 91 10 40 00     .,@ ..@...@...@.
  400010:	91 10 40 00 91 10 40 00 91 10 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	91 10 40 00 91 10 40 00 00 00 00 00 91 10 40 00     ..@...@.......@.
  40003c:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  40004c:	21 15 40 00 91 10 40 00 91 10 40 00 91 10 40 00     !.@...@...@...@.
  40005c:	91 10 40 00 91 10 40 00 00 00 00 00 b9 0e 40 00     ..@...@.......@.
  40006c:	cd 0e 40 00 e1 0e 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  40007c:	91 10 40 00 f5 0e 40 00 09 0f 40 00 91 10 40 00     ..@...@...@...@.
  40008c:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  40009c:	91 10 40 00 81 16 40 00 91 10 40 00 d1 16 40 00     ..@...@...@...@.
  4000ac:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  4000bc:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  4000cc:	91 10 40 00 00 00 00 00 91 10 40 00 00 00 00 00     ..@.......@.....
  4000dc:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  4000ec:	91 10 40 00 91 10 40 00 91 10 40 00 91 10 40 00     ..@...@...@...@.
  4000fc:	91 10 40 00 91 10 40 00 a9 16 40 00 91 10 40 00     ..@...@...@...@.
  40010c:	91 10 40 00 91 10 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 91 10 40 00 91 10 40 00 91 10 40 00     ......@...@...@.
  40012c:	91 10 40 00 91 10 40 00 00 00 00 00 91 10 40 00     ..@...@.......@.
  40013c:	91 10 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406e84 	.word	0x00406e84

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406e84 	.word	0x00406e84
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406e84 	.word	0x00406e84
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001ac:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001ae:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b0:	6884      	ldr	r4, [r0, #8]
  4001b2:	42a5      	cmp	r5, r4
  4001b4:	d003      	beq.n	4001be <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001b6:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b8:	6884      	ldr	r4, [r0, #8]
  4001ba:	42ac      	cmp	r4, r5
  4001bc:	d1fb      	bne.n	4001b6 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001be:	b161      	cbz	r1, 4001da <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001c0:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001c4:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001c8:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001cc:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001d0:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001d4:	bf18      	it	ne
  4001d6:	300c      	addne	r0, #12
  4001d8:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001da:	b142      	cbz	r2, 4001ee <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001dc:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001e0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001e4:	f3c4 2003 	ubfx	r0, r4, #8, #4
  4001e8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  4001ec:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  4001ee:	b143      	cbz	r3, 400202 <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001f0:	f3c4 1202 	ubfx	r2, r4, #4, #3
  4001f4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4001f8:	f004 040f 	and.w	r4, r4, #15
  4001fc:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  400200:	601c      	str	r4, [r3, #0]
	}
}
  400202:	bc30      	pop	{r4, r5}
  400204:	4770      	bx	lr
	...

00400208 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  400208:	4b03      	ldr	r3, [pc, #12]	; (400218 <rtt_init+0x10>)
  40020a:	681b      	ldr	r3, [r3, #0]
  40020c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  400210:	4319      	orrs	r1, r3
  400212:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  400214:	2000      	movs	r0, #0
  400216:	4770      	bx	lr
  400218:	204009ec 	.word	0x204009ec

0040021c <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  40021c:	b941      	cbnz	r1, 400230 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  40021e:	4a09      	ldr	r2, [pc, #36]	; (400244 <rtt_sel_source+0x28>)
  400220:	6813      	ldr	r3, [r2, #0]
  400222:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400226:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  400228:	6802      	ldr	r2, [r0, #0]
  40022a:	4313      	orrs	r3, r2
  40022c:	6003      	str	r3, [r0, #0]
  40022e:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  400230:	4a04      	ldr	r2, [pc, #16]	; (400244 <rtt_sel_source+0x28>)
  400232:	6813      	ldr	r3, [r2, #0]
  400234:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  400238:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  40023a:	6802      	ldr	r2, [r0, #0]
  40023c:	4313      	orrs	r3, r2
  40023e:	6003      	str	r3, [r0, #0]
  400240:	4770      	bx	lr
  400242:	bf00      	nop
  400244:	204009ec 	.word	0x204009ec

00400248 <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  400248:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  40024a:	4b03      	ldr	r3, [pc, #12]	; (400258 <rtt_enable_interrupt+0x10>)
  40024c:	681b      	ldr	r3, [r3, #0]
  40024e:	4319      	orrs	r1, r3
  400250:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  400252:	6001      	str	r1, [r0, #0]
  400254:	4770      	bx	lr
  400256:	bf00      	nop
  400258:	204009ec 	.word	0x204009ec

0040025c <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  40025c:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  40025e:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400262:	4b02      	ldr	r3, [pc, #8]	; (40026c <rtt_disable_interrupt+0x10>)
  400264:	681b      	ldr	r3, [r3, #0]
  400266:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  400268:	6001      	str	r1, [r0, #0]
  40026a:	4770      	bx	lr
  40026c:	204009ec 	.word	0x204009ec

00400270 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400270:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400272:	6883      	ldr	r3, [r0, #8]
  400274:	429a      	cmp	r2, r3
  400276:	d003      	beq.n	400280 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400278:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40027a:	6883      	ldr	r3, [r0, #8]
  40027c:	4293      	cmp	r3, r2
  40027e:	d1fb      	bne.n	400278 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400280:	4618      	mov	r0, r3
  400282:	4770      	bx	lr

00400284 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400284:	68c0      	ldr	r0, [r0, #12]
}
  400286:	4770      	bx	lr

00400288 <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  400288:	b570      	push	{r4, r5, r6, lr}
  40028a:	4606      	mov	r6, r0
  40028c:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  40028e:	6804      	ldr	r4, [r0, #0]
  400290:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400294:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  400298:	4809      	ldr	r0, [pc, #36]	; (4002c0 <rtt_write_alarm_time+0x38>)
  40029a:	4b0a      	ldr	r3, [pc, #40]	; (4002c4 <rtt_write_alarm_time+0x3c>)
  40029c:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  40029e:	b92d      	cbnz	r5, 4002ac <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  4002a0:	f04f 33ff 	mov.w	r3, #4294967295
  4002a4:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  4002a6:	b924      	cbnz	r4, 4002b2 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  4002a8:	2000      	movs	r0, #0
  4002aa:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  4002ac:	3d01      	subs	r5, #1
  4002ae:	6075      	str	r5, [r6, #4]
  4002b0:	e7f9      	b.n	4002a6 <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  4002b2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4002b6:	4802      	ldr	r0, [pc, #8]	; (4002c0 <rtt_write_alarm_time+0x38>)
  4002b8:	4b03      	ldr	r3, [pc, #12]	; (4002c8 <rtt_write_alarm_time+0x40>)
  4002ba:	4798      	blx	r3
  4002bc:	e7f4      	b.n	4002a8 <rtt_write_alarm_time+0x20>
  4002be:	bf00      	nop
  4002c0:	400e1830 	.word	0x400e1830
  4002c4:	0040025d 	.word	0x0040025d
  4002c8:	00400249 	.word	0x00400249

004002cc <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4002cc:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4002ce:	4b07      	ldr	r3, [pc, #28]	; (4002ec <spi_enable_clock+0x20>)
  4002d0:	4298      	cmp	r0, r3
  4002d2:	d003      	beq.n	4002dc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4002d4:	4b06      	ldr	r3, [pc, #24]	; (4002f0 <spi_enable_clock+0x24>)
  4002d6:	4298      	cmp	r0, r3
  4002d8:	d004      	beq.n	4002e4 <spi_enable_clock+0x18>
  4002da:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4002dc:	2015      	movs	r0, #21
  4002de:	4b05      	ldr	r3, [pc, #20]	; (4002f4 <spi_enable_clock+0x28>)
  4002e0:	4798      	blx	r3
  4002e2:	bd08      	pop	{r3, pc}
  4002e4:	202a      	movs	r0, #42	; 0x2a
  4002e6:	4b03      	ldr	r3, [pc, #12]	; (4002f4 <spi_enable_clock+0x28>)
  4002e8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4002ea:	e7f6      	b.n	4002da <spi_enable_clock+0xe>
  4002ec:	40008000 	.word	0x40008000
  4002f0:	40058000 	.word	0x40058000
  4002f4:	0040103d 	.word	0x0040103d

004002f8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4002f8:	6843      	ldr	r3, [r0, #4]
  4002fa:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002fe:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400300:	6843      	ldr	r3, [r0, #4]
  400302:	0409      	lsls	r1, r1, #16
  400304:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400308:	4319      	orrs	r1, r3
  40030a:	6041      	str	r1, [r0, #4]
  40030c:	4770      	bx	lr

0040030e <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40030e:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400310:	f643 2499 	movw	r4, #15001	; 0x3a99
  400314:	6905      	ldr	r5, [r0, #16]
  400316:	f015 0f02 	tst.w	r5, #2
  40031a:	d103      	bne.n	400324 <spi_write+0x16>
		if (!timeout--) {
  40031c:	3c01      	subs	r4, #1
  40031e:	d1f9      	bne.n	400314 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400320:	2001      	movs	r0, #1
  400322:	e00c      	b.n	40033e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400324:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400326:	f014 0f02 	tst.w	r4, #2
  40032a:	d006      	beq.n	40033a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40032c:	0412      	lsls	r2, r2, #16
  40032e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400332:	4311      	orrs	r1, r2
		if (uc_last) {
  400334:	b10b      	cbz	r3, 40033a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400336:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40033a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40033c:	2000      	movs	r0, #0
}
  40033e:	bc30      	pop	{r4, r5}
  400340:	4770      	bx	lr

00400342 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400342:	b932      	cbnz	r2, 400352 <spi_set_clock_polarity+0x10>
  400344:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400348:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40034a:	f023 0301 	bic.w	r3, r3, #1
  40034e:	6303      	str	r3, [r0, #48]	; 0x30
  400350:	4770      	bx	lr
  400352:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400356:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400358:	f043 0301 	orr.w	r3, r3, #1
  40035c:	6303      	str	r3, [r0, #48]	; 0x30
  40035e:	4770      	bx	lr

00400360 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400360:	b932      	cbnz	r2, 400370 <spi_set_clock_phase+0x10>
  400362:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400366:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400368:	f023 0302 	bic.w	r3, r3, #2
  40036c:	6303      	str	r3, [r0, #48]	; 0x30
  40036e:	4770      	bx	lr
  400370:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400374:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400376:	f043 0302 	orr.w	r3, r3, #2
  40037a:	6303      	str	r3, [r0, #48]	; 0x30
  40037c:	4770      	bx	lr

0040037e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40037e:	2a04      	cmp	r2, #4
  400380:	d003      	beq.n	40038a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400382:	b16a      	cbz	r2, 4003a0 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400384:	2a08      	cmp	r2, #8
  400386:	d016      	beq.n	4003b6 <spi_configure_cs_behavior+0x38>
  400388:	4770      	bx	lr
  40038a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40038e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400390:	f023 0308 	bic.w	r3, r3, #8
  400394:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400396:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400398:	f043 0304 	orr.w	r3, r3, #4
  40039c:	6303      	str	r3, [r0, #48]	; 0x30
  40039e:	4770      	bx	lr
  4003a0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4003a4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003a6:	f023 0308 	bic.w	r3, r3, #8
  4003aa:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4003ac:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003ae:	f023 0304 	bic.w	r3, r3, #4
  4003b2:	6303      	str	r3, [r0, #48]	; 0x30
  4003b4:	4770      	bx	lr
  4003b6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4003ba:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003bc:	f043 0308 	orr.w	r3, r3, #8
  4003c0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4003c2:	e7e1      	b.n	400388 <spi_configure_cs_behavior+0xa>

004003c4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4003c4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4003c8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003ca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4003ce:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4003d0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003d2:	431a      	orrs	r2, r3
  4003d4:	630a      	str	r2, [r1, #48]	; 0x30
  4003d6:	4770      	bx	lr

004003d8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4003d8:	1e43      	subs	r3, r0, #1
  4003da:	4419      	add	r1, r3
  4003dc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4003e0:	1e43      	subs	r3, r0, #1
  4003e2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4003e4:	bf94      	ite	ls
  4003e6:	b200      	sxthls	r0, r0
		return -1;
  4003e8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4003ec:	4770      	bx	lr

004003ee <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4003ee:	b17a      	cbz	r2, 400410 <spi_set_baudrate_div+0x22>
{
  4003f0:	b410      	push	{r4}
  4003f2:	4614      	mov	r4, r2
  4003f4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4003f8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003fa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003fe:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400400:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400402:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400406:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400408:	2000      	movs	r0, #0
}
  40040a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40040e:	4770      	bx	lr
        return -1;
  400410:	f04f 30ff 	mov.w	r0, #4294967295
  400414:	4770      	bx	lr

00400416 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400416:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400418:	0189      	lsls	r1, r1, #6
  40041a:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40041c:	2402      	movs	r4, #2
  40041e:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400420:	f04f 31ff 	mov.w	r1, #4294967295
  400424:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400426:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400428:	605a      	str	r2, [r3, #4]
}
  40042a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40042e:	4770      	bx	lr

00400430 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400430:	0189      	lsls	r1, r1, #6
  400432:	2305      	movs	r3, #5
  400434:	5043      	str	r3, [r0, r1]
  400436:	4770      	bx	lr

00400438 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400438:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40043c:	61ca      	str	r2, [r1, #28]
  40043e:	4770      	bx	lr

00400440 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400440:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400444:	624a      	str	r2, [r1, #36]	; 0x24
  400446:	4770      	bx	lr

00400448 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400448:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  40044c:	6a08      	ldr	r0, [r1, #32]
}
  40044e:	4770      	bx	lr

00400450 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400450:	b4f0      	push	{r4, r5, r6, r7}
  400452:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400454:	2402      	movs	r4, #2
  400456:	9401      	str	r4, [sp, #4]
  400458:	2408      	movs	r4, #8
  40045a:	9402      	str	r4, [sp, #8]
  40045c:	2420      	movs	r4, #32
  40045e:	9403      	str	r4, [sp, #12]
  400460:	2480      	movs	r4, #128	; 0x80
  400462:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400464:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400466:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400468:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  40046a:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40046e:	d814      	bhi.n	40049a <tc_find_mck_divisor+0x4a>
  400470:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400472:	42a0      	cmp	r0, r4
  400474:	d217      	bcs.n	4004a6 <tc_find_mck_divisor+0x56>
  400476:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400478:	af01      	add	r7, sp, #4
  40047a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40047e:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400482:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400484:	4284      	cmp	r4, r0
  400486:	d30a      	bcc.n	40049e <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400488:	4286      	cmp	r6, r0
  40048a:	d90d      	bls.n	4004a8 <tc_find_mck_divisor+0x58>
			ul_index++) {
  40048c:	3501      	adds	r5, #1
	for (ul_index = 0;
  40048e:	2d05      	cmp	r5, #5
  400490:	d1f3      	bne.n	40047a <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400492:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400494:	b006      	add	sp, #24
  400496:	bcf0      	pop	{r4, r5, r6, r7}
  400498:	4770      	bx	lr
			return 0;
  40049a:	2000      	movs	r0, #0
  40049c:	e7fa      	b.n	400494 <tc_find_mck_divisor+0x44>
  40049e:	2000      	movs	r0, #0
  4004a0:	e7f8      	b.n	400494 <tc_find_mck_divisor+0x44>
	return 1;
  4004a2:	2001      	movs	r0, #1
  4004a4:	e7f6      	b.n	400494 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  4004a6:	2500      	movs	r5, #0
	if (p_uldiv) {
  4004a8:	b12a      	cbz	r2, 4004b6 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  4004aa:	a906      	add	r1, sp, #24
  4004ac:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  4004b0:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4004b4:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4004b6:	2b00      	cmp	r3, #0
  4004b8:	d0f3      	beq.n	4004a2 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4004ba:	601d      	str	r5, [r3, #0]
	return 1;
  4004bc:	2001      	movs	r0, #1
  4004be:	e7e9      	b.n	400494 <tc_find_mck_divisor+0x44>

004004c0 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4004c0:	4b01      	ldr	r3, [pc, #4]	; (4004c8 <gfx_mono_set_framebuffer+0x8>)
  4004c2:	6018      	str	r0, [r3, #0]
  4004c4:	4770      	bx	lr
  4004c6:	bf00      	nop
  4004c8:	204009f0 	.word	0x204009f0

004004cc <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4004cc:	4b02      	ldr	r3, [pc, #8]	; (4004d8 <gfx_mono_framebuffer_put_byte+0xc>)
  4004ce:	681b      	ldr	r3, [r3, #0]
  4004d0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4004d4:	5442      	strb	r2, [r0, r1]
  4004d6:	4770      	bx	lr
  4004d8:	204009f0 	.word	0x204009f0

004004dc <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4004dc:	4b02      	ldr	r3, [pc, #8]	; (4004e8 <gfx_mono_framebuffer_get_byte+0xc>)
  4004de:	681b      	ldr	r3, [r3, #0]
  4004e0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4004e4:	5c40      	ldrb	r0, [r0, r1]
  4004e6:	4770      	bx	lr
  4004e8:	204009f0 	.word	0x204009f0

004004ec <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4004ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4004f0:	1884      	adds	r4, r0, r2
  4004f2:	2c80      	cmp	r4, #128	; 0x80
  4004f4:	dd02      	ble.n	4004fc <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4004f6:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4004fa:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4004fc:	b322      	cbz	r2, 400548 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4004fe:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400500:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400504:	2601      	movs	r6, #1
  400506:	fa06 f101 	lsl.w	r1, r6, r1
  40050a:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  40050c:	2b01      	cmp	r3, #1
  40050e:	d01d      	beq.n	40054c <gfx_mono_generic_draw_horizontal_line+0x60>
  400510:	2b00      	cmp	r3, #0
  400512:	d035      	beq.n	400580 <gfx_mono_generic_draw_horizontal_line+0x94>
  400514:	2b02      	cmp	r3, #2
  400516:	d117      	bne.n	400548 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400518:	3801      	subs	r0, #1
  40051a:	b2c7      	uxtb	r7, r0
  40051c:	19d4      	adds	r4, r2, r7
  40051e:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400520:	f8df a090 	ldr.w	sl, [pc, #144]	; 4005b4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400524:	f04f 0900 	mov.w	r9, #0
  400528:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4005b8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40052c:	4621      	mov	r1, r4
  40052e:	4628      	mov	r0, r5
  400530:	47d0      	blx	sl
			temp ^= pixelmask;
  400532:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400536:	464b      	mov	r3, r9
  400538:	b2d2      	uxtb	r2, r2
  40053a:	4621      	mov	r1, r4
  40053c:	4628      	mov	r0, r5
  40053e:	47c0      	blx	r8
  400540:	3c01      	subs	r4, #1
  400542:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400544:	42bc      	cmp	r4, r7
  400546:	d1f1      	bne.n	40052c <gfx_mono_generic_draw_horizontal_line+0x40>
  400548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40054c:	3801      	subs	r0, #1
  40054e:	b2c7      	uxtb	r7, r0
  400550:	19d4      	adds	r4, r2, r7
  400552:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400554:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4005b4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400558:	f04f 0900 	mov.w	r9, #0
  40055c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4005b8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400560:	4621      	mov	r1, r4
  400562:	4628      	mov	r0, r5
  400564:	47d0      	blx	sl
			temp |= pixelmask;
  400566:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40056a:	464b      	mov	r3, r9
  40056c:	b2d2      	uxtb	r2, r2
  40056e:	4621      	mov	r1, r4
  400570:	4628      	mov	r0, r5
  400572:	47c0      	blx	r8
  400574:	3c01      	subs	r4, #1
  400576:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400578:	42bc      	cmp	r4, r7
  40057a:	d1f1      	bne.n	400560 <gfx_mono_generic_draw_horizontal_line+0x74>
  40057c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400580:	3801      	subs	r0, #1
  400582:	b2c7      	uxtb	r7, r0
  400584:	19d4      	adds	r4, r2, r7
  400586:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400588:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4005b4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  40058c:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40058e:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4005b8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400592:	4621      	mov	r1, r4
  400594:	4628      	mov	r0, r5
  400596:	47c0      	blx	r8
			temp &= ~pixelmask;
  400598:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40059c:	2300      	movs	r3, #0
  40059e:	b2d2      	uxtb	r2, r2
  4005a0:	4621      	mov	r1, r4
  4005a2:	4628      	mov	r0, r5
  4005a4:	47c8      	blx	r9
  4005a6:	3c01      	subs	r4, #1
  4005a8:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005aa:	42bc      	cmp	r4, r7
  4005ac:	d1f1      	bne.n	400592 <gfx_mono_generic_draw_horizontal_line+0xa6>
  4005ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005b2:	bf00      	nop
  4005b4:	004007ed 	.word	0x004007ed
  4005b8:	004006e9 	.word	0x004006e9

004005bc <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4005bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005c0:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4005c4:	b18b      	cbz	r3, 4005ea <gfx_mono_generic_draw_filled_rect+0x2e>
  4005c6:	461c      	mov	r4, r3
  4005c8:	4690      	mov	r8, r2
  4005ca:	4606      	mov	r6, r0
  4005cc:	1e4d      	subs	r5, r1, #1
  4005ce:	b2ed      	uxtb	r5, r5
  4005d0:	442c      	add	r4, r5
  4005d2:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4005d4:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4005f0 <gfx_mono_generic_draw_filled_rect+0x34>
  4005d8:	463b      	mov	r3, r7
  4005da:	4642      	mov	r2, r8
  4005dc:	4621      	mov	r1, r4
  4005de:	4630      	mov	r0, r6
  4005e0:	47c8      	blx	r9
  4005e2:	3c01      	subs	r4, #1
  4005e4:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4005e6:	42ac      	cmp	r4, r5
  4005e8:	d1f6      	bne.n	4005d8 <gfx_mono_generic_draw_filled_rect+0x1c>
  4005ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005ee:	bf00      	nop
  4005f0:	004004ed 	.word	0x004004ed

004005f4 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4005f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4005f8:	b083      	sub	sp, #12
  4005fa:	4604      	mov	r4, r0
  4005fc:	4688      	mov	r8, r1
  4005fe:	4691      	mov	r9, r2
  400600:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  400602:	7a5b      	ldrb	r3, [r3, #9]
  400604:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400608:	2100      	movs	r1, #0
  40060a:	9100      	str	r1, [sp, #0]
  40060c:	4649      	mov	r1, r9
  40060e:	4640      	mov	r0, r8
  400610:	4d21      	ldr	r5, [pc, #132]	; (400698 <gfx_mono_draw_char+0xa4>)
  400612:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400614:	f89b 3000 	ldrb.w	r3, [fp]
  400618:	b113      	cbz	r3, 400620 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40061a:	b003      	add	sp, #12
  40061c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400620:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400624:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400626:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40062a:	bf18      	it	ne
  40062c:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40062e:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400632:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400636:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400638:	fb17 f70a 	smulbb	r7, r7, sl
  40063c:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400640:	f8db 3004 	ldr.w	r3, [fp, #4]
  400644:	fa13 f787 	uxtah	r7, r3, r7
  400648:	e01f      	b.n	40068a <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40064a:	0064      	lsls	r4, r4, #1
  40064c:	b2e4      	uxtb	r4, r4
  40064e:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400650:	b2eb      	uxtb	r3, r5
  400652:	429e      	cmp	r6, r3
  400654:	d910      	bls.n	400678 <gfx_mono_draw_char+0x84>
  400656:	b2eb      	uxtb	r3, r5
  400658:	eb08 0003 	add.w	r0, r8, r3
  40065c:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40065e:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400662:	bf08      	it	eq
  400664:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400668:	f014 0f80 	tst.w	r4, #128	; 0x80
  40066c:	d0ed      	beq.n	40064a <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40066e:	2201      	movs	r2, #1
  400670:	4649      	mov	r1, r9
  400672:	4b0a      	ldr	r3, [pc, #40]	; (40069c <gfx_mono_draw_char+0xa8>)
  400674:	4798      	blx	r3
  400676:	e7e8      	b.n	40064a <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400678:	f109 0901 	add.w	r9, r9, #1
  40067c:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400680:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400684:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400688:	d0c7      	beq.n	40061a <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40068a:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40068e:	2e00      	cmp	r6, #0
  400690:	d0f2      	beq.n	400678 <gfx_mono_draw_char+0x84>
  400692:	2500      	movs	r5, #0
  400694:	462c      	mov	r4, r5
  400696:	e7de      	b.n	400656 <gfx_mono_draw_char+0x62>
  400698:	004005bd 	.word	0x004005bd
  40069c:	00400789 	.word	0x00400789

004006a0 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4006a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006a4:	4604      	mov	r4, r0
  4006a6:	4690      	mov	r8, r2
  4006a8:	461d      	mov	r5, r3
  4006aa:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4006ac:	4f0d      	ldr	r7, [pc, #52]	; (4006e4 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4006ae:	460e      	mov	r6, r1
  4006b0:	e008      	b.n	4006c4 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4006b2:	7a6a      	ldrb	r2, [r5, #9]
  4006b4:	3201      	adds	r2, #1
  4006b6:	4442      	add	r2, r8
  4006b8:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4006bc:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4006be:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4006c2:	b16b      	cbz	r3, 4006e0 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4006c4:	7820      	ldrb	r0, [r4, #0]
  4006c6:	280a      	cmp	r0, #10
  4006c8:	d0f3      	beq.n	4006b2 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4006ca:	280d      	cmp	r0, #13
  4006cc:	d0f7      	beq.n	4006be <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4006ce:	462b      	mov	r3, r5
  4006d0:	4642      	mov	r2, r8
  4006d2:	4649      	mov	r1, r9
  4006d4:	47b8      	blx	r7
			x += font->width;
  4006d6:	7a2b      	ldrb	r3, [r5, #8]
  4006d8:	4499      	add	r9, r3
  4006da:	fa5f f989 	uxtb.w	r9, r9
  4006de:	e7ee      	b.n	4006be <gfx_mono_draw_string+0x1e>
}
  4006e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006e4:	004005f5 	.word	0x004005f5

004006e8 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4006e8:	b570      	push	{r4, r5, r6, lr}
  4006ea:	4604      	mov	r4, r0
  4006ec:	460d      	mov	r5, r1
  4006ee:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4006f0:	b91b      	cbnz	r3, 4006fa <gfx_mono_ssd1306_put_byte+0x12>
  4006f2:	4b0d      	ldr	r3, [pc, #52]	; (400728 <gfx_mono_ssd1306_put_byte+0x40>)
  4006f4:	4798      	blx	r3
  4006f6:	42b0      	cmp	r0, r6
  4006f8:	d015      	beq.n	400726 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4006fa:	4632      	mov	r2, r6
  4006fc:	4629      	mov	r1, r5
  4006fe:	4620      	mov	r0, r4
  400700:	4b0a      	ldr	r3, [pc, #40]	; (40072c <gfx_mono_ssd1306_put_byte+0x44>)
  400702:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400704:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400708:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  40070c:	4c08      	ldr	r4, [pc, #32]	; (400730 <gfx_mono_ssd1306_put_byte+0x48>)
  40070e:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400710:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400714:	f040 0010 	orr.w	r0, r0, #16
  400718:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  40071a:	f005 000f 	and.w	r0, r5, #15
  40071e:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400720:	4630      	mov	r0, r6
  400722:	4b04      	ldr	r3, [pc, #16]	; (400734 <gfx_mono_ssd1306_put_byte+0x4c>)
  400724:	4798      	blx	r3
  400726:	bd70      	pop	{r4, r5, r6, pc}
  400728:	004004dd 	.word	0x004004dd
  40072c:	004004cd 	.word	0x004004cd
  400730:	004007f9 	.word	0x004007f9
  400734:	00400a19 	.word	0x00400a19

00400738 <gfx_mono_ssd1306_init>:
{
  400738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  40073c:	480d      	ldr	r0, [pc, #52]	; (400774 <gfx_mono_ssd1306_init+0x3c>)
  40073e:	4b0e      	ldr	r3, [pc, #56]	; (400778 <gfx_mono_ssd1306_init+0x40>)
  400740:	4798      	blx	r3
	ssd1306_init();
  400742:	4b0e      	ldr	r3, [pc, #56]	; (40077c <gfx_mono_ssd1306_init+0x44>)
  400744:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400746:	2040      	movs	r0, #64	; 0x40
  400748:	4b0d      	ldr	r3, [pc, #52]	; (400780 <gfx_mono_ssd1306_init+0x48>)
  40074a:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40074c:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40074e:	f04f 0801 	mov.w	r8, #1
  400752:	462f      	mov	r7, r5
  400754:	4e0b      	ldr	r6, [pc, #44]	; (400784 <gfx_mono_ssd1306_init+0x4c>)
{
  400756:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400758:	4643      	mov	r3, r8
  40075a:	463a      	mov	r2, r7
  40075c:	b2e1      	uxtb	r1, r4
  40075e:	4628      	mov	r0, r5
  400760:	47b0      	blx	r6
  400762:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400764:	2c80      	cmp	r4, #128	; 0x80
  400766:	d1f7      	bne.n	400758 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400768:	3501      	adds	r5, #1
  40076a:	b2ed      	uxtb	r5, r5
  40076c:	2d04      	cmp	r5, #4
  40076e:	d1f2      	bne.n	400756 <gfx_mono_ssd1306_init+0x1e>
  400770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400774:	204009f4 	.word	0x204009f4
  400778:	004004c1 	.word	0x004004c1
  40077c:	00400839 	.word	0x00400839
  400780:	004007f9 	.word	0x004007f9
  400784:	004006e9 	.word	0x004006e9

00400788 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400788:	09c3      	lsrs	r3, r0, #7
  40078a:	d12a      	bne.n	4007e2 <gfx_mono_ssd1306_draw_pixel+0x5a>
  40078c:	291f      	cmp	r1, #31
  40078e:	d828      	bhi.n	4007e2 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400794:	4614      	mov	r4, r2
  400796:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400798:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40079a:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40079e:	2201      	movs	r2, #1
  4007a0:	fa02 f701 	lsl.w	r7, r2, r1
  4007a4:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4007a8:	4601      	mov	r1, r0
  4007aa:	4630      	mov	r0, r6
  4007ac:	4b0d      	ldr	r3, [pc, #52]	; (4007e4 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4007ae:	4798      	blx	r3
  4007b0:	4602      	mov	r2, r0
	switch (color) {
  4007b2:	2c01      	cmp	r4, #1
  4007b4:	d009      	beq.n	4007ca <gfx_mono_ssd1306_draw_pixel+0x42>
  4007b6:	b164      	cbz	r4, 4007d2 <gfx_mono_ssd1306_draw_pixel+0x4a>
  4007b8:	2c02      	cmp	r4, #2
  4007ba:	d00e      	beq.n	4007da <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4007bc:	2300      	movs	r3, #0
  4007be:	4629      	mov	r1, r5
  4007c0:	4630      	mov	r0, r6
  4007c2:	4c09      	ldr	r4, [pc, #36]	; (4007e8 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4007c4:	47a0      	blx	r4
  4007c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4007ca:	ea48 0200 	orr.w	r2, r8, r0
  4007ce:	b2d2      	uxtb	r2, r2
		break;
  4007d0:	e7f4      	b.n	4007bc <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4007d2:	ea20 0207 	bic.w	r2, r0, r7
  4007d6:	b2d2      	uxtb	r2, r2
		break;
  4007d8:	e7f0      	b.n	4007bc <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4007da:	ea88 0200 	eor.w	r2, r8, r0
  4007de:	b2d2      	uxtb	r2, r2
		break;
  4007e0:	e7ec      	b.n	4007bc <gfx_mono_ssd1306_draw_pixel+0x34>
  4007e2:	4770      	bx	lr
  4007e4:	004004dd 	.word	0x004004dd
  4007e8:	004006e9 	.word	0x004006e9

004007ec <gfx_mono_ssd1306_get_byte>:
{
  4007ec:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4007ee:	4b01      	ldr	r3, [pc, #4]	; (4007f4 <gfx_mono_ssd1306_get_byte+0x8>)
  4007f0:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4007f2:	bd08      	pop	{r3, pc}
  4007f4:	004004dd 	.word	0x004004dd

004007f8 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4007f8:	b538      	push	{r3, r4, r5, lr}
  4007fa:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4007fc:	2208      	movs	r2, #8
  4007fe:	4b09      	ldr	r3, [pc, #36]	; (400824 <ssd1306_write_command+0x2c>)
  400800:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400802:	4c09      	ldr	r4, [pc, #36]	; (400828 <ssd1306_write_command+0x30>)
  400804:	2101      	movs	r1, #1
  400806:	4620      	mov	r0, r4
  400808:	4b08      	ldr	r3, [pc, #32]	; (40082c <ssd1306_write_command+0x34>)
  40080a:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  40080c:	2301      	movs	r3, #1
  40080e:	461a      	mov	r2, r3
  400810:	4629      	mov	r1, r5
  400812:	4620      	mov	r0, r4
  400814:	4c06      	ldr	r4, [pc, #24]	; (400830 <ssd1306_write_command+0x38>)
  400816:	47a0      	blx	r4
	delay_us(10);
  400818:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  40081c:	4b05      	ldr	r3, [pc, #20]	; (400834 <ssd1306_write_command+0x3c>)
  40081e:	4798      	blx	r3
  400820:	bd38      	pop	{r3, r4, r5, pc}
  400822:	bf00      	nop
  400824:	400e1000 	.word	0x400e1000
  400828:	40008000 	.word	0x40008000
  40082c:	004002f9 	.word	0x004002f9
  400830:	0040030f 	.word	0x0040030f
  400834:	20400001 	.word	0x20400001

00400838 <ssd1306_init>:
{
  400838:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40083c:	4d66      	ldr	r5, [pc, #408]	; (4009d8 <ssd1306_init+0x1a0>)
  40083e:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400842:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400844:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400848:	4b64      	ldr	r3, [pc, #400]	; (4009dc <ssd1306_init+0x1a4>)
  40084a:	2708      	movs	r7, #8
  40084c:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40084e:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400852:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400854:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400858:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40085a:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40085c:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400860:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400862:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400866:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400868:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40086a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40086e:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400870:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400872:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400876:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400878:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40087a:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40087e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400880:	f022 0208 	bic.w	r2, r2, #8
  400884:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400886:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400888:	f022 0208 	bic.w	r2, r2, #8
  40088c:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40088e:	601f      	str	r7, [r3, #0]
  400890:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400892:	631f      	str	r7, [r3, #48]	; 0x30
  400894:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400896:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400a14 <ssd1306_init+0x1dc>
  40089a:	2300      	movs	r3, #0
  40089c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008a4:	4640      	mov	r0, r8
  4008a6:	4c4e      	ldr	r4, [pc, #312]	; (4009e0 <ssd1306_init+0x1a8>)
  4008a8:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008aa:	2300      	movs	r3, #0
  4008ac:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008b4:	4640      	mov	r0, r8
  4008b6:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008b8:	2300      	movs	r3, #0
  4008ba:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008be:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008c2:	4640      	mov	r0, r8
  4008c4:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008c6:	2300      	movs	r3, #0
  4008c8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008cc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008d0:	4640      	mov	r0, r8
  4008d2:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008d4:	2300      	movs	r3, #0
  4008d6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008da:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008de:	4640      	mov	r0, r8
  4008e0:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008e2:	2300      	movs	r3, #0
  4008e4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008e8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008ec:	4640      	mov	r0, r8
  4008ee:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4008f0:	4c3c      	ldr	r4, [pc, #240]	; (4009e4 <ssd1306_init+0x1ac>)
  4008f2:	f04f 0902 	mov.w	r9, #2
  4008f6:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4008fa:	f04f 0880 	mov.w	r8, #128	; 0x80
  4008fe:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400902:	6863      	ldr	r3, [r4, #4]
  400904:	f043 0301 	orr.w	r3, r3, #1
  400908:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  40090a:	463a      	mov	r2, r7
  40090c:	2101      	movs	r1, #1
  40090e:	4620      	mov	r0, r4
  400910:	4b35      	ldr	r3, [pc, #212]	; (4009e8 <ssd1306_init+0x1b0>)
  400912:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400914:	2200      	movs	r2, #0
  400916:	2101      	movs	r1, #1
  400918:	4620      	mov	r0, r4
  40091a:	4b34      	ldr	r3, [pc, #208]	; (4009ec <ssd1306_init+0x1b4>)
  40091c:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  40091e:	2200      	movs	r2, #0
  400920:	2101      	movs	r1, #1
  400922:	4620      	mov	r0, r4
  400924:	4b32      	ldr	r3, [pc, #200]	; (4009f0 <ssd1306_init+0x1b8>)
  400926:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400928:	6863      	ldr	r3, [r4, #4]
  40092a:	f023 0302 	bic.w	r3, r3, #2
  40092e:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400930:	2200      	movs	r2, #0
  400932:	2101      	movs	r1, #1
  400934:	4620      	mov	r0, r4
  400936:	4b2f      	ldr	r3, [pc, #188]	; (4009f4 <ssd1306_init+0x1bc>)
  400938:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  40093a:	6863      	ldr	r3, [r4, #4]
  40093c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400940:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400942:	6863      	ldr	r3, [r4, #4]
  400944:	f043 0310 	orr.w	r3, r3, #16
  400948:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  40094a:	492b      	ldr	r1, [pc, #172]	; (4009f8 <ssd1306_init+0x1c0>)
  40094c:	482b      	ldr	r0, [pc, #172]	; (4009fc <ssd1306_init+0x1c4>)
  40094e:	4b2c      	ldr	r3, [pc, #176]	; (400a00 <ssd1306_init+0x1c8>)
  400950:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400952:	b2c2      	uxtb	r2, r0
  400954:	2101      	movs	r1, #1
  400956:	4620      	mov	r0, r4
  400958:	4b2a      	ldr	r3, [pc, #168]	; (400a04 <ssd1306_init+0x1cc>)
  40095a:	4798      	blx	r3
		spi_enable_clock(SPI0);
  40095c:	4620      	mov	r0, r4
  40095e:	4b2a      	ldr	r3, [pc, #168]	; (400a08 <ssd1306_init+0x1d0>)
  400960:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400962:	2301      	movs	r3, #1
  400964:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400966:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400968:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40096c:	4c27      	ldr	r4, [pc, #156]	; (400a0c <ssd1306_init+0x1d4>)
  40096e:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400970:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400972:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400976:	47a0      	blx	r4
  400978:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  40097a:	20a8      	movs	r0, #168	; 0xa8
  40097c:	4c24      	ldr	r4, [pc, #144]	; (400a10 <ssd1306_init+0x1d8>)
  40097e:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400980:	201f      	movs	r0, #31
  400982:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400984:	20d3      	movs	r0, #211	; 0xd3
  400986:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400988:	2000      	movs	r0, #0
  40098a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  40098c:	2040      	movs	r0, #64	; 0x40
  40098e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400990:	20a1      	movs	r0, #161	; 0xa1
  400992:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400994:	20c8      	movs	r0, #200	; 0xc8
  400996:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400998:	20da      	movs	r0, #218	; 0xda
  40099a:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  40099c:	4648      	mov	r0, r9
  40099e:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4009a0:	2081      	movs	r0, #129	; 0x81
  4009a2:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4009a4:	208f      	movs	r0, #143	; 0x8f
  4009a6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4009a8:	20a4      	movs	r0, #164	; 0xa4
  4009aa:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4009ac:	20a6      	movs	r0, #166	; 0xa6
  4009ae:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4009b0:	20d5      	movs	r0, #213	; 0xd5
  4009b2:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4009b4:	4640      	mov	r0, r8
  4009b6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4009b8:	208d      	movs	r0, #141	; 0x8d
  4009ba:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4009bc:	2014      	movs	r0, #20
  4009be:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4009c0:	20db      	movs	r0, #219	; 0xdb
  4009c2:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4009c4:	2040      	movs	r0, #64	; 0x40
  4009c6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4009c8:	20d9      	movs	r0, #217	; 0xd9
  4009ca:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4009cc:	20f1      	movs	r0, #241	; 0xf1
  4009ce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4009d0:	20af      	movs	r0, #175	; 0xaf
  4009d2:	47a0      	blx	r4
  4009d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4009d8:	400e1200 	.word	0x400e1200
  4009dc:	400e1000 	.word	0x400e1000
  4009e0:	00400d1d 	.word	0x00400d1d
  4009e4:	40008000 	.word	0x40008000
  4009e8:	0040037f 	.word	0x0040037f
  4009ec:	00400343 	.word	0x00400343
  4009f0:	00400361 	.word	0x00400361
  4009f4:	004003c5 	.word	0x004003c5
  4009f8:	08f0d180 	.word	0x08f0d180
  4009fc:	000f4240 	.word	0x000f4240
  400a00:	004003d9 	.word	0x004003d9
  400a04:	004003ef 	.word	0x004003ef
  400a08:	004002cd 	.word	0x004002cd
  400a0c:	20400001 	.word	0x20400001
  400a10:	004007f9 	.word	0x004007f9
  400a14:	400e1400 	.word	0x400e1400

00400a18 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400a18:	b538      	push	{r3, r4, r5, lr}
  400a1a:	4605      	mov	r5, r0
  400a1c:	2208      	movs	r2, #8
  400a1e:	4b09      	ldr	r3, [pc, #36]	; (400a44 <ssd1306_write_data+0x2c>)
  400a20:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a22:	4c09      	ldr	r4, [pc, #36]	; (400a48 <ssd1306_write_data+0x30>)
  400a24:	2101      	movs	r1, #1
  400a26:	4620      	mov	r0, r4
  400a28:	4b08      	ldr	r3, [pc, #32]	; (400a4c <ssd1306_write_data+0x34>)
  400a2a:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400a2c:	2301      	movs	r3, #1
  400a2e:	461a      	mov	r2, r3
  400a30:	4629      	mov	r1, r5
  400a32:	4620      	mov	r0, r4
  400a34:	4c06      	ldr	r4, [pc, #24]	; (400a50 <ssd1306_write_data+0x38>)
  400a36:	47a0      	blx	r4
	delay_us(10);
  400a38:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400a3c:	4b05      	ldr	r3, [pc, #20]	; (400a54 <ssd1306_write_data+0x3c>)
  400a3e:	4798      	blx	r3
  400a40:	bd38      	pop	{r3, r4, r5, pc}
  400a42:	bf00      	nop
  400a44:	400e1000 	.word	0x400e1000
  400a48:	40008000 	.word	0x40008000
  400a4c:	004002f9 	.word	0x004002f9
  400a50:	0040030f 	.word	0x0040030f
  400a54:	20400001 	.word	0x20400001

00400a58 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400a58:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400a5a:	4810      	ldr	r0, [pc, #64]	; (400a9c <sysclk_init+0x44>)
  400a5c:	4b10      	ldr	r3, [pc, #64]	; (400aa0 <sysclk_init+0x48>)
  400a5e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400a60:	213e      	movs	r1, #62	; 0x3e
  400a62:	2000      	movs	r0, #0
  400a64:	4b0f      	ldr	r3, [pc, #60]	; (400aa4 <sysclk_init+0x4c>)
  400a66:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400a68:	4c0f      	ldr	r4, [pc, #60]	; (400aa8 <sysclk_init+0x50>)
  400a6a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400a6c:	2800      	cmp	r0, #0
  400a6e:	d0fc      	beq.n	400a6a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400a70:	4b0e      	ldr	r3, [pc, #56]	; (400aac <sysclk_init+0x54>)
  400a72:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400a74:	4a0e      	ldr	r2, [pc, #56]	; (400ab0 <sysclk_init+0x58>)
  400a76:	4b0f      	ldr	r3, [pc, #60]	; (400ab4 <sysclk_init+0x5c>)
  400a78:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400a7a:	4c0f      	ldr	r4, [pc, #60]	; (400ab8 <sysclk_init+0x60>)
  400a7c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400a7e:	2800      	cmp	r0, #0
  400a80:	d0fc      	beq.n	400a7c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400a82:	2002      	movs	r0, #2
  400a84:	4b0d      	ldr	r3, [pc, #52]	; (400abc <sysclk_init+0x64>)
  400a86:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400a88:	2000      	movs	r0, #0
  400a8a:	4b0d      	ldr	r3, [pc, #52]	; (400ac0 <sysclk_init+0x68>)
  400a8c:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400a8e:	4b0d      	ldr	r3, [pc, #52]	; (400ac4 <sysclk_init+0x6c>)
  400a90:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400a92:	4802      	ldr	r0, [pc, #8]	; (400a9c <sysclk_init+0x44>)
  400a94:	4b02      	ldr	r3, [pc, #8]	; (400aa0 <sysclk_init+0x48>)
  400a96:	4798      	blx	r3
  400a98:	bd10      	pop	{r4, pc}
  400a9a:	bf00      	nop
  400a9c:	11e1a300 	.word	0x11e1a300
  400aa0:	00401269 	.word	0x00401269
  400aa4:	00400fb9 	.word	0x00400fb9
  400aa8:	0040100d 	.word	0x0040100d
  400aac:	0040101d 	.word	0x0040101d
  400ab0:	20183f01 	.word	0x20183f01
  400ab4:	400e0600 	.word	0x400e0600
  400ab8:	0040102d 	.word	0x0040102d
  400abc:	00400f1d 	.word	0x00400f1d
  400ac0:	00400f55 	.word	0x00400f55
  400ac4:	0040115d 	.word	0x0040115d

00400ac8 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400aca:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400ace:	4b48      	ldr	r3, [pc, #288]	; (400bf0 <board_init+0x128>)
  400ad0:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400ad2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ad6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400ada:	4b46      	ldr	r3, [pc, #280]	; (400bf4 <board_init+0x12c>)
  400adc:	2200      	movs	r2, #0
  400ade:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400ae2:	695a      	ldr	r2, [r3, #20]
  400ae4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400ae8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400aea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400aee:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400af2:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400af6:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400afa:	f007 0007 	and.w	r0, r7, #7
  400afe:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400b00:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400b04:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400b08:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400b0c:	f3bf 8f4f 	dsb	sy
  400b10:	f04f 34ff 	mov.w	r4, #4294967295
  400b14:	fa04 fc00 	lsl.w	ip, r4, r0
  400b18:	fa06 f000 	lsl.w	r0, r6, r0
  400b1c:	fa04 f40e 	lsl.w	r4, r4, lr
  400b20:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400b24:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400b26:	463a      	mov	r2, r7
  400b28:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400b2a:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400b2e:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400b32:	3a01      	subs	r2, #1
  400b34:	4423      	add	r3, r4
  400b36:	f1b2 3fff 	cmp.w	r2, #4294967295
  400b3a:	d1f6      	bne.n	400b2a <board_init+0x62>
        } while(sets--);
  400b3c:	3e01      	subs	r6, #1
  400b3e:	4460      	add	r0, ip
  400b40:	f1b6 3fff 	cmp.w	r6, #4294967295
  400b44:	d1ef      	bne.n	400b26 <board_init+0x5e>
  400b46:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400b4a:	4b2a      	ldr	r3, [pc, #168]	; (400bf4 <board_init+0x12c>)
  400b4c:	695a      	ldr	r2, [r3, #20]
  400b4e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400b52:	615a      	str	r2, [r3, #20]
  400b54:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b58:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b5c:	4a26      	ldr	r2, [pc, #152]	; (400bf8 <board_init+0x130>)
  400b5e:	4927      	ldr	r1, [pc, #156]	; (400bfc <board_init+0x134>)
  400b60:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b62:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400b66:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400b68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b6c:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400b70:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400b74:	f022 0201 	bic.w	r2, r2, #1
  400b78:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400b7c:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400b80:	f022 0201 	bic.w	r2, r2, #1
  400b84:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400b88:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b8c:	f3bf 8f6f 	isb	sy
  400b90:	200a      	movs	r0, #10
  400b92:	4c1b      	ldr	r4, [pc, #108]	; (400c00 <board_init+0x138>)
  400b94:	47a0      	blx	r4
  400b96:	200b      	movs	r0, #11
  400b98:	47a0      	blx	r4
  400b9a:	200c      	movs	r0, #12
  400b9c:	47a0      	blx	r4
  400b9e:	2010      	movs	r0, #16
  400ba0:	47a0      	blx	r4
  400ba2:	2011      	movs	r0, #17
  400ba4:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400ba6:	4b17      	ldr	r3, [pc, #92]	; (400c04 <board_init+0x13c>)
  400ba8:	f44f 7280 	mov.w	r2, #256	; 0x100
  400bac:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bae:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bb2:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400bb4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400bb8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400bbc:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bbe:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400bc2:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400bc4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400bc8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400bca:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400bcc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400bd0:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400bd2:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400bd6:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400bd8:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400bda:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400bde:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400be0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400be4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400be8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400bec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400bee:	bf00      	nop
  400bf0:	400e1850 	.word	0x400e1850
  400bf4:	e000ed00 	.word	0xe000ed00
  400bf8:	400e0c00 	.word	0x400e0c00
  400bfc:	5a00080c 	.word	0x5a00080c
  400c00:	0040103d 	.word	0x0040103d
  400c04:	400e1200 	.word	0x400e1200

00400c08 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400c08:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400c0c:	0053      	lsls	r3, r2, #1
  400c0e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400c12:	fbb2 f2f3 	udiv	r2, r2, r3
  400c16:	3a01      	subs	r2, #1
  400c18:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400c1c:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400c20:	4770      	bx	lr

00400c22 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400c22:	6301      	str	r1, [r0, #48]	; 0x30
  400c24:	4770      	bx	lr

00400c26 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400c26:	6341      	str	r1, [r0, #52]	; 0x34
  400c28:	4770      	bx	lr

00400c2a <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400c2a:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400c2c:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c30:	d03a      	beq.n	400ca8 <pio_set_peripheral+0x7e>
  400c32:	d813      	bhi.n	400c5c <pio_set_peripheral+0x32>
  400c34:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c38:	d025      	beq.n	400c86 <pio_set_peripheral+0x5c>
  400c3a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c3e:	d10a      	bne.n	400c56 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c40:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c42:	4313      	orrs	r3, r2
  400c44:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400c46:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c48:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c4a:	400b      	ands	r3, r1
  400c4c:	ea23 0302 	bic.w	r3, r3, r2
  400c50:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400c52:	6042      	str	r2, [r0, #4]
  400c54:	4770      	bx	lr
	switch (ul_type) {
  400c56:	2900      	cmp	r1, #0
  400c58:	d1fb      	bne.n	400c52 <pio_set_peripheral+0x28>
  400c5a:	4770      	bx	lr
  400c5c:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c60:	d021      	beq.n	400ca6 <pio_set_peripheral+0x7c>
  400c62:	d809      	bhi.n	400c78 <pio_set_peripheral+0x4e>
  400c64:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c68:	d1f3      	bne.n	400c52 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c6a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c6c:	4313      	orrs	r3, r2
  400c6e:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c70:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c72:	4313      	orrs	r3, r2
  400c74:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c76:	e7ec      	b.n	400c52 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400c78:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c7c:	d013      	beq.n	400ca6 <pio_set_peripheral+0x7c>
  400c7e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c82:	d010      	beq.n	400ca6 <pio_set_peripheral+0x7c>
  400c84:	e7e5      	b.n	400c52 <pio_set_peripheral+0x28>
{
  400c86:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c88:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c8a:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400c8c:	43d3      	mvns	r3, r2
  400c8e:	4021      	ands	r1, r4
  400c90:	461c      	mov	r4, r3
  400c92:	4019      	ands	r1, r3
  400c94:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c96:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c98:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c9a:	400b      	ands	r3, r1
  400c9c:	4023      	ands	r3, r4
  400c9e:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400ca0:	6042      	str	r2, [r0, #4]
}
  400ca2:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ca6:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ca8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400caa:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400cac:	400b      	ands	r3, r1
  400cae:	ea23 0302 	bic.w	r3, r3, r2
  400cb2:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cb4:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400cb6:	4313      	orrs	r3, r2
  400cb8:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400cba:	e7ca      	b.n	400c52 <pio_set_peripheral+0x28>

00400cbc <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400cbc:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400cbe:	f012 0f01 	tst.w	r2, #1
  400cc2:	d10d      	bne.n	400ce0 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400cc4:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400cc6:	f012 0f0a 	tst.w	r2, #10
  400cca:	d00b      	beq.n	400ce4 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400ccc:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400cce:	f012 0f02 	tst.w	r2, #2
  400cd2:	d109      	bne.n	400ce8 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400cd4:	f012 0f08 	tst.w	r2, #8
  400cd8:	d008      	beq.n	400cec <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400cda:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400cde:	e005      	b.n	400cec <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400ce0:	6641      	str	r1, [r0, #100]	; 0x64
  400ce2:	e7f0      	b.n	400cc6 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400ce4:	6241      	str	r1, [r0, #36]	; 0x24
  400ce6:	e7f2      	b.n	400cce <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400ce8:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400cec:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400cee:	6001      	str	r1, [r0, #0]
  400cf0:	4770      	bx	lr

00400cf2 <pio_set_output>:
{
  400cf2:	b410      	push	{r4}
  400cf4:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400cf6:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400cf8:	b94c      	cbnz	r4, 400d0e <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400cfa:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400cfc:	b14b      	cbz	r3, 400d12 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400cfe:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d00:	b94a      	cbnz	r2, 400d16 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400d02:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d04:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d06:	6001      	str	r1, [r0, #0]
}
  400d08:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d0c:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400d0e:	6641      	str	r1, [r0, #100]	; 0x64
  400d10:	e7f4      	b.n	400cfc <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400d12:	6541      	str	r1, [r0, #84]	; 0x54
  400d14:	e7f4      	b.n	400d00 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400d16:	6301      	str	r1, [r0, #48]	; 0x30
  400d18:	e7f4      	b.n	400d04 <pio_set_output+0x12>
	...

00400d1c <pio_configure>:
{
  400d1c:	b570      	push	{r4, r5, r6, lr}
  400d1e:	b082      	sub	sp, #8
  400d20:	4605      	mov	r5, r0
  400d22:	4616      	mov	r6, r2
  400d24:	461c      	mov	r4, r3
	switch (ul_type) {
  400d26:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d2a:	d014      	beq.n	400d56 <pio_configure+0x3a>
  400d2c:	d90a      	bls.n	400d44 <pio_configure+0x28>
  400d2e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d32:	d024      	beq.n	400d7e <pio_configure+0x62>
  400d34:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d38:	d021      	beq.n	400d7e <pio_configure+0x62>
  400d3a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d3e:	d017      	beq.n	400d70 <pio_configure+0x54>
		return 0;
  400d40:	2000      	movs	r0, #0
  400d42:	e01a      	b.n	400d7a <pio_configure+0x5e>
	switch (ul_type) {
  400d44:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d48:	d005      	beq.n	400d56 <pio_configure+0x3a>
  400d4a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d4e:	d002      	beq.n	400d56 <pio_configure+0x3a>
  400d50:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d54:	d1f4      	bne.n	400d40 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400d56:	4632      	mov	r2, r6
  400d58:	4628      	mov	r0, r5
  400d5a:	4b11      	ldr	r3, [pc, #68]	; (400da0 <pio_configure+0x84>)
  400d5c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d5e:	f014 0f01 	tst.w	r4, #1
  400d62:	d102      	bne.n	400d6a <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400d64:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400d66:	2001      	movs	r0, #1
  400d68:	e007      	b.n	400d7a <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400d6a:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400d6c:	2001      	movs	r0, #1
  400d6e:	e004      	b.n	400d7a <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400d70:	461a      	mov	r2, r3
  400d72:	4631      	mov	r1, r6
  400d74:	4b0b      	ldr	r3, [pc, #44]	; (400da4 <pio_configure+0x88>)
  400d76:	4798      	blx	r3
	return 1;
  400d78:	2001      	movs	r0, #1
}
  400d7a:	b002      	add	sp, #8
  400d7c:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400d7e:	f004 0301 	and.w	r3, r4, #1
  400d82:	9300      	str	r3, [sp, #0]
  400d84:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400d88:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d8c:	bf14      	ite	ne
  400d8e:	2200      	movne	r2, #0
  400d90:	2201      	moveq	r2, #1
  400d92:	4631      	mov	r1, r6
  400d94:	4628      	mov	r0, r5
  400d96:	4c04      	ldr	r4, [pc, #16]	; (400da8 <pio_configure+0x8c>)
  400d98:	47a0      	blx	r4
	return 1;
  400d9a:	2001      	movs	r0, #1
		break;
  400d9c:	e7ed      	b.n	400d7a <pio_configure+0x5e>
  400d9e:	bf00      	nop
  400da0:	00400c2b 	.word	0x00400c2b
  400da4:	00400cbd 	.word	0x00400cbd
  400da8:	00400cf3 	.word	0x00400cf3

00400dac <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400dac:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400dae:	420b      	tst	r3, r1
}
  400db0:	bf14      	ite	ne
  400db2:	2001      	movne	r0, #1
  400db4:	2000      	moveq	r0, #0
  400db6:	4770      	bx	lr

00400db8 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400db8:	f012 0f10 	tst.w	r2, #16
  400dbc:	d012      	beq.n	400de4 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400dbe:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400dc2:	f012 0f20 	tst.w	r2, #32
  400dc6:	d007      	beq.n	400dd8 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400dc8:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400dcc:	f012 0f40 	tst.w	r2, #64	; 0x40
  400dd0:	d005      	beq.n	400dde <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400dd2:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400dd6:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400dd8:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ddc:	e7f6      	b.n	400dcc <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400dde:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400de2:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400de4:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400de8:	4770      	bx	lr

00400dea <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400dea:	6401      	str	r1, [r0, #64]	; 0x40
  400dec:	4770      	bx	lr

00400dee <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400dee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400df0:	4770      	bx	lr

00400df2 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400df2:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400df4:	4770      	bx	lr
	...

00400df8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400dfc:	4604      	mov	r4, r0
  400dfe:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400e00:	4b0e      	ldr	r3, [pc, #56]	; (400e3c <pio_handler_process+0x44>)
  400e02:	4798      	blx	r3
  400e04:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e06:	4620      	mov	r0, r4
  400e08:	4b0d      	ldr	r3, [pc, #52]	; (400e40 <pio_handler_process+0x48>)
  400e0a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400e0c:	4005      	ands	r5, r0
  400e0e:	d013      	beq.n	400e38 <pio_handler_process+0x40>
  400e10:	4c0c      	ldr	r4, [pc, #48]	; (400e44 <pio_handler_process+0x4c>)
  400e12:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400e16:	e003      	b.n	400e20 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e18:	42b4      	cmp	r4, r6
  400e1a:	d00d      	beq.n	400e38 <pio_handler_process+0x40>
  400e1c:	3410      	adds	r4, #16
		while (status != 0) {
  400e1e:	b15d      	cbz	r5, 400e38 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e20:	6820      	ldr	r0, [r4, #0]
  400e22:	4540      	cmp	r0, r8
  400e24:	d1f8      	bne.n	400e18 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e26:	6861      	ldr	r1, [r4, #4]
  400e28:	4229      	tst	r1, r5
  400e2a:	d0f5      	beq.n	400e18 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e2c:	68e3      	ldr	r3, [r4, #12]
  400e2e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e30:	6863      	ldr	r3, [r4, #4]
  400e32:	ea25 0503 	bic.w	r5, r5, r3
  400e36:	e7ef      	b.n	400e18 <pio_handler_process+0x20>
  400e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e3c:	00400def 	.word	0x00400def
  400e40:	00400df3 	.word	0x00400df3
  400e44:	20400bf4 	.word	0x20400bf4

00400e48 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400e4a:	4c18      	ldr	r4, [pc, #96]	; (400eac <pio_handler_set+0x64>)
  400e4c:	6826      	ldr	r6, [r4, #0]
  400e4e:	2e06      	cmp	r6, #6
  400e50:	d82a      	bhi.n	400ea8 <pio_handler_set+0x60>
  400e52:	f04f 0c00 	mov.w	ip, #0
  400e56:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e58:	4f15      	ldr	r7, [pc, #84]	; (400eb0 <pio_handler_set+0x68>)
  400e5a:	e004      	b.n	400e66 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e5c:	3401      	adds	r4, #1
  400e5e:	b2e4      	uxtb	r4, r4
  400e60:	46a4      	mov	ip, r4
  400e62:	42a6      	cmp	r6, r4
  400e64:	d309      	bcc.n	400e7a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e66:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e68:	0125      	lsls	r5, r4, #4
  400e6a:	597d      	ldr	r5, [r7, r5]
  400e6c:	428d      	cmp	r5, r1
  400e6e:	d1f5      	bne.n	400e5c <pio_handler_set+0x14>
  400e70:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400e74:	686d      	ldr	r5, [r5, #4]
  400e76:	4295      	cmp	r5, r2
  400e78:	d1f0      	bne.n	400e5c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400e7a:	4d0d      	ldr	r5, [pc, #52]	; (400eb0 <pio_handler_set+0x68>)
  400e7c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400e80:	eb05 040e 	add.w	r4, r5, lr
  400e84:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400e88:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400e8a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400e8c:	9906      	ldr	r1, [sp, #24]
  400e8e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400e90:	3601      	adds	r6, #1
  400e92:	4566      	cmp	r6, ip
  400e94:	d005      	beq.n	400ea2 <pio_handler_set+0x5a>
  400e96:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400e98:	461a      	mov	r2, r3
  400e9a:	4b06      	ldr	r3, [pc, #24]	; (400eb4 <pio_handler_set+0x6c>)
  400e9c:	4798      	blx	r3

	return 0;
  400e9e:	2000      	movs	r0, #0
  400ea0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400ea2:	4902      	ldr	r1, [pc, #8]	; (400eac <pio_handler_set+0x64>)
  400ea4:	600e      	str	r6, [r1, #0]
  400ea6:	e7f6      	b.n	400e96 <pio_handler_set+0x4e>
		return 1;
  400ea8:	2001      	movs	r0, #1
}
  400eaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400eac:	20400c64 	.word	0x20400c64
  400eb0:	20400bf4 	.word	0x20400bf4
  400eb4:	00400db9 	.word	0x00400db9

00400eb8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400eb8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400eba:	210a      	movs	r1, #10
  400ebc:	4801      	ldr	r0, [pc, #4]	; (400ec4 <PIOA_Handler+0xc>)
  400ebe:	4b02      	ldr	r3, [pc, #8]	; (400ec8 <PIOA_Handler+0x10>)
  400ec0:	4798      	blx	r3
  400ec2:	bd08      	pop	{r3, pc}
  400ec4:	400e0e00 	.word	0x400e0e00
  400ec8:	00400df9 	.word	0x00400df9

00400ecc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400ecc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400ece:	210b      	movs	r1, #11
  400ed0:	4801      	ldr	r0, [pc, #4]	; (400ed8 <PIOB_Handler+0xc>)
  400ed2:	4b02      	ldr	r3, [pc, #8]	; (400edc <PIOB_Handler+0x10>)
  400ed4:	4798      	blx	r3
  400ed6:	bd08      	pop	{r3, pc}
  400ed8:	400e1000 	.word	0x400e1000
  400edc:	00400df9 	.word	0x00400df9

00400ee0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400ee0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400ee2:	210c      	movs	r1, #12
  400ee4:	4801      	ldr	r0, [pc, #4]	; (400eec <PIOC_Handler+0xc>)
  400ee6:	4b02      	ldr	r3, [pc, #8]	; (400ef0 <PIOC_Handler+0x10>)
  400ee8:	4798      	blx	r3
  400eea:	bd08      	pop	{r3, pc}
  400eec:	400e1200 	.word	0x400e1200
  400ef0:	00400df9 	.word	0x00400df9

00400ef4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400ef4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400ef6:	2110      	movs	r1, #16
  400ef8:	4801      	ldr	r0, [pc, #4]	; (400f00 <PIOD_Handler+0xc>)
  400efa:	4b02      	ldr	r3, [pc, #8]	; (400f04 <PIOD_Handler+0x10>)
  400efc:	4798      	blx	r3
  400efe:	bd08      	pop	{r3, pc}
  400f00:	400e1400 	.word	0x400e1400
  400f04:	00400df9 	.word	0x00400df9

00400f08 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400f08:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400f0a:	2111      	movs	r1, #17
  400f0c:	4801      	ldr	r0, [pc, #4]	; (400f14 <PIOE_Handler+0xc>)
  400f0e:	4b02      	ldr	r3, [pc, #8]	; (400f18 <PIOE_Handler+0x10>)
  400f10:	4798      	blx	r3
  400f12:	bd08      	pop	{r3, pc}
  400f14:	400e1600 	.word	0x400e1600
  400f18:	00400df9 	.word	0x00400df9

00400f1c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400f1c:	2803      	cmp	r0, #3
  400f1e:	d011      	beq.n	400f44 <pmc_mck_set_division+0x28>
  400f20:	2804      	cmp	r0, #4
  400f22:	d012      	beq.n	400f4a <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400f24:	2802      	cmp	r0, #2
  400f26:	bf0c      	ite	eq
  400f28:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f2c:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f2e:	4a08      	ldr	r2, [pc, #32]	; (400f50 <pmc_mck_set_division+0x34>)
  400f30:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f32:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f36:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f38:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f3a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f3c:	f013 0f08 	tst.w	r3, #8
  400f40:	d0fb      	beq.n	400f3a <pmc_mck_set_division+0x1e>
}
  400f42:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f44:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f48:	e7f1      	b.n	400f2e <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f4a:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f4e:	e7ee      	b.n	400f2e <pmc_mck_set_division+0x12>
  400f50:	400e0600 	.word	0x400e0600

00400f54 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400f54:	4a17      	ldr	r2, [pc, #92]	; (400fb4 <pmc_switch_mck_to_pllack+0x60>)
  400f56:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f5c:	4318      	orrs	r0, r3
  400f5e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f60:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f62:	f013 0f08 	tst.w	r3, #8
  400f66:	d10a      	bne.n	400f7e <pmc_switch_mck_to_pllack+0x2a>
  400f68:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f6c:	4911      	ldr	r1, [pc, #68]	; (400fb4 <pmc_switch_mck_to_pllack+0x60>)
  400f6e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f70:	f012 0f08 	tst.w	r2, #8
  400f74:	d103      	bne.n	400f7e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f76:	3b01      	subs	r3, #1
  400f78:	d1f9      	bne.n	400f6e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400f7a:	2001      	movs	r0, #1
  400f7c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400f7e:	4a0d      	ldr	r2, [pc, #52]	; (400fb4 <pmc_switch_mck_to_pllack+0x60>)
  400f80:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f82:	f023 0303 	bic.w	r3, r3, #3
  400f86:	f043 0302 	orr.w	r3, r3, #2
  400f8a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f8c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f8e:	f013 0f08 	tst.w	r3, #8
  400f92:	d10a      	bne.n	400faa <pmc_switch_mck_to_pllack+0x56>
  400f94:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f98:	4906      	ldr	r1, [pc, #24]	; (400fb4 <pmc_switch_mck_to_pllack+0x60>)
  400f9a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f9c:	f012 0f08 	tst.w	r2, #8
  400fa0:	d105      	bne.n	400fae <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fa2:	3b01      	subs	r3, #1
  400fa4:	d1f9      	bne.n	400f9a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400fa6:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400fa8:	4770      	bx	lr
	return 0;
  400faa:	2000      	movs	r0, #0
  400fac:	4770      	bx	lr
  400fae:	2000      	movs	r0, #0
  400fb0:	4770      	bx	lr
  400fb2:	bf00      	nop
  400fb4:	400e0600 	.word	0x400e0600

00400fb8 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400fb8:	b9a0      	cbnz	r0, 400fe4 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fba:	480e      	ldr	r0, [pc, #56]	; (400ff4 <pmc_switch_mainck_to_xtal+0x3c>)
  400fbc:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400fbe:	0209      	lsls	r1, r1, #8
  400fc0:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400fc2:	4a0d      	ldr	r2, [pc, #52]	; (400ff8 <pmc_switch_mainck_to_xtal+0x40>)
  400fc4:	401a      	ands	r2, r3
  400fc6:	4b0d      	ldr	r3, [pc, #52]	; (400ffc <pmc_switch_mainck_to_xtal+0x44>)
  400fc8:	4313      	orrs	r3, r2
  400fca:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fcc:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400fce:	4602      	mov	r2, r0
  400fd0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fd2:	f013 0f01 	tst.w	r3, #1
  400fd6:	d0fb      	beq.n	400fd0 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400fd8:	4a06      	ldr	r2, [pc, #24]	; (400ff4 <pmc_switch_mainck_to_xtal+0x3c>)
  400fda:	6a11      	ldr	r1, [r2, #32]
  400fdc:	4b08      	ldr	r3, [pc, #32]	; (401000 <pmc_switch_mainck_to_xtal+0x48>)
  400fde:	430b      	orrs	r3, r1
  400fe0:	6213      	str	r3, [r2, #32]
  400fe2:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400fe4:	4903      	ldr	r1, [pc, #12]	; (400ff4 <pmc_switch_mainck_to_xtal+0x3c>)
  400fe6:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400fe8:	4a06      	ldr	r2, [pc, #24]	; (401004 <pmc_switch_mainck_to_xtal+0x4c>)
  400fea:	401a      	ands	r2, r3
  400fec:	4b06      	ldr	r3, [pc, #24]	; (401008 <pmc_switch_mainck_to_xtal+0x50>)
  400fee:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ff0:	620b      	str	r3, [r1, #32]
  400ff2:	4770      	bx	lr
  400ff4:	400e0600 	.word	0x400e0600
  400ff8:	ffc8fffc 	.word	0xffc8fffc
  400ffc:	00370001 	.word	0x00370001
  401000:	01370000 	.word	0x01370000
  401004:	fec8fffc 	.word	0xfec8fffc
  401008:	01370002 	.word	0x01370002

0040100c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40100c:	4b02      	ldr	r3, [pc, #8]	; (401018 <pmc_osc_is_ready_mainck+0xc>)
  40100e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401010:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401014:	4770      	bx	lr
  401016:	bf00      	nop
  401018:	400e0600 	.word	0x400e0600

0040101c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  40101c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401020:	4b01      	ldr	r3, [pc, #4]	; (401028 <pmc_disable_pllack+0xc>)
  401022:	629a      	str	r2, [r3, #40]	; 0x28
  401024:	4770      	bx	lr
  401026:	bf00      	nop
  401028:	400e0600 	.word	0x400e0600

0040102c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  40102c:	4b02      	ldr	r3, [pc, #8]	; (401038 <pmc_is_locked_pllack+0xc>)
  40102e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401030:	f000 0002 	and.w	r0, r0, #2
  401034:	4770      	bx	lr
  401036:	bf00      	nop
  401038:	400e0600 	.word	0x400e0600

0040103c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  40103c:	283f      	cmp	r0, #63	; 0x3f
  40103e:	d81e      	bhi.n	40107e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401040:	281f      	cmp	r0, #31
  401042:	d80c      	bhi.n	40105e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401044:	4b11      	ldr	r3, [pc, #68]	; (40108c <pmc_enable_periph_clk+0x50>)
  401046:	699a      	ldr	r2, [r3, #24]
  401048:	2301      	movs	r3, #1
  40104a:	4083      	lsls	r3, r0
  40104c:	4393      	bics	r3, r2
  40104e:	d018      	beq.n	401082 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401050:	2301      	movs	r3, #1
  401052:	fa03 f000 	lsl.w	r0, r3, r0
  401056:	4b0d      	ldr	r3, [pc, #52]	; (40108c <pmc_enable_periph_clk+0x50>)
  401058:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40105a:	2000      	movs	r0, #0
  40105c:	4770      	bx	lr
		ul_id -= 32;
  40105e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401060:	4b0a      	ldr	r3, [pc, #40]	; (40108c <pmc_enable_periph_clk+0x50>)
  401062:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401066:	2301      	movs	r3, #1
  401068:	4083      	lsls	r3, r0
  40106a:	4393      	bics	r3, r2
  40106c:	d00b      	beq.n	401086 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40106e:	2301      	movs	r3, #1
  401070:	fa03 f000 	lsl.w	r0, r3, r0
  401074:	4b05      	ldr	r3, [pc, #20]	; (40108c <pmc_enable_periph_clk+0x50>)
  401076:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40107a:	2000      	movs	r0, #0
  40107c:	4770      	bx	lr
		return 1;
  40107e:	2001      	movs	r0, #1
  401080:	4770      	bx	lr
	return 0;
  401082:	2000      	movs	r0, #0
  401084:	4770      	bx	lr
  401086:	2000      	movs	r0, #0
}
  401088:	4770      	bx	lr
  40108a:	bf00      	nop
  40108c:	400e0600 	.word	0x400e0600

00401090 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401090:	e7fe      	b.n	401090 <Dummy_Handler>
	...

00401094 <Reset_Handler>:
{
  401094:	b500      	push	{lr}
  401096:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401098:	4b25      	ldr	r3, [pc, #148]	; (401130 <Reset_Handler+0x9c>)
  40109a:	4a26      	ldr	r2, [pc, #152]	; (401134 <Reset_Handler+0xa0>)
  40109c:	429a      	cmp	r2, r3
  40109e:	d010      	beq.n	4010c2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4010a0:	4b25      	ldr	r3, [pc, #148]	; (401138 <Reset_Handler+0xa4>)
  4010a2:	4a23      	ldr	r2, [pc, #140]	; (401130 <Reset_Handler+0x9c>)
  4010a4:	429a      	cmp	r2, r3
  4010a6:	d20c      	bcs.n	4010c2 <Reset_Handler+0x2e>
  4010a8:	3b01      	subs	r3, #1
  4010aa:	1a9b      	subs	r3, r3, r2
  4010ac:	f023 0303 	bic.w	r3, r3, #3
  4010b0:	3304      	adds	r3, #4
  4010b2:	4413      	add	r3, r2
  4010b4:	491f      	ldr	r1, [pc, #124]	; (401134 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4010b6:	f851 0b04 	ldr.w	r0, [r1], #4
  4010ba:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4010be:	429a      	cmp	r2, r3
  4010c0:	d1f9      	bne.n	4010b6 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4010c2:	4b1e      	ldr	r3, [pc, #120]	; (40113c <Reset_Handler+0xa8>)
  4010c4:	4a1e      	ldr	r2, [pc, #120]	; (401140 <Reset_Handler+0xac>)
  4010c6:	429a      	cmp	r2, r3
  4010c8:	d20a      	bcs.n	4010e0 <Reset_Handler+0x4c>
  4010ca:	3b01      	subs	r3, #1
  4010cc:	1a9b      	subs	r3, r3, r2
  4010ce:	f023 0303 	bic.w	r3, r3, #3
  4010d2:	3304      	adds	r3, #4
  4010d4:	4413      	add	r3, r2
                *pDest++ = 0;
  4010d6:	2100      	movs	r1, #0
  4010d8:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4010dc:	4293      	cmp	r3, r2
  4010de:	d1fb      	bne.n	4010d8 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4010e0:	4a18      	ldr	r2, [pc, #96]	; (401144 <Reset_Handler+0xb0>)
  4010e2:	4b19      	ldr	r3, [pc, #100]	; (401148 <Reset_Handler+0xb4>)
  4010e4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4010e8:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4010ea:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4010ee:	fab3 f383 	clz	r3, r3
  4010f2:	095b      	lsrs	r3, r3, #5
  4010f4:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4010f6:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4010f8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4010fc:	2200      	movs	r2, #0
  4010fe:	4b13      	ldr	r3, [pc, #76]	; (40114c <Reset_Handler+0xb8>)
  401100:	701a      	strb	r2, [r3, #0]
	return flags;
  401102:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401104:	4a12      	ldr	r2, [pc, #72]	; (401150 <Reset_Handler+0xbc>)
  401106:	6813      	ldr	r3, [r2, #0]
  401108:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40110c:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40110e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401112:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401116:	b129      	cbz	r1, 401124 <Reset_Handler+0x90>
		cpu_irq_enable();
  401118:	2201      	movs	r2, #1
  40111a:	4b0c      	ldr	r3, [pc, #48]	; (40114c <Reset_Handler+0xb8>)
  40111c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40111e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401122:	b662      	cpsie	i
        __libc_init_array();
  401124:	4b0b      	ldr	r3, [pc, #44]	; (401154 <Reset_Handler+0xc0>)
  401126:	4798      	blx	r3
        main();
  401128:	4b0b      	ldr	r3, [pc, #44]	; (401158 <Reset_Handler+0xc4>)
  40112a:	4798      	blx	r3
  40112c:	e7fe      	b.n	40112c <Reset_Handler+0x98>
  40112e:	bf00      	nop
  401130:	20400000 	.word	0x20400000
  401134:	00406e84 	.word	0x00406e84
  401138:	204009d0 	.word	0x204009d0
  40113c:	20400cd4 	.word	0x20400cd4
  401140:	204009d0 	.word	0x204009d0
  401144:	e000ed00 	.word	0xe000ed00
  401148:	00400000 	.word	0x00400000
  40114c:	20400018 	.word	0x20400018
  401150:	e000ed88 	.word	0xe000ed88
  401154:	0040186d 	.word	0x0040186d
  401158:	00401745 	.word	0x00401745

0040115c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  40115c:	4b3b      	ldr	r3, [pc, #236]	; (40124c <SystemCoreClockUpdate+0xf0>)
  40115e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401160:	f003 0303 	and.w	r3, r3, #3
  401164:	2b01      	cmp	r3, #1
  401166:	d01d      	beq.n	4011a4 <SystemCoreClockUpdate+0x48>
  401168:	b183      	cbz	r3, 40118c <SystemCoreClockUpdate+0x30>
  40116a:	2b02      	cmp	r3, #2
  40116c:	d036      	beq.n	4011dc <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40116e:	4b37      	ldr	r3, [pc, #220]	; (40124c <SystemCoreClockUpdate+0xf0>)
  401170:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401172:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401176:	2b70      	cmp	r3, #112	; 0x70
  401178:	d05f      	beq.n	40123a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40117a:	4b34      	ldr	r3, [pc, #208]	; (40124c <SystemCoreClockUpdate+0xf0>)
  40117c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40117e:	4934      	ldr	r1, [pc, #208]	; (401250 <SystemCoreClockUpdate+0xf4>)
  401180:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401184:	680b      	ldr	r3, [r1, #0]
  401186:	40d3      	lsrs	r3, r2
  401188:	600b      	str	r3, [r1, #0]
  40118a:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  40118c:	4b31      	ldr	r3, [pc, #196]	; (401254 <SystemCoreClockUpdate+0xf8>)
  40118e:	695b      	ldr	r3, [r3, #20]
  401190:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401194:	bf14      	ite	ne
  401196:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40119a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40119e:	4b2c      	ldr	r3, [pc, #176]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011a0:	601a      	str	r2, [r3, #0]
  4011a2:	e7e4      	b.n	40116e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4011a4:	4b29      	ldr	r3, [pc, #164]	; (40124c <SystemCoreClockUpdate+0xf0>)
  4011a6:	6a1b      	ldr	r3, [r3, #32]
  4011a8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011ac:	d003      	beq.n	4011b6 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4011ae:	4a2a      	ldr	r2, [pc, #168]	; (401258 <SystemCoreClockUpdate+0xfc>)
  4011b0:	4b27      	ldr	r3, [pc, #156]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011b2:	601a      	str	r2, [r3, #0]
  4011b4:	e7db      	b.n	40116e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4011b6:	4a29      	ldr	r2, [pc, #164]	; (40125c <SystemCoreClockUpdate+0x100>)
  4011b8:	4b25      	ldr	r3, [pc, #148]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011ba:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4011bc:	4b23      	ldr	r3, [pc, #140]	; (40124c <SystemCoreClockUpdate+0xf0>)
  4011be:	6a1b      	ldr	r3, [r3, #32]
  4011c0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4011c4:	2b10      	cmp	r3, #16
  4011c6:	d005      	beq.n	4011d4 <SystemCoreClockUpdate+0x78>
  4011c8:	2b20      	cmp	r3, #32
  4011ca:	d1d0      	bne.n	40116e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4011cc:	4a22      	ldr	r2, [pc, #136]	; (401258 <SystemCoreClockUpdate+0xfc>)
  4011ce:	4b20      	ldr	r3, [pc, #128]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011d0:	601a      	str	r2, [r3, #0]
          break;
  4011d2:	e7cc      	b.n	40116e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4011d4:	4a22      	ldr	r2, [pc, #136]	; (401260 <SystemCoreClockUpdate+0x104>)
  4011d6:	4b1e      	ldr	r3, [pc, #120]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011d8:	601a      	str	r2, [r3, #0]
          break;
  4011da:	e7c8      	b.n	40116e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4011dc:	4b1b      	ldr	r3, [pc, #108]	; (40124c <SystemCoreClockUpdate+0xf0>)
  4011de:	6a1b      	ldr	r3, [r3, #32]
  4011e0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011e4:	d016      	beq.n	401214 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4011e6:	4a1c      	ldr	r2, [pc, #112]	; (401258 <SystemCoreClockUpdate+0xfc>)
  4011e8:	4b19      	ldr	r3, [pc, #100]	; (401250 <SystemCoreClockUpdate+0xf4>)
  4011ea:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4011ec:	4b17      	ldr	r3, [pc, #92]	; (40124c <SystemCoreClockUpdate+0xf0>)
  4011ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011f0:	f003 0303 	and.w	r3, r3, #3
  4011f4:	2b02      	cmp	r3, #2
  4011f6:	d1ba      	bne.n	40116e <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4011f8:	4a14      	ldr	r2, [pc, #80]	; (40124c <SystemCoreClockUpdate+0xf0>)
  4011fa:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4011fc:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4011fe:	4814      	ldr	r0, [pc, #80]	; (401250 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401200:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401204:	6803      	ldr	r3, [r0, #0]
  401206:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40120a:	b2d2      	uxtb	r2, r2
  40120c:	fbb3 f3f2 	udiv	r3, r3, r2
  401210:	6003      	str	r3, [r0, #0]
  401212:	e7ac      	b.n	40116e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401214:	4a11      	ldr	r2, [pc, #68]	; (40125c <SystemCoreClockUpdate+0x100>)
  401216:	4b0e      	ldr	r3, [pc, #56]	; (401250 <SystemCoreClockUpdate+0xf4>)
  401218:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40121a:	4b0c      	ldr	r3, [pc, #48]	; (40124c <SystemCoreClockUpdate+0xf0>)
  40121c:	6a1b      	ldr	r3, [r3, #32]
  40121e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401222:	2b10      	cmp	r3, #16
  401224:	d005      	beq.n	401232 <SystemCoreClockUpdate+0xd6>
  401226:	2b20      	cmp	r3, #32
  401228:	d1e0      	bne.n	4011ec <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40122a:	4a0b      	ldr	r2, [pc, #44]	; (401258 <SystemCoreClockUpdate+0xfc>)
  40122c:	4b08      	ldr	r3, [pc, #32]	; (401250 <SystemCoreClockUpdate+0xf4>)
  40122e:	601a      	str	r2, [r3, #0]
          break;
  401230:	e7dc      	b.n	4011ec <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401232:	4a0b      	ldr	r2, [pc, #44]	; (401260 <SystemCoreClockUpdate+0x104>)
  401234:	4b06      	ldr	r3, [pc, #24]	; (401250 <SystemCoreClockUpdate+0xf4>)
  401236:	601a      	str	r2, [r3, #0]
          break;
  401238:	e7d8      	b.n	4011ec <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40123a:	4a05      	ldr	r2, [pc, #20]	; (401250 <SystemCoreClockUpdate+0xf4>)
  40123c:	6813      	ldr	r3, [r2, #0]
  40123e:	4909      	ldr	r1, [pc, #36]	; (401264 <SystemCoreClockUpdate+0x108>)
  401240:	fba1 1303 	umull	r1, r3, r1, r3
  401244:	085b      	lsrs	r3, r3, #1
  401246:	6013      	str	r3, [r2, #0]
  401248:	4770      	bx	lr
  40124a:	bf00      	nop
  40124c:	400e0600 	.word	0x400e0600
  401250:	2040001c 	.word	0x2040001c
  401254:	400e1810 	.word	0x400e1810
  401258:	00b71b00 	.word	0x00b71b00
  40125c:	003d0900 	.word	0x003d0900
  401260:	007a1200 	.word	0x007a1200
  401264:	aaaaaaab 	.word	0xaaaaaaab

00401268 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401268:	4b16      	ldr	r3, [pc, #88]	; (4012c4 <system_init_flash+0x5c>)
  40126a:	4298      	cmp	r0, r3
  40126c:	d913      	bls.n	401296 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40126e:	4b16      	ldr	r3, [pc, #88]	; (4012c8 <system_init_flash+0x60>)
  401270:	4298      	cmp	r0, r3
  401272:	d915      	bls.n	4012a0 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401274:	4b15      	ldr	r3, [pc, #84]	; (4012cc <system_init_flash+0x64>)
  401276:	4298      	cmp	r0, r3
  401278:	d916      	bls.n	4012a8 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40127a:	4b15      	ldr	r3, [pc, #84]	; (4012d0 <system_init_flash+0x68>)
  40127c:	4298      	cmp	r0, r3
  40127e:	d917      	bls.n	4012b0 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401280:	4b14      	ldr	r3, [pc, #80]	; (4012d4 <system_init_flash+0x6c>)
  401282:	4298      	cmp	r0, r3
  401284:	d918      	bls.n	4012b8 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401286:	4b14      	ldr	r3, [pc, #80]	; (4012d8 <system_init_flash+0x70>)
  401288:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40128a:	bf94      	ite	ls
  40128c:	4a13      	ldrls	r2, [pc, #76]	; (4012dc <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40128e:	4a14      	ldrhi	r2, [pc, #80]	; (4012e0 <system_init_flash+0x78>)
  401290:	4b14      	ldr	r3, [pc, #80]	; (4012e4 <system_init_flash+0x7c>)
  401292:	601a      	str	r2, [r3, #0]
  401294:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401296:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40129a:	4b12      	ldr	r3, [pc, #72]	; (4012e4 <system_init_flash+0x7c>)
  40129c:	601a      	str	r2, [r3, #0]
  40129e:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4012a0:	4a11      	ldr	r2, [pc, #68]	; (4012e8 <system_init_flash+0x80>)
  4012a2:	4b10      	ldr	r3, [pc, #64]	; (4012e4 <system_init_flash+0x7c>)
  4012a4:	601a      	str	r2, [r3, #0]
  4012a6:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4012a8:	4a10      	ldr	r2, [pc, #64]	; (4012ec <system_init_flash+0x84>)
  4012aa:	4b0e      	ldr	r3, [pc, #56]	; (4012e4 <system_init_flash+0x7c>)
  4012ac:	601a      	str	r2, [r3, #0]
  4012ae:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4012b0:	4a0f      	ldr	r2, [pc, #60]	; (4012f0 <system_init_flash+0x88>)
  4012b2:	4b0c      	ldr	r3, [pc, #48]	; (4012e4 <system_init_flash+0x7c>)
  4012b4:	601a      	str	r2, [r3, #0]
  4012b6:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4012b8:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4012bc:	4b09      	ldr	r3, [pc, #36]	; (4012e4 <system_init_flash+0x7c>)
  4012be:	601a      	str	r2, [r3, #0]
  4012c0:	4770      	bx	lr
  4012c2:	bf00      	nop
  4012c4:	015ef3bf 	.word	0x015ef3bf
  4012c8:	02bde77f 	.word	0x02bde77f
  4012cc:	041cdb3f 	.word	0x041cdb3f
  4012d0:	057bceff 	.word	0x057bceff
  4012d4:	06dac2bf 	.word	0x06dac2bf
  4012d8:	0839b67f 	.word	0x0839b67f
  4012dc:	04000500 	.word	0x04000500
  4012e0:	04000600 	.word	0x04000600
  4012e4:	400e0c00 	.word	0x400e0c00
  4012e8:	04000100 	.word	0x04000100
  4012ec:	04000200 	.word	0x04000200
  4012f0:	04000300 	.word	0x04000300

004012f4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4012f4:	4b0a      	ldr	r3, [pc, #40]	; (401320 <_sbrk+0x2c>)
  4012f6:	681b      	ldr	r3, [r3, #0]
  4012f8:	b153      	cbz	r3, 401310 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4012fa:	4b09      	ldr	r3, [pc, #36]	; (401320 <_sbrk+0x2c>)
  4012fc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4012fe:	181a      	adds	r2, r3, r0
  401300:	4908      	ldr	r1, [pc, #32]	; (401324 <_sbrk+0x30>)
  401302:	4291      	cmp	r1, r2
  401304:	db08      	blt.n	401318 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401306:	4610      	mov	r0, r2
  401308:	4a05      	ldr	r2, [pc, #20]	; (401320 <_sbrk+0x2c>)
  40130a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40130c:	4618      	mov	r0, r3
  40130e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401310:	4a05      	ldr	r2, [pc, #20]	; (401328 <_sbrk+0x34>)
  401312:	4b03      	ldr	r3, [pc, #12]	; (401320 <_sbrk+0x2c>)
  401314:	601a      	str	r2, [r3, #0]
  401316:	e7f0      	b.n	4012fa <_sbrk+0x6>
		return (caddr_t) -1;	
  401318:	f04f 30ff 	mov.w	r0, #4294967295
}
  40131c:	4770      	bx	lr
  40131e:	bf00      	nop
  401320:	20400c68 	.word	0x20400c68
  401324:	2045fffc 	.word	0x2045fffc
  401328:	20402ed8 	.word	0x20402ed8

0040132c <but1_callback>:
volatile char flag_rtt_alarme   = 0;
volatile char flag_leds_ligados = 1;
volatile int  counter_rtt       = 0;

void but1_callback() {
	led1_on = !led1_on;
  40132c:	4a03      	ldr	r2, [pc, #12]	; (40133c <but1_callback+0x10>)
  40132e:	7813      	ldrb	r3, [r2, #0]
  401330:	fab3 f383 	clz	r3, r3
  401334:	095b      	lsrs	r3, r3, #5
  401336:	7013      	strb	r3, [r2, #0]
  401338:	4770      	bx	lr
  40133a:	bf00      	nop
  40133c:	20400021 	.word	0x20400021

00401340 <but2_callback>:
}

void but2_callback() {
	led2_on = !led2_on;
  401340:	4a03      	ldr	r2, [pc, #12]	; (401350 <but2_callback+0x10>)
  401342:	7813      	ldrb	r3, [r2, #0]
  401344:	fab3 f383 	clz	r3, r3
  401348:	095b      	lsrs	r3, r3, #5
  40134a:	7013      	strb	r3, [r2, #0]
  40134c:	4770      	bx	lr
  40134e:	bf00      	nop
  401350:	20400c74 	.word	0x20400c74

00401354 <but3_callback>:
}

void but3_callback() {
	led3_on = !led3_on;
  401354:	4a03      	ldr	r2, [pc, #12]	; (401364 <but3_callback+0x10>)
  401356:	7813      	ldrb	r3, [r2, #0]
  401358:	fab3 f383 	clz	r3, r3
  40135c:	095b      	lsrs	r3, r3, #5
  40135e:	7013      	strb	r3, [r2, #0]
  401360:	4770      	bx	lr
  401362:	bf00      	nop
  401364:	20400022 	.word	0x20400022

00401368 <pin_toggle>:
}

void pin_toggle(Pio *pio, uint32_t mask){
  401368:	b538      	push	{r3, r4, r5, lr}
  40136a:	4604      	mov	r4, r0
  40136c:	460d      	mov	r5, r1
	if(pio_get_output_data_status(pio, mask)) {
  40136e:	4b06      	ldr	r3, [pc, #24]	; (401388 <pin_toggle+0x20>)
  401370:	4798      	blx	r3
  401372:	b920      	cbnz	r0, 40137e <pin_toggle+0x16>
		pio_clear(pio, mask);
	}
	else
	pio_set(pio,mask);
  401374:	4629      	mov	r1, r5
  401376:	4620      	mov	r0, r4
  401378:	4b04      	ldr	r3, [pc, #16]	; (40138c <pin_toggle+0x24>)
  40137a:	4798      	blx	r3
  40137c:	bd38      	pop	{r3, r4, r5, pc}
		pio_clear(pio, mask);
  40137e:	4629      	mov	r1, r5
  401380:	4620      	mov	r0, r4
  401382:	4b03      	ldr	r3, [pc, #12]	; (401390 <pin_toggle+0x28>)
  401384:	4798      	blx	r3
  401386:	bd38      	pop	{r3, r4, r5, pc}
  401388:	00400dad 	.word	0x00400dad
  40138c:	00400c23 	.word	0x00400c23
  401390:	00400c27 	.word	0x00400c27

00401394 <leds_init>:
}

void leds_init(void) {
  401394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// Configura led
	pmc_enable_periph_clk(LED1_PIO_ID);
  401396:	200a      	movs	r0, #10
  401398:	4c14      	ldr	r4, [pc, #80]	; (4013ec <leds_init+0x58>)
  40139a:	47a0      	blx	r4
	pmc_enable_periph_clk(LED2_PIO_ID);
  40139c:	200c      	movs	r0, #12
  40139e:	47a0      	blx	r4
	pmc_enable_periph_clk(LED3_PIO_ID);
  4013a0:	200b      	movs	r0, #11
  4013a2:	47a0      	blx	r4
	
	pio_configure(LED1_PIO, PIO_OUTPUT_0, LED1_IDX_MASK, PIO_DEFAULT);
  4013a4:	4f12      	ldr	r7, [pc, #72]	; (4013f0 <leds_init+0x5c>)
  4013a6:	2300      	movs	r3, #0
  4013a8:	2201      	movs	r2, #1
  4013aa:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4013ae:	4638      	mov	r0, r7
  4013b0:	4c10      	ldr	r4, [pc, #64]	; (4013f4 <leds_init+0x60>)
  4013b2:	47a0      	blx	r4
	pio_configure(LED2_PIO, PIO_OUTPUT_0, LED2_IDX_MASK, PIO_DEFAULT);
  4013b4:	4e10      	ldr	r6, [pc, #64]	; (4013f8 <leds_init+0x64>)
  4013b6:	2300      	movs	r3, #0
  4013b8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4013bc:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4013c0:	4630      	mov	r0, r6
  4013c2:	47a0      	blx	r4
	pio_configure(LED3_PIO, PIO_OUTPUT_0, LED3_IDX_MASK, PIO_DEFAULT);
  4013c4:	4d0d      	ldr	r5, [pc, #52]	; (4013fc <leds_init+0x68>)
  4013c6:	2300      	movs	r3, #0
  4013c8:	2204      	movs	r2, #4
  4013ca:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4013ce:	4628      	mov	r0, r5
  4013d0:	47a0      	blx	r4
	
	pio_clear(LED1_PIO, LED1_IDX_MASK); //inicializa led aceso
  4013d2:	2101      	movs	r1, #1
  4013d4:	4638      	mov	r0, r7
  4013d6:	4c0a      	ldr	r4, [pc, #40]	; (401400 <leds_init+0x6c>)
  4013d8:	47a0      	blx	r4
	pio_set  (LED2_PIO, LED2_IDX_MASK); //inicializa led apagados
  4013da:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4013de:	4630      	mov	r0, r6
  4013e0:	4b08      	ldr	r3, [pc, #32]	; (401404 <leds_init+0x70>)
  4013e2:	4798      	blx	r3
	pio_clear(LED3_PIO, LED3_IDX_MASK); //inicializa led aceso
  4013e4:	2104      	movs	r1, #4
  4013e6:	4628      	mov	r0, r5
  4013e8:	47a0      	blx	r4
  4013ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4013ec:	0040103d 	.word	0x0040103d
  4013f0:	400e0e00 	.word	0x400e0e00
  4013f4:	00400d1d 	.word	0x00400d1d
  4013f8:	400e1200 	.word	0x400e1200
  4013fc:	400e1000 	.word	0x400e1000
  401400:	00400c27 	.word	0x00400c27
  401404:	00400c23 	.word	0x00400c23

00401408 <buttons_init>:
}

void buttons_init(void) {
  401408:	b5f0      	push	{r4, r5, r6, r7, lr}
  40140a:	b083      	sub	sp, #12
	// Inicializa clock do perif�rico PIO responsavel pelos botoes
	pmc_enable_periph_clk(BUT1_PIO_ID);
  40140c:	2010      	movs	r0, #16
  40140e:	4c37      	ldr	r4, [pc, #220]	; (4014ec <buttons_init+0xe4>)
  401410:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  401412:	200c      	movs	r0, #12
  401414:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401416:	200a      	movs	r0, #10
  401418:	47a0      	blx	r4
	
	// Configura PIO para lidar com o pino do bot�o como entrada com pull-up
	pio_configure(BUT1_PIO, PIO_INPUT, BUT1_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40141a:	4e35      	ldr	r6, [pc, #212]	; (4014f0 <buttons_init+0xe8>)
  40141c:	2309      	movs	r3, #9
  40141e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401422:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401426:	4630      	mov	r0, r6
  401428:	4f32      	ldr	r7, [pc, #200]	; (4014f4 <buttons_init+0xec>)
  40142a:	47b8      	blx	r7
	pio_configure(BUT2_PIO, PIO_INPUT, BUT2_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40142c:	4d32      	ldr	r5, [pc, #200]	; (4014f8 <buttons_init+0xf0>)
  40142e:	2309      	movs	r3, #9
  401430:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  401434:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401438:	4628      	mov	r0, r5
  40143a:	47b8      	blx	r7
	pio_configure(BUT3_PIO, PIO_INPUT, BUT3_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40143c:	4c2f      	ldr	r4, [pc, #188]	; (4014fc <buttons_init+0xf4>)
  40143e:	2309      	movs	r3, #9
  401440:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401444:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401448:	4620      	mov	r0, r4
  40144a:	47b8      	blx	r7
	
	pio_set_debounce_filter(BUT1_PIO, BUT1_IDX_MASK, 60);
  40144c:	223c      	movs	r2, #60	; 0x3c
  40144e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401452:	4630      	mov	r0, r6
  401454:	4f2a      	ldr	r7, [pc, #168]	; (401500 <buttons_init+0xf8>)
  401456:	47b8      	blx	r7
	pio_set_debounce_filter(BUT2_PIO, BUT2_IDX_MASK, 60);
  401458:	223c      	movs	r2, #60	; 0x3c
  40145a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40145e:	4628      	mov	r0, r5
  401460:	47b8      	blx	r7
	pio_set_debounce_filter(BUT3_PIO, BUT3_IDX_MASK, 60);
  401462:	223c      	movs	r2, #60	; 0x3c
  401464:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401468:	4620      	mov	r0, r4
  40146a:	47b8      	blx	r7
	
	// Configura interrup��o no pino referente ao botao e associa fun��o de callback caso uma interrup��o for gerada
	// a fun��o de callback � a: but1_callback()
	//PIO_IT_EDGE, //PIO_IT_RISE_EDGE, //PIO_IT_FALL_EDGE,);
	
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_IDX_MASK, PIO_IT_RISE_EDGE, but1_callback);
  40146c:	4b25      	ldr	r3, [pc, #148]	; (401504 <buttons_init+0xfc>)
  40146e:	9300      	str	r3, [sp, #0]
  401470:	2370      	movs	r3, #112	; 0x70
  401472:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401476:	2110      	movs	r1, #16
  401478:	4630      	mov	r0, r6
  40147a:	4f23      	ldr	r7, [pc, #140]	; (401508 <buttons_init+0x100>)
  40147c:	47b8      	blx	r7
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_IDX_MASK, PIO_IT_FALL_EDGE, but2_callback);
  40147e:	4b23      	ldr	r3, [pc, #140]	; (40150c <buttons_init+0x104>)
  401480:	9300      	str	r3, [sp, #0]
  401482:	2350      	movs	r3, #80	; 0x50
  401484:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  401488:	210c      	movs	r1, #12
  40148a:	4628      	mov	r0, r5
  40148c:	47b8      	blx	r7
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_IDX_MASK, PIO_IT_RISE_EDGE, but3_callback);
  40148e:	4b20      	ldr	r3, [pc, #128]	; (401510 <buttons_init+0x108>)
  401490:	9300      	str	r3, [sp, #0]
  401492:	2370      	movs	r3, #112	; 0x70
  401494:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401498:	210a      	movs	r1, #10
  40149a:	4620      	mov	r0, r4
  40149c:	47b8      	blx	r7


	// Ativa interrup��o e limpa primeira IRQ gerada na ativacao
	pio_enable_interrupt(BUT1_PIO, BUT1_IDX_MASK);
  40149e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4014a2:	4630      	mov	r0, r6
  4014a4:	4f1b      	ldr	r7, [pc, #108]	; (401514 <buttons_init+0x10c>)
  4014a6:	47b8      	blx	r7
	pio_enable_interrupt(BUT2_PIO, BUT2_IDX_MASK);
  4014a8:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4014ac:	4628      	mov	r0, r5
  4014ae:	47b8      	blx	r7
	pio_enable_interrupt(BUT3_PIO, BUT3_IDX_MASK);
  4014b0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4014b4:	4620      	mov	r0, r4
  4014b6:	47b8      	blx	r7
	
	pio_get_interrupt_status(BUT1_PIO);
  4014b8:	4630      	mov	r0, r6
  4014ba:	4e17      	ldr	r6, [pc, #92]	; (401518 <buttons_init+0x110>)
  4014bc:	47b0      	blx	r6
	pio_get_interrupt_status(BUT2_PIO);
  4014be:	4628      	mov	r0, r5
  4014c0:	47b0      	blx	r6
	pio_get_interrupt_status(BUT3_PIO);
  4014c2:	4620      	mov	r0, r4
  4014c4:	47b0      	blx	r6
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4014c6:	4b15      	ldr	r3, [pc, #84]	; (40151c <buttons_init+0x114>)
  4014c8:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  4014cc:	601a      	str	r2, [r3, #0]
  4014ce:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4014d2:	601a      	str	r2, [r3, #0]
  4014d4:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4014d8:	601a      	str	r2, [r3, #0]
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4014da:	2280      	movs	r2, #128	; 0x80
  4014dc:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  4014e0:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  4014e4:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	
	NVIC_SetPriority(BUT1_PIO_ID, 4); // Prioridade 4
	NVIC_SetPriority(BUT2_PIO_ID, 4); // Prioridade 4
	NVIC_SetPriority(BUT3_PIO_ID, 4); // Prioridade 4
}
  4014e8:	b003      	add	sp, #12
  4014ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4014ec:	0040103d 	.word	0x0040103d
  4014f0:	400e1400 	.word	0x400e1400
  4014f4:	00400d1d 	.word	0x00400d1d
  4014f8:	400e1200 	.word	0x400e1200
  4014fc:	400e0e00 	.word	0x400e0e00
  401500:	00400c09 	.word	0x00400c09
  401504:	0040132d 	.word	0x0040132d
  401508:	00400e49 	.word	0x00400e49
  40150c:	00401341 	.word	0x00401341
  401510:	00401355 	.word	0x00401355
  401514:	00400deb 	.word	0x00400deb
  401518:	00400def 	.word	0x00400def
  40151c:	e000e100 	.word	0xe000e100

00401520 <RTT_Handler>:

	/* Ativa interrupcao via alarme */
	rtc_enable_interrupt(rtc,  irq_type);
}

void RTT_Handler(void) {
  401520:	b508      	push	{r3, lr}
	uint32_t ul_status;
	/* Get RTT status - ACK */
	ul_status = rtt_get_status(RTT);
  401522:	480a      	ldr	r0, [pc, #40]	; (40154c <RTT_Handler+0x2c>)
  401524:	4b0a      	ldr	r3, [pc, #40]	; (401550 <RTT_Handler+0x30>)
  401526:	4798      	blx	r3
	// /* IRQ due to Time has changed */
	
	 if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) {
  401528:	f010 0f02 	tst.w	r0, #2
  40152c:	d003      	beq.n	401536 <RTT_Handler+0x16>
		counter_rtt ++;        // flag RTT alarme
  40152e:	4a09      	ldr	r2, [pc, #36]	; (401554 <RTT_Handler+0x34>)
  401530:	6813      	ldr	r3, [r2, #0]
  401532:	3301      	adds	r3, #1
  401534:	6013      	str	r3, [r2, #0]
	 }
	 
	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  401536:	f010 0f01 	tst.w	r0, #1
  40153a:	d005      	beq.n	401548 <RTT_Handler+0x28>
		flag_rtt_alarme = 1;        // flag RTT alarme
  40153c:	2201      	movs	r2, #1
  40153e:	4b06      	ldr	r3, [pc, #24]	; (401558 <RTT_Handler+0x38>)
  401540:	701a      	strb	r2, [r3, #0]
		counter_rtt     = 0;
  401542:	2200      	movs	r2, #0
  401544:	4b03      	ldr	r3, [pc, #12]	; (401554 <RTT_Handler+0x34>)
  401546:	601a      	str	r2, [r3, #0]
  401548:	bd08      	pop	{r3, pc}
  40154a:	bf00      	nop
  40154c:	400e1830 	.word	0x400e1830
  401550:	00400285 	.word	0x00400285
  401554:	20400c6c 	.word	0x20400c6c
  401558:	20400c70 	.word	0x20400c70

0040155c <RTT_init>:
	}
}

void RTT_init(uint16_t pllPreScale, uint32_t IrqNPulses) {
  40155c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40155e:	4605      	mov	r5, r0
  401560:	460f      	mov	r7, r1
	uint32_t ul_previous_time;
	/* Configure RTT for a 1 second tick interrupt */
	rtt_sel_source(RTT, false);
  401562:	4c14      	ldr	r4, [pc, #80]	; (4015b4 <RTT_init+0x58>)
  401564:	2100      	movs	r1, #0
  401566:	4620      	mov	r0, r4
  401568:	4b13      	ldr	r3, [pc, #76]	; (4015b8 <RTT_init+0x5c>)
  40156a:	4798      	blx	r3
	rtt_init(RTT, pllPreScale);
  40156c:	4629      	mov	r1, r5
  40156e:	4620      	mov	r0, r4
  401570:	4b12      	ldr	r3, [pc, #72]	; (4015bc <RTT_init+0x60>)
  401572:	4798      	blx	r3

	ul_previous_time = rtt_read_timer_value(RTT);
  401574:	4620      	mov	r0, r4
  401576:	4b12      	ldr	r3, [pc, #72]	; (4015c0 <RTT_init+0x64>)
  401578:	4798      	blx	r3
  40157a:	4604      	mov	r4, r0
	while (ul_previous_time == rtt_read_timer_value(RTT));
  40157c:	4e0d      	ldr	r6, [pc, #52]	; (4015b4 <RTT_init+0x58>)
  40157e:	4d10      	ldr	r5, [pc, #64]	; (4015c0 <RTT_init+0x64>)
  401580:	4630      	mov	r0, r6
  401582:	47a8      	blx	r5
  401584:	4284      	cmp	r4, r0
  401586:	d0fb      	beq.n	401580 <RTT_init+0x24>

	rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  401588:	4d0a      	ldr	r5, [pc, #40]	; (4015b4 <RTT_init+0x58>)
  40158a:	19e1      	adds	r1, r4, r7
  40158c:	4628      	mov	r0, r5
  40158e:	4b0d      	ldr	r3, [pc, #52]	; (4015c4 <RTT_init+0x68>)
  401590:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401592:	4b0d      	ldr	r3, [pc, #52]	; (4015c8 <RTT_init+0x6c>)
  401594:	2208      	movs	r2, #8
  401596:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40159a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40159e:	2180      	movs	r1, #128	; 0x80
  4015a0:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015a4:	601a      	str	r2, [r3, #0]
	/* Enable RTT interrupt */
	NVIC_DisableIRQ(RTT_IRQn);
	NVIC_ClearPendingIRQ(RTT_IRQn);
	NVIC_SetPriority(RTT_IRQn, 4);
	NVIC_EnableIRQ(RTT_IRQn);
	rtt_enable_interrupt(RTT, RTT_MR_ALMIEN | RTT_MR_RTTINCIEN);
  4015a6:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  4015aa:	4628      	mov	r0, r5
  4015ac:	4b07      	ldr	r3, [pc, #28]	; (4015cc <RTT_init+0x70>)
  4015ae:	4798      	blx	r3
  4015b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4015b2:	bf00      	nop
  4015b4:	400e1830 	.word	0x400e1830
  4015b8:	0040021d 	.word	0x0040021d
  4015bc:	00400209 	.word	0x00400209
  4015c0:	00400271 	.word	0x00400271
  4015c4:	00400289 	.word	0x00400289
  4015c8:	e000e100 	.word	0xe000e100
  4015cc:	00400249 	.word	0x00400249

004015d0 <rtt_set_alarm>:
void rtt_set_alarm(void) {
  4015d0:	b508      	push	{r3, lr}
	RTT_init(pllPreScale, irqRTTvalue);         
  4015d2:	2119      	movs	r1, #25
  4015d4:	f641 1099 	movw	r0, #6553	; 0x1999
  4015d8:	4b02      	ldr	r3, [pc, #8]	; (4015e4 <rtt_set_alarm+0x14>)
  4015da:	4798      	blx	r3
	flag_rtt_alarme = 0;
  4015dc:	2200      	movs	r2, #0
  4015de:	4b02      	ldr	r3, [pc, #8]	; (4015e8 <rtt_set_alarm+0x18>)
  4015e0:	701a      	strb	r2, [r3, #0]
  4015e2:	bd08      	pop	{r3, pc}
  4015e4:	0040155d 	.word	0x0040155d
  4015e8:	20400c70 	.word	0x20400c70

004015ec <TC_init>:
}

void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  4015ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4015f0:	b085      	sub	sp, #20
  4015f2:	4606      	mov	r6, r0
  4015f4:	460c      	mov	r4, r1
  4015f6:	4617      	mov	r7, r2
  4015f8:	4698      	mov	r8, r3
	o uC possui 3 TCs, cada TC possui 3 canais
	TC0 : ID_TC0, ID_TC1, ID_TC2
	TC1 : ID_TC3, ID_TC4, ID_TC5
	TC2 : ID_TC6, ID_TC7, ID_TC8
	*/
	pmc_enable_periph_clk(ID_TC);
  4015fa:	4608      	mov	r0, r1
  4015fc:	4b18      	ldr	r3, [pc, #96]	; (401660 <TC_init+0x74>)
  4015fe:	4798      	blx	r3

	/** Configura o TC para operar em  freq hz e interrup?c?o no RC compare */
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401600:	4d18      	ldr	r5, [pc, #96]	; (401664 <TC_init+0x78>)
  401602:	9500      	str	r5, [sp, #0]
  401604:	ab02      	add	r3, sp, #8
  401606:	aa03      	add	r2, sp, #12
  401608:	4629      	mov	r1, r5
  40160a:	4640      	mov	r0, r8
  40160c:	f8df 906c 	ldr.w	r9, [pc, #108]	; 40167c <TC_init+0x90>
  401610:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  401612:	9a02      	ldr	r2, [sp, #8]
  401614:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401618:	4639      	mov	r1, r7
  40161a:	4630      	mov	r0, r6
  40161c:	4b12      	ldr	r3, [pc, #72]	; (401668 <TC_init+0x7c>)
  40161e:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401620:	9a03      	ldr	r2, [sp, #12]
  401622:	fbb5 f2f2 	udiv	r2, r5, r2
  401626:	fbb2 f2f8 	udiv	r2, r2, r8
  40162a:	4639      	mov	r1, r7
  40162c:	4630      	mov	r0, r6
  40162e:	4b0f      	ldr	r3, [pc, #60]	; (40166c <TC_init+0x80>)
  401630:	4798      	blx	r3
  401632:	b263      	sxtb	r3, r4
  401634:	095b      	lsrs	r3, r3, #5
  401636:	f004 041f 	and.w	r4, r4, #31
  40163a:	2201      	movs	r2, #1
  40163c:	fa02 f404 	lsl.w	r4, r2, r4
  401640:	4a0b      	ldr	r2, [pc, #44]	; (401670 <TC_init+0x84>)
  401642:	f842 4023 	str.w	r4, [r2, r3, lsl #2]

	/* Configura e ativa interrup?c?o no TC canal 0 |  Interrup??o no C */
	NVIC_EnableIRQ((IRQn_Type) ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  401646:	2210      	movs	r2, #16
  401648:	4639      	mov	r1, r7
  40164a:	4630      	mov	r0, r6
  40164c:	4b09      	ldr	r3, [pc, #36]	; (401674 <TC_init+0x88>)
  40164e:	4798      	blx	r3

	/* Inicializa o canal 0 do TC */
	tc_start(TC, TC_CHANNEL);
  401650:	4639      	mov	r1, r7
  401652:	4630      	mov	r0, r6
  401654:	4b08      	ldr	r3, [pc, #32]	; (401678 <TC_init+0x8c>)
  401656:	4798      	blx	r3
}
  401658:	b005      	add	sp, #20
  40165a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40165e:	bf00      	nop
  401660:	0040103d 	.word	0x0040103d
  401664:	11e1a300 	.word	0x11e1a300
  401668:	00400417 	.word	0x00400417
  40166c:	00400439 	.word	0x00400439
  401670:	e000e100 	.word	0xe000e100
  401674:	00400441 	.word	0x00400441
  401678:	00400431 	.word	0x00400431
  40167c:	00400451 	.word	0x00400451

00401680 <TC1_Handler>:


void TC1_Handler(void){
  401680:	b500      	push	{lr}
  401682:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;
	/* Devemos indicar ao TC que a interrup??o foi satisfeita.*/
	ul_dummy = tc_get_status(TC0, 1);
  401684:	2101      	movs	r1, #1
  401686:	4805      	ldr	r0, [pc, #20]	; (40169c <TC1_Handler+0x1c>)
  401688:	4b05      	ldr	r3, [pc, #20]	; (4016a0 <TC1_Handler+0x20>)
  40168a:	4798      	blx	r3
  40168c:	9001      	str	r0, [sp, #4]
	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  40168e:	9b01      	ldr	r3, [sp, #4]
	/** Muda o estado do LED */
	flag_tc1 = 1;
  401690:	2201      	movs	r2, #1
  401692:	4b04      	ldr	r3, [pc, #16]	; (4016a4 <TC1_Handler+0x24>)
  401694:	701a      	strb	r2, [r3, #0]
}
  401696:	b003      	add	sp, #12
  401698:	f85d fb04 	ldr.w	pc, [sp], #4
  40169c:	4000c000 	.word	0x4000c000
  4016a0:	00400449 	.word	0x00400449
  4016a4:	20400c71 	.word	0x20400c71

004016a8 <TC8_Handler>:

void TC8_Handler(void){
  4016a8:	b500      	push	{lr}
  4016aa:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;
	ul_dummy = tc_get_status(TC2, 2);
  4016ac:	2102      	movs	r1, #2
  4016ae:	4805      	ldr	r0, [pc, #20]	; (4016c4 <TC8_Handler+0x1c>)
  4016b0:	4b05      	ldr	r3, [pc, #20]	; (4016c8 <TC8_Handler+0x20>)
  4016b2:	4798      	blx	r3
  4016b4:	9001      	str	r0, [sp, #4]
	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  4016b6:	9b01      	ldr	r3, [sp, #4]
	/** Muda o estado do LED */
	flag_tc2 = 1;
  4016b8:	2201      	movs	r2, #1
  4016ba:	4b04      	ldr	r3, [pc, #16]	; (4016cc <TC8_Handler+0x24>)
  4016bc:	701a      	strb	r2, [r3, #0]
}
  4016be:	b003      	add	sp, #12
  4016c0:	f85d fb04 	ldr.w	pc, [sp], #4
  4016c4:	40014000 	.word	0x40014000
  4016c8:	00400449 	.word	0x00400449
  4016cc:	20400c72 	.word	0x20400c72

004016d0 <TC3_Handler>:


void TC3_Handler(void){
  4016d0:	b500      	push	{lr}
  4016d2:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;
	/* Devemos indicar ao TC que a interrup??o foi satisfeita.*/
	ul_dummy = tc_get_status(TC1, 0);
  4016d4:	2100      	movs	r1, #0
  4016d6:	4805      	ldr	r0, [pc, #20]	; (4016ec <TC3_Handler+0x1c>)
  4016d8:	4b05      	ldr	r3, [pc, #20]	; (4016f0 <TC3_Handler+0x20>)
  4016da:	4798      	blx	r3
  4016dc:	9001      	str	r0, [sp, #4]
	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  4016de:	9b01      	ldr	r3, [sp, #4]
	/** Muda o estado do LED */
	flag_tc3 = 1;
  4016e0:	2201      	movs	r2, #1
  4016e2:	4b04      	ldr	r3, [pc, #16]	; (4016f4 <TC3_Handler+0x24>)
  4016e4:	701a      	strb	r2, [r3, #0]
}
  4016e6:	b003      	add	sp, #12
  4016e8:	f85d fb04 	ldr.w	pc, [sp], #4
  4016ec:	40010000 	.word	0x40010000
  4016f0:	00400449 	.word	0x00400449
  4016f4:	20400c73 	.word	0x20400c73

004016f8 <io_init>:

void io_init(void) {
  4016f8:	b510      	push	{r4, lr}
	
	leds_init();
  4016fa:	4b0b      	ldr	r3, [pc, #44]	; (401728 <io_init+0x30>)
  4016fc:	4798      	blx	r3
	buttons_init();
  4016fe:	4b0b      	ldr	r3, [pc, #44]	; (40172c <io_init+0x34>)
  401700:	4798      	blx	r3
	
	// Init OLED
	gfx_mono_ssd1306_init();
  401702:	4b0b      	ldr	r3, [pc, #44]	; (401730 <io_init+0x38>)
  401704:	4798      	blx	r3
	//Config TC
	int freq_tc1 = 5;
	int freq_tc2 = 10;
	int freq_tc3 = 1;
		
	TC_init(TC0, ID_TC1, 1, freq_tc1);    // Configura timer TC0, canal 1  freq
  401706:	2305      	movs	r3, #5
  401708:	2201      	movs	r2, #1
  40170a:	2118      	movs	r1, #24
  40170c:	4809      	ldr	r0, [pc, #36]	; (401734 <io_init+0x3c>)
  40170e:	4c0a      	ldr	r4, [pc, #40]	; (401738 <io_init+0x40>)
  401710:	47a0      	blx	r4
	TC_init(TC2, ID_TC8, 2, freq_tc2);    // Configura timer TC2, canal 2 */
  401712:	230a      	movs	r3, #10
  401714:	2202      	movs	r2, #2
  401716:	2131      	movs	r1, #49	; 0x31
  401718:	4808      	ldr	r0, [pc, #32]	; (40173c <io_init+0x44>)
  40171a:	47a0      	blx	r4
	TC_init(TC1, ID_TC3, 0, freq_tc3);    // last argmument is frequency/
  40171c:	2301      	movs	r3, #1
  40171e:	2200      	movs	r2, #0
  401720:	211a      	movs	r1, #26
  401722:	4807      	ldr	r0, [pc, #28]	; (401740 <io_init+0x48>)
  401724:	47a0      	blx	r4
  401726:	bd10      	pop	{r4, pc}
  401728:	00401395 	.word	0x00401395
  40172c:	00401409 	.word	0x00401409
  401730:	00400739 	.word	0x00400739
  401734:	4000c000 	.word	0x4000c000
  401738:	004015ed 	.word	0x004015ed
  40173c:	40014000 	.word	0x40014000
  401740:	40010000 	.word	0x40010000

00401744 <main>:
}

int main (void) {
  401744:	b580      	push	{r7, lr}
  401746:	b088      	sub	sp, #32
	board_init();
  401748:	4b31      	ldr	r3, [pc, #196]	; (401810 <main+0xcc>)
  40174a:	4798      	blx	r3
	sysclk_init();
  40174c:	4b31      	ldr	r3, [pc, #196]	; (401814 <main+0xd0>)
  40174e:	4798      	blx	r3
	delay_init();
	io_init();
  401750:	4b31      	ldr	r3, [pc, #196]	; (401818 <main+0xd4>)
  401752:	4798      	blx	r3
	rtt_set_alarm();
  401754:	4b31      	ldr	r3, [pc, #196]	; (40181c <main+0xd8>)
  401756:	4798      	blx	r3
	
	int  h, m, s;
	char relogio[10];

	while(1) {
		rtc_get_time(RTC, &h, &m, &s);
  401758:	f8df a104 	ldr.w	sl, [pc, #260]	; 401860 <main+0x11c>
		
		sprintf(relogio, "%d:%d:%d c:%d", h,m,s, counter_rtt);
		gfx_mono_draw_string(relogio, 0, 16, &sysfont);
		
		if (flag_tc1 & led1_on & flag_leds_ligados) {
  40175c:	4c30      	ldr	r4, [pc, #192]	; (401820 <main+0xdc>)
			pin_toggle(LED1_PIO, LED1_IDX_MASK);
			flag_tc1 = 0;
		}
			
		if (flag_tc2 & led2_on & flag_leds_ligados) {
			pin_toggle(LED2_PIO, LED2_IDX_MASK);
  40175e:	f8df 9104 	ldr.w	r9, [pc, #260]	; 401864 <main+0x120>
			pin_toggle(LED1_PIO, LED1_IDX_MASK);
  401762:	f8df 8104 	ldr.w	r8, [pc, #260]	; 401868 <main+0x124>
  401766:	e050      	b.n	40180a <main+0xc6>
  401768:	2101      	movs	r1, #1
  40176a:	4640      	mov	r0, r8
  40176c:	4b2d      	ldr	r3, [pc, #180]	; (401824 <main+0xe0>)
  40176e:	4798      	blx	r3
			flag_tc1 = 0;
  401770:	2200      	movs	r2, #0
  401772:	4b2d      	ldr	r3, [pc, #180]	; (401828 <main+0xe4>)
  401774:	701a      	strb	r2, [r3, #0]
  401776:	e029      	b.n	4017cc <main+0x88>
			pin_toggle(LED2_PIO, LED2_IDX_MASK);
  401778:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40177c:	4648      	mov	r0, r9
  40177e:	4b29      	ldr	r3, [pc, #164]	; (401824 <main+0xe0>)
  401780:	4798      	blx	r3
			flag_tc2 = 0;
  401782:	2200      	movs	r2, #0
  401784:	4b29      	ldr	r3, [pc, #164]	; (40182c <main+0xe8>)
  401786:	701a      	strb	r2, [r3, #0]
  401788:	e028      	b.n	4017dc <main+0x98>
		if (flag_tc3 & led3_on & flag_leds_ligados) {
			pin_toggle(LED3_PIO, LED3_IDX_MASK);
			flag_tc3 = 0;
		}
		
		if (flag_rtt_alarme) {
  40178a:	4b29      	ldr	r3, [pc, #164]	; (401830 <main+0xec>)
  40178c:	781b      	ldrb	r3, [r3, #0]
  40178e:	2b00      	cmp	r3, #0
  401790:	d134      	bne.n	4017fc <main+0xb8>
		rtc_get_time(RTC, &h, &m, &s);
  401792:	ab05      	add	r3, sp, #20
  401794:	aa06      	add	r2, sp, #24
  401796:	a907      	add	r1, sp, #28
  401798:	4650      	mov	r0, sl
  40179a:	47b0      	blx	r6
		sprintf(relogio, "%d:%d:%d c:%d", h,m,s, counter_rtt);
  40179c:	682b      	ldr	r3, [r5, #0]
  40179e:	9301      	str	r3, [sp, #4]
  4017a0:	9b05      	ldr	r3, [sp, #20]
  4017a2:	9300      	str	r3, [sp, #0]
  4017a4:	9b06      	ldr	r3, [sp, #24]
  4017a6:	9a07      	ldr	r2, [sp, #28]
  4017a8:	4922      	ldr	r1, [pc, #136]	; (401834 <main+0xf0>)
  4017aa:	a802      	add	r0, sp, #8
  4017ac:	4f22      	ldr	r7, [pc, #136]	; (401838 <main+0xf4>)
  4017ae:	47b8      	blx	r7
		gfx_mono_draw_string(relogio, 0, 16, &sysfont);
  4017b0:	4b22      	ldr	r3, [pc, #136]	; (40183c <main+0xf8>)
  4017b2:	2210      	movs	r2, #16
  4017b4:	2100      	movs	r1, #0
  4017b6:	a802      	add	r0, sp, #8
  4017b8:	4f21      	ldr	r7, [pc, #132]	; (401840 <main+0xfc>)
  4017ba:	47b8      	blx	r7
		if (flag_tc1 & led1_on & flag_leds_ligados) {
  4017bc:	4b1a      	ldr	r3, [pc, #104]	; (401828 <main+0xe4>)
  4017be:	7819      	ldrb	r1, [r3, #0]
  4017c0:	4b20      	ldr	r3, [pc, #128]	; (401844 <main+0x100>)
  4017c2:	781b      	ldrb	r3, [r3, #0]
  4017c4:	7822      	ldrb	r2, [r4, #0]
  4017c6:	400b      	ands	r3, r1
  4017c8:	421a      	tst	r2, r3
  4017ca:	d1cd      	bne.n	401768 <main+0x24>
		if (flag_tc2 & led2_on & flag_leds_ligados) {
  4017cc:	4b17      	ldr	r3, [pc, #92]	; (40182c <main+0xe8>)
  4017ce:	7819      	ldrb	r1, [r3, #0]
  4017d0:	4b1d      	ldr	r3, [pc, #116]	; (401848 <main+0x104>)
  4017d2:	781b      	ldrb	r3, [r3, #0]
  4017d4:	7822      	ldrb	r2, [r4, #0]
  4017d6:	400b      	ands	r3, r1
  4017d8:	421a      	tst	r2, r3
  4017da:	d1cd      	bne.n	401778 <main+0x34>
		if (flag_tc3 & led3_on & flag_leds_ligados) {
  4017dc:	4b1b      	ldr	r3, [pc, #108]	; (40184c <main+0x108>)
  4017de:	7819      	ldrb	r1, [r3, #0]
  4017e0:	4b1b      	ldr	r3, [pc, #108]	; (401850 <main+0x10c>)
  4017e2:	781b      	ldrb	r3, [r3, #0]
  4017e4:	7822      	ldrb	r2, [r4, #0]
  4017e6:	400b      	ands	r3, r1
  4017e8:	421a      	tst	r2, r3
  4017ea:	d0ce      	beq.n	40178a <main+0x46>
			pin_toggle(LED3_PIO, LED3_IDX_MASK);
  4017ec:	2104      	movs	r1, #4
  4017ee:	4819      	ldr	r0, [pc, #100]	; (401854 <main+0x110>)
  4017f0:	4b0c      	ldr	r3, [pc, #48]	; (401824 <main+0xe0>)
  4017f2:	4798      	blx	r3
			flag_tc3 = 0;
  4017f4:	2200      	movs	r2, #0
  4017f6:	4b15      	ldr	r3, [pc, #84]	; (40184c <main+0x108>)
  4017f8:	701a      	strb	r2, [r3, #0]
  4017fa:	e7c6      	b.n	40178a <main+0x46>
			flag_leds_ligados = !flag_leds_ligados;
  4017fc:	7823      	ldrb	r3, [r4, #0]
  4017fe:	fab3 f383 	clz	r3, r3
  401802:	095b      	lsrs	r3, r3, #5
  401804:	7023      	strb	r3, [r4, #0]
			rtt_set_alarm();
  401806:	4b05      	ldr	r3, [pc, #20]	; (40181c <main+0xd8>)
  401808:	4798      	blx	r3
		rtc_get_time(RTC, &h, &m, &s);
  40180a:	4e13      	ldr	r6, [pc, #76]	; (401858 <main+0x114>)
		sprintf(relogio, "%d:%d:%d c:%d", h,m,s, counter_rtt);
  40180c:	4d13      	ldr	r5, [pc, #76]	; (40185c <main+0x118>)
  40180e:	e7c0      	b.n	401792 <main+0x4e>
  401810:	00400ac9 	.word	0x00400ac9
  401814:	00400a59 	.word	0x00400a59
  401818:	004016f9 	.word	0x004016f9
  40181c:	004015d1 	.word	0x004015d1
  401820:	20400020 	.word	0x20400020
  401824:	00401369 	.word	0x00401369
  401828:	20400c71 	.word	0x20400c71
  40182c:	20400c72 	.word	0x20400c72
  401830:	20400c70 	.word	0x20400c70
  401834:	00406bbc 	.word	0x00406bbc
  401838:	00401959 	.word	0x00401959
  40183c:	2040000c 	.word	0x2040000c
  401840:	004006a1 	.word	0x004006a1
  401844:	20400021 	.word	0x20400021
  401848:	20400c74 	.word	0x20400c74
  40184c:	20400c73 	.word	0x20400c73
  401850:	20400022 	.word	0x20400022
  401854:	400e1000 	.word	0x400e1000
  401858:	004001ad 	.word	0x004001ad
  40185c:	20400c6c 	.word	0x20400c6c
  401860:	400e1860 	.word	0x400e1860
  401864:	400e1200 	.word	0x400e1200
  401868:	400e0e00 	.word	0x400e0e00

0040186c <__libc_init_array>:
  40186c:	b570      	push	{r4, r5, r6, lr}
  40186e:	4e0f      	ldr	r6, [pc, #60]	; (4018ac <__libc_init_array+0x40>)
  401870:	4d0f      	ldr	r5, [pc, #60]	; (4018b0 <__libc_init_array+0x44>)
  401872:	1b76      	subs	r6, r6, r5
  401874:	10b6      	asrs	r6, r6, #2
  401876:	bf18      	it	ne
  401878:	2400      	movne	r4, #0
  40187a:	d005      	beq.n	401888 <__libc_init_array+0x1c>
  40187c:	3401      	adds	r4, #1
  40187e:	f855 3b04 	ldr.w	r3, [r5], #4
  401882:	4798      	blx	r3
  401884:	42a6      	cmp	r6, r4
  401886:	d1f9      	bne.n	40187c <__libc_init_array+0x10>
  401888:	4e0a      	ldr	r6, [pc, #40]	; (4018b4 <__libc_init_array+0x48>)
  40188a:	4d0b      	ldr	r5, [pc, #44]	; (4018b8 <__libc_init_array+0x4c>)
  40188c:	1b76      	subs	r6, r6, r5
  40188e:	f005 fae3 	bl	406e58 <_init>
  401892:	10b6      	asrs	r6, r6, #2
  401894:	bf18      	it	ne
  401896:	2400      	movne	r4, #0
  401898:	d006      	beq.n	4018a8 <__libc_init_array+0x3c>
  40189a:	3401      	adds	r4, #1
  40189c:	f855 3b04 	ldr.w	r3, [r5], #4
  4018a0:	4798      	blx	r3
  4018a2:	42a6      	cmp	r6, r4
  4018a4:	d1f9      	bne.n	40189a <__libc_init_array+0x2e>
  4018a6:	bd70      	pop	{r4, r5, r6, pc}
  4018a8:	bd70      	pop	{r4, r5, r6, pc}
  4018aa:	bf00      	nop
  4018ac:	00406e64 	.word	0x00406e64
  4018b0:	00406e64 	.word	0x00406e64
  4018b4:	00406e6c 	.word	0x00406e6c
  4018b8:	00406e64 	.word	0x00406e64

004018bc <memset>:
  4018bc:	b470      	push	{r4, r5, r6}
  4018be:	0786      	lsls	r6, r0, #30
  4018c0:	d046      	beq.n	401950 <memset+0x94>
  4018c2:	1e54      	subs	r4, r2, #1
  4018c4:	2a00      	cmp	r2, #0
  4018c6:	d041      	beq.n	40194c <memset+0x90>
  4018c8:	b2ca      	uxtb	r2, r1
  4018ca:	4603      	mov	r3, r0
  4018cc:	e002      	b.n	4018d4 <memset+0x18>
  4018ce:	f114 34ff 	adds.w	r4, r4, #4294967295
  4018d2:	d33b      	bcc.n	40194c <memset+0x90>
  4018d4:	f803 2b01 	strb.w	r2, [r3], #1
  4018d8:	079d      	lsls	r5, r3, #30
  4018da:	d1f8      	bne.n	4018ce <memset+0x12>
  4018dc:	2c03      	cmp	r4, #3
  4018de:	d92e      	bls.n	40193e <memset+0x82>
  4018e0:	b2cd      	uxtb	r5, r1
  4018e2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4018e6:	2c0f      	cmp	r4, #15
  4018e8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4018ec:	d919      	bls.n	401922 <memset+0x66>
  4018ee:	f103 0210 	add.w	r2, r3, #16
  4018f2:	4626      	mov	r6, r4
  4018f4:	3e10      	subs	r6, #16
  4018f6:	2e0f      	cmp	r6, #15
  4018f8:	f842 5c10 	str.w	r5, [r2, #-16]
  4018fc:	f842 5c0c 	str.w	r5, [r2, #-12]
  401900:	f842 5c08 	str.w	r5, [r2, #-8]
  401904:	f842 5c04 	str.w	r5, [r2, #-4]
  401908:	f102 0210 	add.w	r2, r2, #16
  40190c:	d8f2      	bhi.n	4018f4 <memset+0x38>
  40190e:	f1a4 0210 	sub.w	r2, r4, #16
  401912:	f022 020f 	bic.w	r2, r2, #15
  401916:	f004 040f 	and.w	r4, r4, #15
  40191a:	3210      	adds	r2, #16
  40191c:	2c03      	cmp	r4, #3
  40191e:	4413      	add	r3, r2
  401920:	d90d      	bls.n	40193e <memset+0x82>
  401922:	461e      	mov	r6, r3
  401924:	4622      	mov	r2, r4
  401926:	3a04      	subs	r2, #4
  401928:	2a03      	cmp	r2, #3
  40192a:	f846 5b04 	str.w	r5, [r6], #4
  40192e:	d8fa      	bhi.n	401926 <memset+0x6a>
  401930:	1f22      	subs	r2, r4, #4
  401932:	f022 0203 	bic.w	r2, r2, #3
  401936:	3204      	adds	r2, #4
  401938:	4413      	add	r3, r2
  40193a:	f004 0403 	and.w	r4, r4, #3
  40193e:	b12c      	cbz	r4, 40194c <memset+0x90>
  401940:	b2c9      	uxtb	r1, r1
  401942:	441c      	add	r4, r3
  401944:	f803 1b01 	strb.w	r1, [r3], #1
  401948:	429c      	cmp	r4, r3
  40194a:	d1fb      	bne.n	401944 <memset+0x88>
  40194c:	bc70      	pop	{r4, r5, r6}
  40194e:	4770      	bx	lr
  401950:	4614      	mov	r4, r2
  401952:	4603      	mov	r3, r0
  401954:	e7c2      	b.n	4018dc <memset+0x20>
  401956:	bf00      	nop

00401958 <sprintf>:
  401958:	b40e      	push	{r1, r2, r3}
  40195a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40195c:	b09c      	sub	sp, #112	; 0x70
  40195e:	ab21      	add	r3, sp, #132	; 0x84
  401960:	490f      	ldr	r1, [pc, #60]	; (4019a0 <sprintf+0x48>)
  401962:	f853 2b04 	ldr.w	r2, [r3], #4
  401966:	9301      	str	r3, [sp, #4]
  401968:	4605      	mov	r5, r0
  40196a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40196e:	6808      	ldr	r0, [r1, #0]
  401970:	9502      	str	r5, [sp, #8]
  401972:	f44f 7702 	mov.w	r7, #520	; 0x208
  401976:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40197a:	a902      	add	r1, sp, #8
  40197c:	9506      	str	r5, [sp, #24]
  40197e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401982:	9404      	str	r4, [sp, #16]
  401984:	9407      	str	r4, [sp, #28]
  401986:	f8ad 6016 	strh.w	r6, [sp, #22]
  40198a:	f000 f80b 	bl	4019a4 <_svfprintf_r>
  40198e:	9b02      	ldr	r3, [sp, #8]
  401990:	2200      	movs	r2, #0
  401992:	701a      	strb	r2, [r3, #0]
  401994:	b01c      	add	sp, #112	; 0x70
  401996:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40199a:	b003      	add	sp, #12
  40199c:	4770      	bx	lr
  40199e:	bf00      	nop
  4019a0:	20400024 	.word	0x20400024

004019a4 <_svfprintf_r>:
  4019a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4019a8:	b0c3      	sub	sp, #268	; 0x10c
  4019aa:	460c      	mov	r4, r1
  4019ac:	910b      	str	r1, [sp, #44]	; 0x2c
  4019ae:	4692      	mov	sl, r2
  4019b0:	930f      	str	r3, [sp, #60]	; 0x3c
  4019b2:	900c      	str	r0, [sp, #48]	; 0x30
  4019b4:	f002 fa0c 	bl	403dd0 <_localeconv_r>
  4019b8:	6803      	ldr	r3, [r0, #0]
  4019ba:	931a      	str	r3, [sp, #104]	; 0x68
  4019bc:	4618      	mov	r0, r3
  4019be:	f003 f8df 	bl	404b80 <strlen>
  4019c2:	89a3      	ldrh	r3, [r4, #12]
  4019c4:	9019      	str	r0, [sp, #100]	; 0x64
  4019c6:	0619      	lsls	r1, r3, #24
  4019c8:	d503      	bpl.n	4019d2 <_svfprintf_r+0x2e>
  4019ca:	6923      	ldr	r3, [r4, #16]
  4019cc:	2b00      	cmp	r3, #0
  4019ce:	f001 8003 	beq.w	4029d8 <_svfprintf_r+0x1034>
  4019d2:	2300      	movs	r3, #0
  4019d4:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4019d8:	9313      	str	r3, [sp, #76]	; 0x4c
  4019da:	9315      	str	r3, [sp, #84]	; 0x54
  4019dc:	9314      	str	r3, [sp, #80]	; 0x50
  4019de:	9327      	str	r3, [sp, #156]	; 0x9c
  4019e0:	9326      	str	r3, [sp, #152]	; 0x98
  4019e2:	9318      	str	r3, [sp, #96]	; 0x60
  4019e4:	931b      	str	r3, [sp, #108]	; 0x6c
  4019e6:	9309      	str	r3, [sp, #36]	; 0x24
  4019e8:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4019ec:	46c8      	mov	r8, r9
  4019ee:	9316      	str	r3, [sp, #88]	; 0x58
  4019f0:	9317      	str	r3, [sp, #92]	; 0x5c
  4019f2:	f89a 3000 	ldrb.w	r3, [sl]
  4019f6:	4654      	mov	r4, sl
  4019f8:	b1e3      	cbz	r3, 401a34 <_svfprintf_r+0x90>
  4019fa:	2b25      	cmp	r3, #37	; 0x25
  4019fc:	d102      	bne.n	401a04 <_svfprintf_r+0x60>
  4019fe:	e019      	b.n	401a34 <_svfprintf_r+0x90>
  401a00:	2b25      	cmp	r3, #37	; 0x25
  401a02:	d003      	beq.n	401a0c <_svfprintf_r+0x68>
  401a04:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401a08:	2b00      	cmp	r3, #0
  401a0a:	d1f9      	bne.n	401a00 <_svfprintf_r+0x5c>
  401a0c:	eba4 050a 	sub.w	r5, r4, sl
  401a10:	b185      	cbz	r5, 401a34 <_svfprintf_r+0x90>
  401a12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401a14:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401a16:	f8c8 a000 	str.w	sl, [r8]
  401a1a:	3301      	adds	r3, #1
  401a1c:	442a      	add	r2, r5
  401a1e:	2b07      	cmp	r3, #7
  401a20:	f8c8 5004 	str.w	r5, [r8, #4]
  401a24:	9227      	str	r2, [sp, #156]	; 0x9c
  401a26:	9326      	str	r3, [sp, #152]	; 0x98
  401a28:	dc7f      	bgt.n	401b2a <_svfprintf_r+0x186>
  401a2a:	f108 0808 	add.w	r8, r8, #8
  401a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401a30:	442b      	add	r3, r5
  401a32:	9309      	str	r3, [sp, #36]	; 0x24
  401a34:	7823      	ldrb	r3, [r4, #0]
  401a36:	2b00      	cmp	r3, #0
  401a38:	d07f      	beq.n	401b3a <_svfprintf_r+0x196>
  401a3a:	2300      	movs	r3, #0
  401a3c:	461a      	mov	r2, r3
  401a3e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401a42:	4619      	mov	r1, r3
  401a44:	930d      	str	r3, [sp, #52]	; 0x34
  401a46:	469b      	mov	fp, r3
  401a48:	f04f 30ff 	mov.w	r0, #4294967295
  401a4c:	7863      	ldrb	r3, [r4, #1]
  401a4e:	900a      	str	r0, [sp, #40]	; 0x28
  401a50:	f104 0a01 	add.w	sl, r4, #1
  401a54:	f10a 0a01 	add.w	sl, sl, #1
  401a58:	f1a3 0020 	sub.w	r0, r3, #32
  401a5c:	2858      	cmp	r0, #88	; 0x58
  401a5e:	f200 83c1 	bhi.w	4021e4 <_svfprintf_r+0x840>
  401a62:	e8df f010 	tbh	[pc, r0, lsl #1]
  401a66:	0238      	.short	0x0238
  401a68:	03bf03bf 	.word	0x03bf03bf
  401a6c:	03bf0240 	.word	0x03bf0240
  401a70:	03bf03bf 	.word	0x03bf03bf
  401a74:	03bf03bf 	.word	0x03bf03bf
  401a78:	024503bf 	.word	0x024503bf
  401a7c:	03bf0203 	.word	0x03bf0203
  401a80:	026b005d 	.word	0x026b005d
  401a84:	028603bf 	.word	0x028603bf
  401a88:	039d039d 	.word	0x039d039d
  401a8c:	039d039d 	.word	0x039d039d
  401a90:	039d039d 	.word	0x039d039d
  401a94:	039d039d 	.word	0x039d039d
  401a98:	03bf039d 	.word	0x03bf039d
  401a9c:	03bf03bf 	.word	0x03bf03bf
  401aa0:	03bf03bf 	.word	0x03bf03bf
  401aa4:	03bf03bf 	.word	0x03bf03bf
  401aa8:	03bf03bf 	.word	0x03bf03bf
  401aac:	033703bf 	.word	0x033703bf
  401ab0:	03bf0357 	.word	0x03bf0357
  401ab4:	03bf0357 	.word	0x03bf0357
  401ab8:	03bf03bf 	.word	0x03bf03bf
  401abc:	039803bf 	.word	0x039803bf
  401ac0:	03bf03bf 	.word	0x03bf03bf
  401ac4:	03bf03ad 	.word	0x03bf03ad
  401ac8:	03bf03bf 	.word	0x03bf03bf
  401acc:	03bf03bf 	.word	0x03bf03bf
  401ad0:	03bf0259 	.word	0x03bf0259
  401ad4:	031e03bf 	.word	0x031e03bf
  401ad8:	03bf03bf 	.word	0x03bf03bf
  401adc:	03bf03bf 	.word	0x03bf03bf
  401ae0:	03bf03bf 	.word	0x03bf03bf
  401ae4:	03bf03bf 	.word	0x03bf03bf
  401ae8:	03bf03bf 	.word	0x03bf03bf
  401aec:	02db02c6 	.word	0x02db02c6
  401af0:	03570357 	.word	0x03570357
  401af4:	028b0357 	.word	0x028b0357
  401af8:	03bf02db 	.word	0x03bf02db
  401afc:	029003bf 	.word	0x029003bf
  401b00:	029d03bf 	.word	0x029d03bf
  401b04:	02b401cc 	.word	0x02b401cc
  401b08:	03bf0208 	.word	0x03bf0208
  401b0c:	03bf01e1 	.word	0x03bf01e1
  401b10:	03bf007e 	.word	0x03bf007e
  401b14:	020d03bf 	.word	0x020d03bf
  401b18:	980d      	ldr	r0, [sp, #52]	; 0x34
  401b1a:	930f      	str	r3, [sp, #60]	; 0x3c
  401b1c:	4240      	negs	r0, r0
  401b1e:	900d      	str	r0, [sp, #52]	; 0x34
  401b20:	f04b 0b04 	orr.w	fp, fp, #4
  401b24:	f89a 3000 	ldrb.w	r3, [sl]
  401b28:	e794      	b.n	401a54 <_svfprintf_r+0xb0>
  401b2a:	aa25      	add	r2, sp, #148	; 0x94
  401b2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401b2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  401b30:	f003 f894 	bl	404c5c <__ssprint_r>
  401b34:	b940      	cbnz	r0, 401b48 <_svfprintf_r+0x1a4>
  401b36:	46c8      	mov	r8, r9
  401b38:	e779      	b.n	401a2e <_svfprintf_r+0x8a>
  401b3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401b3c:	b123      	cbz	r3, 401b48 <_svfprintf_r+0x1a4>
  401b3e:	980c      	ldr	r0, [sp, #48]	; 0x30
  401b40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401b42:	aa25      	add	r2, sp, #148	; 0x94
  401b44:	f003 f88a 	bl	404c5c <__ssprint_r>
  401b48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401b4a:	899b      	ldrh	r3, [r3, #12]
  401b4c:	f013 0f40 	tst.w	r3, #64	; 0x40
  401b50:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401b52:	bf18      	it	ne
  401b54:	f04f 33ff 	movne.w	r3, #4294967295
  401b58:	9309      	str	r3, [sp, #36]	; 0x24
  401b5a:	9809      	ldr	r0, [sp, #36]	; 0x24
  401b5c:	b043      	add	sp, #268	; 0x10c
  401b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b62:	f01b 0f20 	tst.w	fp, #32
  401b66:	9311      	str	r3, [sp, #68]	; 0x44
  401b68:	f040 81dd 	bne.w	401f26 <_svfprintf_r+0x582>
  401b6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b6e:	f01b 0f10 	tst.w	fp, #16
  401b72:	4613      	mov	r3, r2
  401b74:	f040 856e 	bne.w	402654 <_svfprintf_r+0xcb0>
  401b78:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401b7c:	f000 856a 	beq.w	402654 <_svfprintf_r+0xcb0>
  401b80:	8814      	ldrh	r4, [r2, #0]
  401b82:	3204      	adds	r2, #4
  401b84:	2500      	movs	r5, #0
  401b86:	2301      	movs	r3, #1
  401b88:	920f      	str	r2, [sp, #60]	; 0x3c
  401b8a:	2700      	movs	r7, #0
  401b8c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401b90:	990a      	ldr	r1, [sp, #40]	; 0x28
  401b92:	1c4a      	adds	r2, r1, #1
  401b94:	f000 8265 	beq.w	402062 <_svfprintf_r+0x6be>
  401b98:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401b9c:	9207      	str	r2, [sp, #28]
  401b9e:	ea54 0205 	orrs.w	r2, r4, r5
  401ba2:	f040 8264 	bne.w	40206e <_svfprintf_r+0x6ca>
  401ba6:	2900      	cmp	r1, #0
  401ba8:	f040 843c 	bne.w	402424 <_svfprintf_r+0xa80>
  401bac:	2b00      	cmp	r3, #0
  401bae:	f040 84d7 	bne.w	402560 <_svfprintf_r+0xbbc>
  401bb2:	f01b 0301 	ands.w	r3, fp, #1
  401bb6:	930e      	str	r3, [sp, #56]	; 0x38
  401bb8:	f000 8604 	beq.w	4027c4 <_svfprintf_r+0xe20>
  401bbc:	ae42      	add	r6, sp, #264	; 0x108
  401bbe:	2330      	movs	r3, #48	; 0x30
  401bc0:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401bc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401bc8:	4293      	cmp	r3, r2
  401bca:	bfb8      	it	lt
  401bcc:	4613      	movlt	r3, r2
  401bce:	9308      	str	r3, [sp, #32]
  401bd0:	2300      	movs	r3, #0
  401bd2:	9312      	str	r3, [sp, #72]	; 0x48
  401bd4:	b117      	cbz	r7, 401bdc <_svfprintf_r+0x238>
  401bd6:	9b08      	ldr	r3, [sp, #32]
  401bd8:	3301      	adds	r3, #1
  401bda:	9308      	str	r3, [sp, #32]
  401bdc:	9b07      	ldr	r3, [sp, #28]
  401bde:	f013 0302 	ands.w	r3, r3, #2
  401be2:	9310      	str	r3, [sp, #64]	; 0x40
  401be4:	d002      	beq.n	401bec <_svfprintf_r+0x248>
  401be6:	9b08      	ldr	r3, [sp, #32]
  401be8:	3302      	adds	r3, #2
  401bea:	9308      	str	r3, [sp, #32]
  401bec:	9b07      	ldr	r3, [sp, #28]
  401bee:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401bf2:	f040 830e 	bne.w	402212 <_svfprintf_r+0x86e>
  401bf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401bf8:	9a08      	ldr	r2, [sp, #32]
  401bfa:	eba3 0b02 	sub.w	fp, r3, r2
  401bfe:	f1bb 0f00 	cmp.w	fp, #0
  401c02:	f340 8306 	ble.w	402212 <_svfprintf_r+0x86e>
  401c06:	f1bb 0f10 	cmp.w	fp, #16
  401c0a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401c0c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401c0e:	dd29      	ble.n	401c64 <_svfprintf_r+0x2c0>
  401c10:	4643      	mov	r3, r8
  401c12:	4621      	mov	r1, r4
  401c14:	46a8      	mov	r8, r5
  401c16:	2710      	movs	r7, #16
  401c18:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401c1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401c1c:	e006      	b.n	401c2c <_svfprintf_r+0x288>
  401c1e:	f1ab 0b10 	sub.w	fp, fp, #16
  401c22:	f1bb 0f10 	cmp.w	fp, #16
  401c26:	f103 0308 	add.w	r3, r3, #8
  401c2a:	dd18      	ble.n	401c5e <_svfprintf_r+0x2ba>
  401c2c:	3201      	adds	r2, #1
  401c2e:	48b7      	ldr	r0, [pc, #732]	; (401f0c <_svfprintf_r+0x568>)
  401c30:	9226      	str	r2, [sp, #152]	; 0x98
  401c32:	3110      	adds	r1, #16
  401c34:	2a07      	cmp	r2, #7
  401c36:	9127      	str	r1, [sp, #156]	; 0x9c
  401c38:	e883 0081 	stmia.w	r3, {r0, r7}
  401c3c:	ddef      	ble.n	401c1e <_svfprintf_r+0x27a>
  401c3e:	aa25      	add	r2, sp, #148	; 0x94
  401c40:	4629      	mov	r1, r5
  401c42:	4620      	mov	r0, r4
  401c44:	f003 f80a 	bl	404c5c <__ssprint_r>
  401c48:	2800      	cmp	r0, #0
  401c4a:	f47f af7d 	bne.w	401b48 <_svfprintf_r+0x1a4>
  401c4e:	f1ab 0b10 	sub.w	fp, fp, #16
  401c52:	f1bb 0f10 	cmp.w	fp, #16
  401c56:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401c58:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401c5a:	464b      	mov	r3, r9
  401c5c:	dce6      	bgt.n	401c2c <_svfprintf_r+0x288>
  401c5e:	4645      	mov	r5, r8
  401c60:	460c      	mov	r4, r1
  401c62:	4698      	mov	r8, r3
  401c64:	3201      	adds	r2, #1
  401c66:	4ba9      	ldr	r3, [pc, #676]	; (401f0c <_svfprintf_r+0x568>)
  401c68:	9226      	str	r2, [sp, #152]	; 0x98
  401c6a:	445c      	add	r4, fp
  401c6c:	2a07      	cmp	r2, #7
  401c6e:	9427      	str	r4, [sp, #156]	; 0x9c
  401c70:	e888 0808 	stmia.w	r8, {r3, fp}
  401c74:	f300 8498 	bgt.w	4025a8 <_svfprintf_r+0xc04>
  401c78:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401c7c:	f108 0808 	add.w	r8, r8, #8
  401c80:	b177      	cbz	r7, 401ca0 <_svfprintf_r+0x2fc>
  401c82:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401c84:	3301      	adds	r3, #1
  401c86:	3401      	adds	r4, #1
  401c88:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401c8c:	2201      	movs	r2, #1
  401c8e:	2b07      	cmp	r3, #7
  401c90:	9427      	str	r4, [sp, #156]	; 0x9c
  401c92:	9326      	str	r3, [sp, #152]	; 0x98
  401c94:	e888 0006 	stmia.w	r8, {r1, r2}
  401c98:	f300 83db 	bgt.w	402452 <_svfprintf_r+0xaae>
  401c9c:	f108 0808 	add.w	r8, r8, #8
  401ca0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401ca2:	b16b      	cbz	r3, 401cc0 <_svfprintf_r+0x31c>
  401ca4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ca6:	3301      	adds	r3, #1
  401ca8:	3402      	adds	r4, #2
  401caa:	a91e      	add	r1, sp, #120	; 0x78
  401cac:	2202      	movs	r2, #2
  401cae:	2b07      	cmp	r3, #7
  401cb0:	9427      	str	r4, [sp, #156]	; 0x9c
  401cb2:	9326      	str	r3, [sp, #152]	; 0x98
  401cb4:	e888 0006 	stmia.w	r8, {r1, r2}
  401cb8:	f300 83d6 	bgt.w	402468 <_svfprintf_r+0xac4>
  401cbc:	f108 0808 	add.w	r8, r8, #8
  401cc0:	2d80      	cmp	r5, #128	; 0x80
  401cc2:	f000 8315 	beq.w	4022f0 <_svfprintf_r+0x94c>
  401cc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401cc8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401cca:	1a9f      	subs	r7, r3, r2
  401ccc:	2f00      	cmp	r7, #0
  401cce:	dd36      	ble.n	401d3e <_svfprintf_r+0x39a>
  401cd0:	2f10      	cmp	r7, #16
  401cd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401cd4:	4d8e      	ldr	r5, [pc, #568]	; (401f10 <_svfprintf_r+0x56c>)
  401cd6:	dd27      	ble.n	401d28 <_svfprintf_r+0x384>
  401cd8:	4642      	mov	r2, r8
  401cda:	4621      	mov	r1, r4
  401cdc:	46b0      	mov	r8, r6
  401cde:	f04f 0b10 	mov.w	fp, #16
  401ce2:	462e      	mov	r6, r5
  401ce4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401ce6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401ce8:	e004      	b.n	401cf4 <_svfprintf_r+0x350>
  401cea:	3f10      	subs	r7, #16
  401cec:	2f10      	cmp	r7, #16
  401cee:	f102 0208 	add.w	r2, r2, #8
  401cf2:	dd15      	ble.n	401d20 <_svfprintf_r+0x37c>
  401cf4:	3301      	adds	r3, #1
  401cf6:	3110      	adds	r1, #16
  401cf8:	2b07      	cmp	r3, #7
  401cfa:	9127      	str	r1, [sp, #156]	; 0x9c
  401cfc:	9326      	str	r3, [sp, #152]	; 0x98
  401cfe:	e882 0840 	stmia.w	r2, {r6, fp}
  401d02:	ddf2      	ble.n	401cea <_svfprintf_r+0x346>
  401d04:	aa25      	add	r2, sp, #148	; 0x94
  401d06:	4629      	mov	r1, r5
  401d08:	4620      	mov	r0, r4
  401d0a:	f002 ffa7 	bl	404c5c <__ssprint_r>
  401d0e:	2800      	cmp	r0, #0
  401d10:	f47f af1a 	bne.w	401b48 <_svfprintf_r+0x1a4>
  401d14:	3f10      	subs	r7, #16
  401d16:	2f10      	cmp	r7, #16
  401d18:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401d1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d1c:	464a      	mov	r2, r9
  401d1e:	dce9      	bgt.n	401cf4 <_svfprintf_r+0x350>
  401d20:	4635      	mov	r5, r6
  401d22:	460c      	mov	r4, r1
  401d24:	4646      	mov	r6, r8
  401d26:	4690      	mov	r8, r2
  401d28:	3301      	adds	r3, #1
  401d2a:	443c      	add	r4, r7
  401d2c:	2b07      	cmp	r3, #7
  401d2e:	9427      	str	r4, [sp, #156]	; 0x9c
  401d30:	9326      	str	r3, [sp, #152]	; 0x98
  401d32:	e888 00a0 	stmia.w	r8, {r5, r7}
  401d36:	f300 8381 	bgt.w	40243c <_svfprintf_r+0xa98>
  401d3a:	f108 0808 	add.w	r8, r8, #8
  401d3e:	9b07      	ldr	r3, [sp, #28]
  401d40:	05df      	lsls	r7, r3, #23
  401d42:	f100 8268 	bmi.w	402216 <_svfprintf_r+0x872>
  401d46:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d48:	990e      	ldr	r1, [sp, #56]	; 0x38
  401d4a:	f8c8 6000 	str.w	r6, [r8]
  401d4e:	3301      	adds	r3, #1
  401d50:	440c      	add	r4, r1
  401d52:	2b07      	cmp	r3, #7
  401d54:	9427      	str	r4, [sp, #156]	; 0x9c
  401d56:	f8c8 1004 	str.w	r1, [r8, #4]
  401d5a:	9326      	str	r3, [sp, #152]	; 0x98
  401d5c:	f300 834d 	bgt.w	4023fa <_svfprintf_r+0xa56>
  401d60:	f108 0808 	add.w	r8, r8, #8
  401d64:	9b07      	ldr	r3, [sp, #28]
  401d66:	075b      	lsls	r3, r3, #29
  401d68:	d53a      	bpl.n	401de0 <_svfprintf_r+0x43c>
  401d6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401d6c:	9a08      	ldr	r2, [sp, #32]
  401d6e:	1a9d      	subs	r5, r3, r2
  401d70:	2d00      	cmp	r5, #0
  401d72:	dd35      	ble.n	401de0 <_svfprintf_r+0x43c>
  401d74:	2d10      	cmp	r5, #16
  401d76:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d78:	dd20      	ble.n	401dbc <_svfprintf_r+0x418>
  401d7a:	2610      	movs	r6, #16
  401d7c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401d7e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401d82:	e004      	b.n	401d8e <_svfprintf_r+0x3ea>
  401d84:	3d10      	subs	r5, #16
  401d86:	2d10      	cmp	r5, #16
  401d88:	f108 0808 	add.w	r8, r8, #8
  401d8c:	dd16      	ble.n	401dbc <_svfprintf_r+0x418>
  401d8e:	3301      	adds	r3, #1
  401d90:	4a5e      	ldr	r2, [pc, #376]	; (401f0c <_svfprintf_r+0x568>)
  401d92:	9326      	str	r3, [sp, #152]	; 0x98
  401d94:	3410      	adds	r4, #16
  401d96:	2b07      	cmp	r3, #7
  401d98:	9427      	str	r4, [sp, #156]	; 0x9c
  401d9a:	e888 0044 	stmia.w	r8, {r2, r6}
  401d9e:	ddf1      	ble.n	401d84 <_svfprintf_r+0x3e0>
  401da0:	aa25      	add	r2, sp, #148	; 0x94
  401da2:	4659      	mov	r1, fp
  401da4:	4638      	mov	r0, r7
  401da6:	f002 ff59 	bl	404c5c <__ssprint_r>
  401daa:	2800      	cmp	r0, #0
  401dac:	f47f aecc 	bne.w	401b48 <_svfprintf_r+0x1a4>
  401db0:	3d10      	subs	r5, #16
  401db2:	2d10      	cmp	r5, #16
  401db4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401db6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401db8:	46c8      	mov	r8, r9
  401dba:	dce8      	bgt.n	401d8e <_svfprintf_r+0x3ea>
  401dbc:	3301      	adds	r3, #1
  401dbe:	4a53      	ldr	r2, [pc, #332]	; (401f0c <_svfprintf_r+0x568>)
  401dc0:	9326      	str	r3, [sp, #152]	; 0x98
  401dc2:	442c      	add	r4, r5
  401dc4:	2b07      	cmp	r3, #7
  401dc6:	9427      	str	r4, [sp, #156]	; 0x9c
  401dc8:	e888 0024 	stmia.w	r8, {r2, r5}
  401dcc:	dd08      	ble.n	401de0 <_svfprintf_r+0x43c>
  401dce:	aa25      	add	r2, sp, #148	; 0x94
  401dd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401dd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  401dd4:	f002 ff42 	bl	404c5c <__ssprint_r>
  401dd8:	2800      	cmp	r0, #0
  401dda:	f47f aeb5 	bne.w	401b48 <_svfprintf_r+0x1a4>
  401dde:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401de2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401de4:	9908      	ldr	r1, [sp, #32]
  401de6:	428a      	cmp	r2, r1
  401de8:	bfac      	ite	ge
  401dea:	189b      	addge	r3, r3, r2
  401dec:	185b      	addlt	r3, r3, r1
  401dee:	9309      	str	r3, [sp, #36]	; 0x24
  401df0:	2c00      	cmp	r4, #0
  401df2:	f040 830d 	bne.w	402410 <_svfprintf_r+0xa6c>
  401df6:	2300      	movs	r3, #0
  401df8:	9326      	str	r3, [sp, #152]	; 0x98
  401dfa:	46c8      	mov	r8, r9
  401dfc:	e5f9      	b.n	4019f2 <_svfprintf_r+0x4e>
  401dfe:	9311      	str	r3, [sp, #68]	; 0x44
  401e00:	f01b 0320 	ands.w	r3, fp, #32
  401e04:	f040 81e3 	bne.w	4021ce <_svfprintf_r+0x82a>
  401e08:	f01b 0210 	ands.w	r2, fp, #16
  401e0c:	f040 842e 	bne.w	40266c <_svfprintf_r+0xcc8>
  401e10:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401e14:	f000 842a 	beq.w	40266c <_svfprintf_r+0xcc8>
  401e18:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401e1a:	4613      	mov	r3, r2
  401e1c:	460a      	mov	r2, r1
  401e1e:	3204      	adds	r2, #4
  401e20:	880c      	ldrh	r4, [r1, #0]
  401e22:	920f      	str	r2, [sp, #60]	; 0x3c
  401e24:	2500      	movs	r5, #0
  401e26:	e6b0      	b.n	401b8a <_svfprintf_r+0x1e6>
  401e28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e2a:	9311      	str	r3, [sp, #68]	; 0x44
  401e2c:	6816      	ldr	r6, [r2, #0]
  401e2e:	2400      	movs	r4, #0
  401e30:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  401e34:	1d15      	adds	r5, r2, #4
  401e36:	2e00      	cmp	r6, #0
  401e38:	f000 86a7 	beq.w	402b8a <_svfprintf_r+0x11e6>
  401e3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401e3e:	1c53      	adds	r3, r2, #1
  401e40:	f000 8609 	beq.w	402a56 <_svfprintf_r+0x10b2>
  401e44:	4621      	mov	r1, r4
  401e46:	4630      	mov	r0, r6
  401e48:	f002 fa8a 	bl	404360 <memchr>
  401e4c:	2800      	cmp	r0, #0
  401e4e:	f000 86e1 	beq.w	402c14 <_svfprintf_r+0x1270>
  401e52:	1b83      	subs	r3, r0, r6
  401e54:	930e      	str	r3, [sp, #56]	; 0x38
  401e56:	940a      	str	r4, [sp, #40]	; 0x28
  401e58:	950f      	str	r5, [sp, #60]	; 0x3c
  401e5a:	f8cd b01c 	str.w	fp, [sp, #28]
  401e5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401e62:	9308      	str	r3, [sp, #32]
  401e64:	9412      	str	r4, [sp, #72]	; 0x48
  401e66:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401e6a:	e6b3      	b.n	401bd4 <_svfprintf_r+0x230>
  401e6c:	f89a 3000 	ldrb.w	r3, [sl]
  401e70:	2201      	movs	r2, #1
  401e72:	212b      	movs	r1, #43	; 0x2b
  401e74:	e5ee      	b.n	401a54 <_svfprintf_r+0xb0>
  401e76:	f04b 0b20 	orr.w	fp, fp, #32
  401e7a:	f89a 3000 	ldrb.w	r3, [sl]
  401e7e:	e5e9      	b.n	401a54 <_svfprintf_r+0xb0>
  401e80:	9311      	str	r3, [sp, #68]	; 0x44
  401e82:	2a00      	cmp	r2, #0
  401e84:	f040 8795 	bne.w	402db2 <_svfprintf_r+0x140e>
  401e88:	4b22      	ldr	r3, [pc, #136]	; (401f14 <_svfprintf_r+0x570>)
  401e8a:	9318      	str	r3, [sp, #96]	; 0x60
  401e8c:	f01b 0f20 	tst.w	fp, #32
  401e90:	f040 8111 	bne.w	4020b6 <_svfprintf_r+0x712>
  401e94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e96:	f01b 0f10 	tst.w	fp, #16
  401e9a:	4613      	mov	r3, r2
  401e9c:	f040 83e1 	bne.w	402662 <_svfprintf_r+0xcbe>
  401ea0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401ea4:	f000 83dd 	beq.w	402662 <_svfprintf_r+0xcbe>
  401ea8:	3304      	adds	r3, #4
  401eaa:	8814      	ldrh	r4, [r2, #0]
  401eac:	930f      	str	r3, [sp, #60]	; 0x3c
  401eae:	2500      	movs	r5, #0
  401eb0:	f01b 0f01 	tst.w	fp, #1
  401eb4:	f000 810c 	beq.w	4020d0 <_svfprintf_r+0x72c>
  401eb8:	ea54 0305 	orrs.w	r3, r4, r5
  401ebc:	f000 8108 	beq.w	4020d0 <_svfprintf_r+0x72c>
  401ec0:	2330      	movs	r3, #48	; 0x30
  401ec2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  401ec6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  401eca:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  401ece:	f04b 0b02 	orr.w	fp, fp, #2
  401ed2:	2302      	movs	r3, #2
  401ed4:	e659      	b.n	401b8a <_svfprintf_r+0x1e6>
  401ed6:	f89a 3000 	ldrb.w	r3, [sl]
  401eda:	2900      	cmp	r1, #0
  401edc:	f47f adba 	bne.w	401a54 <_svfprintf_r+0xb0>
  401ee0:	2201      	movs	r2, #1
  401ee2:	2120      	movs	r1, #32
  401ee4:	e5b6      	b.n	401a54 <_svfprintf_r+0xb0>
  401ee6:	f04b 0b01 	orr.w	fp, fp, #1
  401eea:	f89a 3000 	ldrb.w	r3, [sl]
  401eee:	e5b1      	b.n	401a54 <_svfprintf_r+0xb0>
  401ef0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  401ef2:	6823      	ldr	r3, [r4, #0]
  401ef4:	930d      	str	r3, [sp, #52]	; 0x34
  401ef6:	4618      	mov	r0, r3
  401ef8:	2800      	cmp	r0, #0
  401efa:	4623      	mov	r3, r4
  401efc:	f103 0304 	add.w	r3, r3, #4
  401f00:	f6ff ae0a 	blt.w	401b18 <_svfprintf_r+0x174>
  401f04:	930f      	str	r3, [sp, #60]	; 0x3c
  401f06:	f89a 3000 	ldrb.w	r3, [sl]
  401f0a:	e5a3      	b.n	401a54 <_svfprintf_r+0xb0>
  401f0c:	00406c14 	.word	0x00406c14
  401f10:	00406c24 	.word	0x00406c24
  401f14:	00406bf4 	.word	0x00406bf4
  401f18:	f04b 0b10 	orr.w	fp, fp, #16
  401f1c:	f01b 0f20 	tst.w	fp, #32
  401f20:	9311      	str	r3, [sp, #68]	; 0x44
  401f22:	f43f ae23 	beq.w	401b6c <_svfprintf_r+0x1c8>
  401f26:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401f28:	3507      	adds	r5, #7
  401f2a:	f025 0307 	bic.w	r3, r5, #7
  401f2e:	f103 0208 	add.w	r2, r3, #8
  401f32:	e9d3 4500 	ldrd	r4, r5, [r3]
  401f36:	920f      	str	r2, [sp, #60]	; 0x3c
  401f38:	2301      	movs	r3, #1
  401f3a:	e626      	b.n	401b8a <_svfprintf_r+0x1e6>
  401f3c:	f89a 3000 	ldrb.w	r3, [sl]
  401f40:	2b2a      	cmp	r3, #42	; 0x2a
  401f42:	f10a 0401 	add.w	r4, sl, #1
  401f46:	f000 8727 	beq.w	402d98 <_svfprintf_r+0x13f4>
  401f4a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401f4e:	2809      	cmp	r0, #9
  401f50:	46a2      	mov	sl, r4
  401f52:	f200 86ad 	bhi.w	402cb0 <_svfprintf_r+0x130c>
  401f56:	2300      	movs	r3, #0
  401f58:	461c      	mov	r4, r3
  401f5a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  401f5e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401f62:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  401f66:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401f6a:	2809      	cmp	r0, #9
  401f6c:	d9f5      	bls.n	401f5a <_svfprintf_r+0x5b6>
  401f6e:	940a      	str	r4, [sp, #40]	; 0x28
  401f70:	e572      	b.n	401a58 <_svfprintf_r+0xb4>
  401f72:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  401f76:	f89a 3000 	ldrb.w	r3, [sl]
  401f7a:	e56b      	b.n	401a54 <_svfprintf_r+0xb0>
  401f7c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  401f80:	f89a 3000 	ldrb.w	r3, [sl]
  401f84:	e566      	b.n	401a54 <_svfprintf_r+0xb0>
  401f86:	f89a 3000 	ldrb.w	r3, [sl]
  401f8a:	2b6c      	cmp	r3, #108	; 0x6c
  401f8c:	bf03      	ittte	eq
  401f8e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  401f92:	f04b 0b20 	orreq.w	fp, fp, #32
  401f96:	f10a 0a01 	addeq.w	sl, sl, #1
  401f9a:	f04b 0b10 	orrne.w	fp, fp, #16
  401f9e:	e559      	b.n	401a54 <_svfprintf_r+0xb0>
  401fa0:	2a00      	cmp	r2, #0
  401fa2:	f040 8711 	bne.w	402dc8 <_svfprintf_r+0x1424>
  401fa6:	f01b 0f20 	tst.w	fp, #32
  401faa:	f040 84f9 	bne.w	4029a0 <_svfprintf_r+0xffc>
  401fae:	f01b 0f10 	tst.w	fp, #16
  401fb2:	f040 84ac 	bne.w	40290e <_svfprintf_r+0xf6a>
  401fb6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401fba:	f000 84a8 	beq.w	40290e <_svfprintf_r+0xf6a>
  401fbe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401fc0:	6813      	ldr	r3, [r2, #0]
  401fc2:	3204      	adds	r2, #4
  401fc4:	920f      	str	r2, [sp, #60]	; 0x3c
  401fc6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  401fca:	801a      	strh	r2, [r3, #0]
  401fcc:	e511      	b.n	4019f2 <_svfprintf_r+0x4e>
  401fce:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401fd0:	4bb3      	ldr	r3, [pc, #716]	; (4022a0 <_svfprintf_r+0x8fc>)
  401fd2:	680c      	ldr	r4, [r1, #0]
  401fd4:	9318      	str	r3, [sp, #96]	; 0x60
  401fd6:	2230      	movs	r2, #48	; 0x30
  401fd8:	2378      	movs	r3, #120	; 0x78
  401fda:	3104      	adds	r1, #4
  401fdc:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  401fe0:	9311      	str	r3, [sp, #68]	; 0x44
  401fe2:	f04b 0b02 	orr.w	fp, fp, #2
  401fe6:	910f      	str	r1, [sp, #60]	; 0x3c
  401fe8:	2500      	movs	r5, #0
  401fea:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  401fee:	2302      	movs	r3, #2
  401ff0:	e5cb      	b.n	401b8a <_svfprintf_r+0x1e6>
  401ff2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401ff4:	9311      	str	r3, [sp, #68]	; 0x44
  401ff6:	680a      	ldr	r2, [r1, #0]
  401ff8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  401ffc:	2300      	movs	r3, #0
  401ffe:	460a      	mov	r2, r1
  402000:	461f      	mov	r7, r3
  402002:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402006:	3204      	adds	r2, #4
  402008:	2301      	movs	r3, #1
  40200a:	9308      	str	r3, [sp, #32]
  40200c:	f8cd b01c 	str.w	fp, [sp, #28]
  402010:	970a      	str	r7, [sp, #40]	; 0x28
  402012:	9712      	str	r7, [sp, #72]	; 0x48
  402014:	920f      	str	r2, [sp, #60]	; 0x3c
  402016:	930e      	str	r3, [sp, #56]	; 0x38
  402018:	ae28      	add	r6, sp, #160	; 0xa0
  40201a:	e5df      	b.n	401bdc <_svfprintf_r+0x238>
  40201c:	9311      	str	r3, [sp, #68]	; 0x44
  40201e:	2a00      	cmp	r2, #0
  402020:	f040 86ea 	bne.w	402df8 <_svfprintf_r+0x1454>
  402024:	f01b 0f20 	tst.w	fp, #32
  402028:	d15d      	bne.n	4020e6 <_svfprintf_r+0x742>
  40202a:	f01b 0f10 	tst.w	fp, #16
  40202e:	f040 8308 	bne.w	402642 <_svfprintf_r+0xc9e>
  402032:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402036:	f000 8304 	beq.w	402642 <_svfprintf_r+0xc9e>
  40203a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40203c:	f9b1 4000 	ldrsh.w	r4, [r1]
  402040:	3104      	adds	r1, #4
  402042:	17e5      	asrs	r5, r4, #31
  402044:	4622      	mov	r2, r4
  402046:	462b      	mov	r3, r5
  402048:	910f      	str	r1, [sp, #60]	; 0x3c
  40204a:	2a00      	cmp	r2, #0
  40204c:	f173 0300 	sbcs.w	r3, r3, #0
  402050:	db58      	blt.n	402104 <_svfprintf_r+0x760>
  402052:	990a      	ldr	r1, [sp, #40]	; 0x28
  402054:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402058:	1c4a      	adds	r2, r1, #1
  40205a:	f04f 0301 	mov.w	r3, #1
  40205e:	f47f ad9b 	bne.w	401b98 <_svfprintf_r+0x1f4>
  402062:	ea54 0205 	orrs.w	r2, r4, r5
  402066:	f000 81df 	beq.w	402428 <_svfprintf_r+0xa84>
  40206a:	f8cd b01c 	str.w	fp, [sp, #28]
  40206e:	2b01      	cmp	r3, #1
  402070:	f000 827b 	beq.w	40256a <_svfprintf_r+0xbc6>
  402074:	2b02      	cmp	r3, #2
  402076:	f040 8206 	bne.w	402486 <_svfprintf_r+0xae2>
  40207a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40207c:	464e      	mov	r6, r9
  40207e:	0923      	lsrs	r3, r4, #4
  402080:	f004 010f 	and.w	r1, r4, #15
  402084:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402088:	092a      	lsrs	r2, r5, #4
  40208a:	461c      	mov	r4, r3
  40208c:	4615      	mov	r5, r2
  40208e:	5c43      	ldrb	r3, [r0, r1]
  402090:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402094:	ea54 0305 	orrs.w	r3, r4, r5
  402098:	d1f1      	bne.n	40207e <_svfprintf_r+0x6da>
  40209a:	eba9 0306 	sub.w	r3, r9, r6
  40209e:	930e      	str	r3, [sp, #56]	; 0x38
  4020a0:	e590      	b.n	401bc4 <_svfprintf_r+0x220>
  4020a2:	9311      	str	r3, [sp, #68]	; 0x44
  4020a4:	2a00      	cmp	r2, #0
  4020a6:	f040 86a3 	bne.w	402df0 <_svfprintf_r+0x144c>
  4020aa:	4b7e      	ldr	r3, [pc, #504]	; (4022a4 <_svfprintf_r+0x900>)
  4020ac:	9318      	str	r3, [sp, #96]	; 0x60
  4020ae:	f01b 0f20 	tst.w	fp, #32
  4020b2:	f43f aeef 	beq.w	401e94 <_svfprintf_r+0x4f0>
  4020b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4020b8:	3507      	adds	r5, #7
  4020ba:	f025 0307 	bic.w	r3, r5, #7
  4020be:	f103 0208 	add.w	r2, r3, #8
  4020c2:	f01b 0f01 	tst.w	fp, #1
  4020c6:	920f      	str	r2, [sp, #60]	; 0x3c
  4020c8:	e9d3 4500 	ldrd	r4, r5, [r3]
  4020cc:	f47f aef4 	bne.w	401eb8 <_svfprintf_r+0x514>
  4020d0:	2302      	movs	r3, #2
  4020d2:	e55a      	b.n	401b8a <_svfprintf_r+0x1e6>
  4020d4:	9311      	str	r3, [sp, #68]	; 0x44
  4020d6:	2a00      	cmp	r2, #0
  4020d8:	f040 8686 	bne.w	402de8 <_svfprintf_r+0x1444>
  4020dc:	f04b 0b10 	orr.w	fp, fp, #16
  4020e0:	f01b 0f20 	tst.w	fp, #32
  4020e4:	d0a1      	beq.n	40202a <_svfprintf_r+0x686>
  4020e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4020e8:	3507      	adds	r5, #7
  4020ea:	f025 0507 	bic.w	r5, r5, #7
  4020ee:	e9d5 2300 	ldrd	r2, r3, [r5]
  4020f2:	2a00      	cmp	r2, #0
  4020f4:	f105 0108 	add.w	r1, r5, #8
  4020f8:	461d      	mov	r5, r3
  4020fa:	f173 0300 	sbcs.w	r3, r3, #0
  4020fe:	910f      	str	r1, [sp, #60]	; 0x3c
  402100:	4614      	mov	r4, r2
  402102:	daa6      	bge.n	402052 <_svfprintf_r+0x6ae>
  402104:	272d      	movs	r7, #45	; 0x2d
  402106:	4264      	negs	r4, r4
  402108:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40210c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402110:	2301      	movs	r3, #1
  402112:	e53d      	b.n	401b90 <_svfprintf_r+0x1ec>
  402114:	9311      	str	r3, [sp, #68]	; 0x44
  402116:	2a00      	cmp	r2, #0
  402118:	f040 8662 	bne.w	402de0 <_svfprintf_r+0x143c>
  40211c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40211e:	3507      	adds	r5, #7
  402120:	f025 0307 	bic.w	r3, r5, #7
  402124:	f103 0208 	add.w	r2, r3, #8
  402128:	920f      	str	r2, [sp, #60]	; 0x3c
  40212a:	681a      	ldr	r2, [r3, #0]
  40212c:	9215      	str	r2, [sp, #84]	; 0x54
  40212e:	685b      	ldr	r3, [r3, #4]
  402130:	9314      	str	r3, [sp, #80]	; 0x50
  402132:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402134:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402136:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40213a:	4628      	mov	r0, r5
  40213c:	4621      	mov	r1, r4
  40213e:	f04f 32ff 	mov.w	r2, #4294967295
  402142:	4b59      	ldr	r3, [pc, #356]	; (4022a8 <_svfprintf_r+0x904>)
  402144:	f003 fe50 	bl	405de8 <__aeabi_dcmpun>
  402148:	2800      	cmp	r0, #0
  40214a:	f040 834a 	bne.w	4027e2 <_svfprintf_r+0xe3e>
  40214e:	4628      	mov	r0, r5
  402150:	4621      	mov	r1, r4
  402152:	f04f 32ff 	mov.w	r2, #4294967295
  402156:	4b54      	ldr	r3, [pc, #336]	; (4022a8 <_svfprintf_r+0x904>)
  402158:	f003 fe28 	bl	405dac <__aeabi_dcmple>
  40215c:	2800      	cmp	r0, #0
  40215e:	f040 8340 	bne.w	4027e2 <_svfprintf_r+0xe3e>
  402162:	a815      	add	r0, sp, #84	; 0x54
  402164:	c80d      	ldmia	r0, {r0, r2, r3}
  402166:	9914      	ldr	r1, [sp, #80]	; 0x50
  402168:	f003 fe16 	bl	405d98 <__aeabi_dcmplt>
  40216c:	2800      	cmp	r0, #0
  40216e:	f040 8530 	bne.w	402bd2 <_svfprintf_r+0x122e>
  402172:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402176:	4e4d      	ldr	r6, [pc, #308]	; (4022ac <_svfprintf_r+0x908>)
  402178:	4b4d      	ldr	r3, [pc, #308]	; (4022b0 <_svfprintf_r+0x90c>)
  40217a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40217e:	9007      	str	r0, [sp, #28]
  402180:	9811      	ldr	r0, [sp, #68]	; 0x44
  402182:	2203      	movs	r2, #3
  402184:	2100      	movs	r1, #0
  402186:	9208      	str	r2, [sp, #32]
  402188:	910a      	str	r1, [sp, #40]	; 0x28
  40218a:	2847      	cmp	r0, #71	; 0x47
  40218c:	bfd8      	it	le
  40218e:	461e      	movle	r6, r3
  402190:	920e      	str	r2, [sp, #56]	; 0x38
  402192:	9112      	str	r1, [sp, #72]	; 0x48
  402194:	e51e      	b.n	401bd4 <_svfprintf_r+0x230>
  402196:	f04b 0b08 	orr.w	fp, fp, #8
  40219a:	f89a 3000 	ldrb.w	r3, [sl]
  40219e:	e459      	b.n	401a54 <_svfprintf_r+0xb0>
  4021a0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4021a4:	2300      	movs	r3, #0
  4021a6:	461c      	mov	r4, r3
  4021a8:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4021ac:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4021b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4021b4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4021b8:	2809      	cmp	r0, #9
  4021ba:	d9f5      	bls.n	4021a8 <_svfprintf_r+0x804>
  4021bc:	940d      	str	r4, [sp, #52]	; 0x34
  4021be:	e44b      	b.n	401a58 <_svfprintf_r+0xb4>
  4021c0:	f04b 0b10 	orr.w	fp, fp, #16
  4021c4:	9311      	str	r3, [sp, #68]	; 0x44
  4021c6:	f01b 0320 	ands.w	r3, fp, #32
  4021ca:	f43f ae1d 	beq.w	401e08 <_svfprintf_r+0x464>
  4021ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021d0:	3507      	adds	r5, #7
  4021d2:	f025 0307 	bic.w	r3, r5, #7
  4021d6:	f103 0208 	add.w	r2, r3, #8
  4021da:	e9d3 4500 	ldrd	r4, r5, [r3]
  4021de:	920f      	str	r2, [sp, #60]	; 0x3c
  4021e0:	2300      	movs	r3, #0
  4021e2:	e4d2      	b.n	401b8a <_svfprintf_r+0x1e6>
  4021e4:	9311      	str	r3, [sp, #68]	; 0x44
  4021e6:	2a00      	cmp	r2, #0
  4021e8:	f040 85e7 	bne.w	402dba <_svfprintf_r+0x1416>
  4021ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4021ee:	2a00      	cmp	r2, #0
  4021f0:	f43f aca3 	beq.w	401b3a <_svfprintf_r+0x196>
  4021f4:	2300      	movs	r3, #0
  4021f6:	2101      	movs	r1, #1
  4021f8:	461f      	mov	r7, r3
  4021fa:	9108      	str	r1, [sp, #32]
  4021fc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402200:	f8cd b01c 	str.w	fp, [sp, #28]
  402204:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402208:	930a      	str	r3, [sp, #40]	; 0x28
  40220a:	9312      	str	r3, [sp, #72]	; 0x48
  40220c:	910e      	str	r1, [sp, #56]	; 0x38
  40220e:	ae28      	add	r6, sp, #160	; 0xa0
  402210:	e4e4      	b.n	401bdc <_svfprintf_r+0x238>
  402212:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402214:	e534      	b.n	401c80 <_svfprintf_r+0x2dc>
  402216:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402218:	2b65      	cmp	r3, #101	; 0x65
  40221a:	f340 80a7 	ble.w	40236c <_svfprintf_r+0x9c8>
  40221e:	a815      	add	r0, sp, #84	; 0x54
  402220:	c80d      	ldmia	r0, {r0, r2, r3}
  402222:	9914      	ldr	r1, [sp, #80]	; 0x50
  402224:	f003 fdae 	bl	405d84 <__aeabi_dcmpeq>
  402228:	2800      	cmp	r0, #0
  40222a:	f000 8150 	beq.w	4024ce <_svfprintf_r+0xb2a>
  40222e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402230:	4a20      	ldr	r2, [pc, #128]	; (4022b4 <_svfprintf_r+0x910>)
  402232:	f8c8 2000 	str.w	r2, [r8]
  402236:	3301      	adds	r3, #1
  402238:	3401      	adds	r4, #1
  40223a:	2201      	movs	r2, #1
  40223c:	2b07      	cmp	r3, #7
  40223e:	9427      	str	r4, [sp, #156]	; 0x9c
  402240:	9326      	str	r3, [sp, #152]	; 0x98
  402242:	f8c8 2004 	str.w	r2, [r8, #4]
  402246:	f300 836a 	bgt.w	40291e <_svfprintf_r+0xf7a>
  40224a:	f108 0808 	add.w	r8, r8, #8
  40224e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402250:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402252:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402254:	4293      	cmp	r3, r2
  402256:	db03      	blt.n	402260 <_svfprintf_r+0x8bc>
  402258:	9b07      	ldr	r3, [sp, #28]
  40225a:	07dd      	lsls	r5, r3, #31
  40225c:	f57f ad82 	bpl.w	401d64 <_svfprintf_r+0x3c0>
  402260:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402262:	9919      	ldr	r1, [sp, #100]	; 0x64
  402264:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402266:	f8c8 2000 	str.w	r2, [r8]
  40226a:	3301      	adds	r3, #1
  40226c:	440c      	add	r4, r1
  40226e:	2b07      	cmp	r3, #7
  402270:	f8c8 1004 	str.w	r1, [r8, #4]
  402274:	9427      	str	r4, [sp, #156]	; 0x9c
  402276:	9326      	str	r3, [sp, #152]	; 0x98
  402278:	f300 839e 	bgt.w	4029b8 <_svfprintf_r+0x1014>
  40227c:	f108 0808 	add.w	r8, r8, #8
  402280:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402282:	1e5e      	subs	r6, r3, #1
  402284:	2e00      	cmp	r6, #0
  402286:	f77f ad6d 	ble.w	401d64 <_svfprintf_r+0x3c0>
  40228a:	2e10      	cmp	r6, #16
  40228c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40228e:	4d0a      	ldr	r5, [pc, #40]	; (4022b8 <_svfprintf_r+0x914>)
  402290:	f340 81f5 	ble.w	40267e <_svfprintf_r+0xcda>
  402294:	4622      	mov	r2, r4
  402296:	2710      	movs	r7, #16
  402298:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40229c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40229e:	e013      	b.n	4022c8 <_svfprintf_r+0x924>
  4022a0:	00406bf4 	.word	0x00406bf4
  4022a4:	00406be0 	.word	0x00406be0
  4022a8:	7fefffff 	.word	0x7fefffff
  4022ac:	00406bd4 	.word	0x00406bd4
  4022b0:	00406bd0 	.word	0x00406bd0
  4022b4:	00406c10 	.word	0x00406c10
  4022b8:	00406c24 	.word	0x00406c24
  4022bc:	f108 0808 	add.w	r8, r8, #8
  4022c0:	3e10      	subs	r6, #16
  4022c2:	2e10      	cmp	r6, #16
  4022c4:	f340 81da 	ble.w	40267c <_svfprintf_r+0xcd8>
  4022c8:	3301      	adds	r3, #1
  4022ca:	3210      	adds	r2, #16
  4022cc:	2b07      	cmp	r3, #7
  4022ce:	9227      	str	r2, [sp, #156]	; 0x9c
  4022d0:	9326      	str	r3, [sp, #152]	; 0x98
  4022d2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4022d6:	ddf1      	ble.n	4022bc <_svfprintf_r+0x918>
  4022d8:	aa25      	add	r2, sp, #148	; 0x94
  4022da:	4621      	mov	r1, r4
  4022dc:	4658      	mov	r0, fp
  4022de:	f002 fcbd 	bl	404c5c <__ssprint_r>
  4022e2:	2800      	cmp	r0, #0
  4022e4:	f47f ac30 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4022e8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4022ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022ec:	46c8      	mov	r8, r9
  4022ee:	e7e7      	b.n	4022c0 <_svfprintf_r+0x91c>
  4022f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4022f2:	9a08      	ldr	r2, [sp, #32]
  4022f4:	1a9f      	subs	r7, r3, r2
  4022f6:	2f00      	cmp	r7, #0
  4022f8:	f77f ace5 	ble.w	401cc6 <_svfprintf_r+0x322>
  4022fc:	2f10      	cmp	r7, #16
  4022fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402300:	4db6      	ldr	r5, [pc, #728]	; (4025dc <_svfprintf_r+0xc38>)
  402302:	dd27      	ble.n	402354 <_svfprintf_r+0x9b0>
  402304:	4642      	mov	r2, r8
  402306:	4621      	mov	r1, r4
  402308:	46b0      	mov	r8, r6
  40230a:	f04f 0b10 	mov.w	fp, #16
  40230e:	462e      	mov	r6, r5
  402310:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402312:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402314:	e004      	b.n	402320 <_svfprintf_r+0x97c>
  402316:	3f10      	subs	r7, #16
  402318:	2f10      	cmp	r7, #16
  40231a:	f102 0208 	add.w	r2, r2, #8
  40231e:	dd15      	ble.n	40234c <_svfprintf_r+0x9a8>
  402320:	3301      	adds	r3, #1
  402322:	3110      	adds	r1, #16
  402324:	2b07      	cmp	r3, #7
  402326:	9127      	str	r1, [sp, #156]	; 0x9c
  402328:	9326      	str	r3, [sp, #152]	; 0x98
  40232a:	e882 0840 	stmia.w	r2, {r6, fp}
  40232e:	ddf2      	ble.n	402316 <_svfprintf_r+0x972>
  402330:	aa25      	add	r2, sp, #148	; 0x94
  402332:	4629      	mov	r1, r5
  402334:	4620      	mov	r0, r4
  402336:	f002 fc91 	bl	404c5c <__ssprint_r>
  40233a:	2800      	cmp	r0, #0
  40233c:	f47f ac04 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402340:	3f10      	subs	r7, #16
  402342:	2f10      	cmp	r7, #16
  402344:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402346:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402348:	464a      	mov	r2, r9
  40234a:	dce9      	bgt.n	402320 <_svfprintf_r+0x97c>
  40234c:	4635      	mov	r5, r6
  40234e:	460c      	mov	r4, r1
  402350:	4646      	mov	r6, r8
  402352:	4690      	mov	r8, r2
  402354:	3301      	adds	r3, #1
  402356:	443c      	add	r4, r7
  402358:	2b07      	cmp	r3, #7
  40235a:	9427      	str	r4, [sp, #156]	; 0x9c
  40235c:	9326      	str	r3, [sp, #152]	; 0x98
  40235e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402362:	f300 8232 	bgt.w	4027ca <_svfprintf_r+0xe26>
  402366:	f108 0808 	add.w	r8, r8, #8
  40236a:	e4ac      	b.n	401cc6 <_svfprintf_r+0x322>
  40236c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40236e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402370:	2b01      	cmp	r3, #1
  402372:	f340 81fe 	ble.w	402772 <_svfprintf_r+0xdce>
  402376:	3701      	adds	r7, #1
  402378:	3401      	adds	r4, #1
  40237a:	2301      	movs	r3, #1
  40237c:	2f07      	cmp	r7, #7
  40237e:	9427      	str	r4, [sp, #156]	; 0x9c
  402380:	9726      	str	r7, [sp, #152]	; 0x98
  402382:	f8c8 6000 	str.w	r6, [r8]
  402386:	f8c8 3004 	str.w	r3, [r8, #4]
  40238a:	f300 8203 	bgt.w	402794 <_svfprintf_r+0xdf0>
  40238e:	f108 0808 	add.w	r8, r8, #8
  402392:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402394:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402396:	f8c8 3000 	str.w	r3, [r8]
  40239a:	3701      	adds	r7, #1
  40239c:	4414      	add	r4, r2
  40239e:	2f07      	cmp	r7, #7
  4023a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4023a2:	9726      	str	r7, [sp, #152]	; 0x98
  4023a4:	f8c8 2004 	str.w	r2, [r8, #4]
  4023a8:	f300 8200 	bgt.w	4027ac <_svfprintf_r+0xe08>
  4023ac:	f108 0808 	add.w	r8, r8, #8
  4023b0:	a815      	add	r0, sp, #84	; 0x54
  4023b2:	c80d      	ldmia	r0, {r0, r2, r3}
  4023b4:	9914      	ldr	r1, [sp, #80]	; 0x50
  4023b6:	f003 fce5 	bl	405d84 <__aeabi_dcmpeq>
  4023ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4023bc:	2800      	cmp	r0, #0
  4023be:	f040 8101 	bne.w	4025c4 <_svfprintf_r+0xc20>
  4023c2:	3b01      	subs	r3, #1
  4023c4:	3701      	adds	r7, #1
  4023c6:	3601      	adds	r6, #1
  4023c8:	441c      	add	r4, r3
  4023ca:	2f07      	cmp	r7, #7
  4023cc:	9726      	str	r7, [sp, #152]	; 0x98
  4023ce:	9427      	str	r4, [sp, #156]	; 0x9c
  4023d0:	f8c8 6000 	str.w	r6, [r8]
  4023d4:	f8c8 3004 	str.w	r3, [r8, #4]
  4023d8:	f300 8127 	bgt.w	40262a <_svfprintf_r+0xc86>
  4023dc:	f108 0808 	add.w	r8, r8, #8
  4023e0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4023e2:	f8c8 2004 	str.w	r2, [r8, #4]
  4023e6:	3701      	adds	r7, #1
  4023e8:	4414      	add	r4, r2
  4023ea:	ab21      	add	r3, sp, #132	; 0x84
  4023ec:	2f07      	cmp	r7, #7
  4023ee:	9427      	str	r4, [sp, #156]	; 0x9c
  4023f0:	9726      	str	r7, [sp, #152]	; 0x98
  4023f2:	f8c8 3000 	str.w	r3, [r8]
  4023f6:	f77f acb3 	ble.w	401d60 <_svfprintf_r+0x3bc>
  4023fa:	aa25      	add	r2, sp, #148	; 0x94
  4023fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4023fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402400:	f002 fc2c 	bl	404c5c <__ssprint_r>
  402404:	2800      	cmp	r0, #0
  402406:	f47f ab9f 	bne.w	401b48 <_svfprintf_r+0x1a4>
  40240a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40240c:	46c8      	mov	r8, r9
  40240e:	e4a9      	b.n	401d64 <_svfprintf_r+0x3c0>
  402410:	aa25      	add	r2, sp, #148	; 0x94
  402412:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402414:	980c      	ldr	r0, [sp, #48]	; 0x30
  402416:	f002 fc21 	bl	404c5c <__ssprint_r>
  40241a:	2800      	cmp	r0, #0
  40241c:	f43f aceb 	beq.w	401df6 <_svfprintf_r+0x452>
  402420:	f7ff bb92 	b.w	401b48 <_svfprintf_r+0x1a4>
  402424:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402428:	2b01      	cmp	r3, #1
  40242a:	f000 8134 	beq.w	402696 <_svfprintf_r+0xcf2>
  40242e:	2b02      	cmp	r3, #2
  402430:	d125      	bne.n	40247e <_svfprintf_r+0xada>
  402432:	f8cd b01c 	str.w	fp, [sp, #28]
  402436:	2400      	movs	r4, #0
  402438:	2500      	movs	r5, #0
  40243a:	e61e      	b.n	40207a <_svfprintf_r+0x6d6>
  40243c:	aa25      	add	r2, sp, #148	; 0x94
  40243e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402440:	980c      	ldr	r0, [sp, #48]	; 0x30
  402442:	f002 fc0b 	bl	404c5c <__ssprint_r>
  402446:	2800      	cmp	r0, #0
  402448:	f47f ab7e 	bne.w	401b48 <_svfprintf_r+0x1a4>
  40244c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40244e:	46c8      	mov	r8, r9
  402450:	e475      	b.n	401d3e <_svfprintf_r+0x39a>
  402452:	aa25      	add	r2, sp, #148	; 0x94
  402454:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402456:	980c      	ldr	r0, [sp, #48]	; 0x30
  402458:	f002 fc00 	bl	404c5c <__ssprint_r>
  40245c:	2800      	cmp	r0, #0
  40245e:	f47f ab73 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402462:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402464:	46c8      	mov	r8, r9
  402466:	e41b      	b.n	401ca0 <_svfprintf_r+0x2fc>
  402468:	aa25      	add	r2, sp, #148	; 0x94
  40246a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40246c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40246e:	f002 fbf5 	bl	404c5c <__ssprint_r>
  402472:	2800      	cmp	r0, #0
  402474:	f47f ab68 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402478:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40247a:	46c8      	mov	r8, r9
  40247c:	e420      	b.n	401cc0 <_svfprintf_r+0x31c>
  40247e:	f8cd b01c 	str.w	fp, [sp, #28]
  402482:	2400      	movs	r4, #0
  402484:	2500      	movs	r5, #0
  402486:	4649      	mov	r1, r9
  402488:	e000      	b.n	40248c <_svfprintf_r+0xae8>
  40248a:	4631      	mov	r1, r6
  40248c:	08e2      	lsrs	r2, r4, #3
  40248e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402492:	08e8      	lsrs	r0, r5, #3
  402494:	f004 0307 	and.w	r3, r4, #7
  402498:	4605      	mov	r5, r0
  40249a:	4614      	mov	r4, r2
  40249c:	3330      	adds	r3, #48	; 0x30
  40249e:	ea54 0205 	orrs.w	r2, r4, r5
  4024a2:	f801 3c01 	strb.w	r3, [r1, #-1]
  4024a6:	f101 36ff 	add.w	r6, r1, #4294967295
  4024aa:	d1ee      	bne.n	40248a <_svfprintf_r+0xae6>
  4024ac:	9a07      	ldr	r2, [sp, #28]
  4024ae:	07d2      	lsls	r2, r2, #31
  4024b0:	f57f adf3 	bpl.w	40209a <_svfprintf_r+0x6f6>
  4024b4:	2b30      	cmp	r3, #48	; 0x30
  4024b6:	f43f adf0 	beq.w	40209a <_svfprintf_r+0x6f6>
  4024ba:	3902      	subs	r1, #2
  4024bc:	2330      	movs	r3, #48	; 0x30
  4024be:	f806 3c01 	strb.w	r3, [r6, #-1]
  4024c2:	eba9 0301 	sub.w	r3, r9, r1
  4024c6:	930e      	str	r3, [sp, #56]	; 0x38
  4024c8:	460e      	mov	r6, r1
  4024ca:	f7ff bb7b 	b.w	401bc4 <_svfprintf_r+0x220>
  4024ce:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4024d0:	2900      	cmp	r1, #0
  4024d2:	f340 822e 	ble.w	402932 <_svfprintf_r+0xf8e>
  4024d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4024d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4024da:	4293      	cmp	r3, r2
  4024dc:	bfa8      	it	ge
  4024de:	4613      	movge	r3, r2
  4024e0:	2b00      	cmp	r3, #0
  4024e2:	461f      	mov	r7, r3
  4024e4:	dd0d      	ble.n	402502 <_svfprintf_r+0xb5e>
  4024e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024e8:	f8c8 6000 	str.w	r6, [r8]
  4024ec:	3301      	adds	r3, #1
  4024ee:	443c      	add	r4, r7
  4024f0:	2b07      	cmp	r3, #7
  4024f2:	9427      	str	r4, [sp, #156]	; 0x9c
  4024f4:	f8c8 7004 	str.w	r7, [r8, #4]
  4024f8:	9326      	str	r3, [sp, #152]	; 0x98
  4024fa:	f300 831f 	bgt.w	402b3c <_svfprintf_r+0x1198>
  4024fe:	f108 0808 	add.w	r8, r8, #8
  402502:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402504:	2f00      	cmp	r7, #0
  402506:	bfa8      	it	ge
  402508:	1bdb      	subge	r3, r3, r7
  40250a:	2b00      	cmp	r3, #0
  40250c:	461f      	mov	r7, r3
  40250e:	f340 80d6 	ble.w	4026be <_svfprintf_r+0xd1a>
  402512:	2f10      	cmp	r7, #16
  402514:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402516:	4d31      	ldr	r5, [pc, #196]	; (4025dc <_svfprintf_r+0xc38>)
  402518:	f340 81ed 	ble.w	4028f6 <_svfprintf_r+0xf52>
  40251c:	4642      	mov	r2, r8
  40251e:	4621      	mov	r1, r4
  402520:	46b0      	mov	r8, r6
  402522:	f04f 0b10 	mov.w	fp, #16
  402526:	462e      	mov	r6, r5
  402528:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40252a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40252c:	e004      	b.n	402538 <_svfprintf_r+0xb94>
  40252e:	3208      	adds	r2, #8
  402530:	3f10      	subs	r7, #16
  402532:	2f10      	cmp	r7, #16
  402534:	f340 81db 	ble.w	4028ee <_svfprintf_r+0xf4a>
  402538:	3301      	adds	r3, #1
  40253a:	3110      	adds	r1, #16
  40253c:	2b07      	cmp	r3, #7
  40253e:	9127      	str	r1, [sp, #156]	; 0x9c
  402540:	9326      	str	r3, [sp, #152]	; 0x98
  402542:	e882 0840 	stmia.w	r2, {r6, fp}
  402546:	ddf2      	ble.n	40252e <_svfprintf_r+0xb8a>
  402548:	aa25      	add	r2, sp, #148	; 0x94
  40254a:	4629      	mov	r1, r5
  40254c:	4620      	mov	r0, r4
  40254e:	f002 fb85 	bl	404c5c <__ssprint_r>
  402552:	2800      	cmp	r0, #0
  402554:	f47f aaf8 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402558:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40255a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40255c:	464a      	mov	r2, r9
  40255e:	e7e7      	b.n	402530 <_svfprintf_r+0xb8c>
  402560:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402562:	930e      	str	r3, [sp, #56]	; 0x38
  402564:	464e      	mov	r6, r9
  402566:	f7ff bb2d 	b.w	401bc4 <_svfprintf_r+0x220>
  40256a:	2d00      	cmp	r5, #0
  40256c:	bf08      	it	eq
  40256e:	2c0a      	cmpeq	r4, #10
  402570:	f0c0 808f 	bcc.w	402692 <_svfprintf_r+0xcee>
  402574:	464e      	mov	r6, r9
  402576:	4620      	mov	r0, r4
  402578:	4629      	mov	r1, r5
  40257a:	220a      	movs	r2, #10
  40257c:	2300      	movs	r3, #0
  40257e:	f003 fc71 	bl	405e64 <__aeabi_uldivmod>
  402582:	3230      	adds	r2, #48	; 0x30
  402584:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402588:	4620      	mov	r0, r4
  40258a:	4629      	mov	r1, r5
  40258c:	2300      	movs	r3, #0
  40258e:	220a      	movs	r2, #10
  402590:	f003 fc68 	bl	405e64 <__aeabi_uldivmod>
  402594:	4604      	mov	r4, r0
  402596:	460d      	mov	r5, r1
  402598:	ea54 0305 	orrs.w	r3, r4, r5
  40259c:	d1eb      	bne.n	402576 <_svfprintf_r+0xbd2>
  40259e:	eba9 0306 	sub.w	r3, r9, r6
  4025a2:	930e      	str	r3, [sp, #56]	; 0x38
  4025a4:	f7ff bb0e 	b.w	401bc4 <_svfprintf_r+0x220>
  4025a8:	aa25      	add	r2, sp, #148	; 0x94
  4025aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025ac:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025ae:	f002 fb55 	bl	404c5c <__ssprint_r>
  4025b2:	2800      	cmp	r0, #0
  4025b4:	f47f aac8 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4025b8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4025bc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025be:	46c8      	mov	r8, r9
  4025c0:	f7ff bb5e 	b.w	401c80 <_svfprintf_r+0x2dc>
  4025c4:	1e5e      	subs	r6, r3, #1
  4025c6:	2e00      	cmp	r6, #0
  4025c8:	f77f af0a 	ble.w	4023e0 <_svfprintf_r+0xa3c>
  4025cc:	2e10      	cmp	r6, #16
  4025ce:	4d03      	ldr	r5, [pc, #12]	; (4025dc <_svfprintf_r+0xc38>)
  4025d0:	dd22      	ble.n	402618 <_svfprintf_r+0xc74>
  4025d2:	4622      	mov	r2, r4
  4025d4:	f04f 0b10 	mov.w	fp, #16
  4025d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025da:	e006      	b.n	4025ea <_svfprintf_r+0xc46>
  4025dc:	00406c24 	.word	0x00406c24
  4025e0:	3e10      	subs	r6, #16
  4025e2:	2e10      	cmp	r6, #16
  4025e4:	f108 0808 	add.w	r8, r8, #8
  4025e8:	dd15      	ble.n	402616 <_svfprintf_r+0xc72>
  4025ea:	3701      	adds	r7, #1
  4025ec:	3210      	adds	r2, #16
  4025ee:	2f07      	cmp	r7, #7
  4025f0:	9227      	str	r2, [sp, #156]	; 0x9c
  4025f2:	9726      	str	r7, [sp, #152]	; 0x98
  4025f4:	e888 0820 	stmia.w	r8, {r5, fp}
  4025f8:	ddf2      	ble.n	4025e0 <_svfprintf_r+0xc3c>
  4025fa:	aa25      	add	r2, sp, #148	; 0x94
  4025fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025fe:	4620      	mov	r0, r4
  402600:	f002 fb2c 	bl	404c5c <__ssprint_r>
  402604:	2800      	cmp	r0, #0
  402606:	f47f aa9f 	bne.w	401b48 <_svfprintf_r+0x1a4>
  40260a:	3e10      	subs	r6, #16
  40260c:	2e10      	cmp	r6, #16
  40260e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402610:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402612:	46c8      	mov	r8, r9
  402614:	dce9      	bgt.n	4025ea <_svfprintf_r+0xc46>
  402616:	4614      	mov	r4, r2
  402618:	3701      	adds	r7, #1
  40261a:	4434      	add	r4, r6
  40261c:	2f07      	cmp	r7, #7
  40261e:	9427      	str	r4, [sp, #156]	; 0x9c
  402620:	9726      	str	r7, [sp, #152]	; 0x98
  402622:	e888 0060 	stmia.w	r8, {r5, r6}
  402626:	f77f aed9 	ble.w	4023dc <_svfprintf_r+0xa38>
  40262a:	aa25      	add	r2, sp, #148	; 0x94
  40262c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40262e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402630:	f002 fb14 	bl	404c5c <__ssprint_r>
  402634:	2800      	cmp	r0, #0
  402636:	f47f aa87 	bne.w	401b48 <_svfprintf_r+0x1a4>
  40263a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40263c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40263e:	46c8      	mov	r8, r9
  402640:	e6ce      	b.n	4023e0 <_svfprintf_r+0xa3c>
  402642:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402644:	6814      	ldr	r4, [r2, #0]
  402646:	4613      	mov	r3, r2
  402648:	3304      	adds	r3, #4
  40264a:	17e5      	asrs	r5, r4, #31
  40264c:	930f      	str	r3, [sp, #60]	; 0x3c
  40264e:	4622      	mov	r2, r4
  402650:	462b      	mov	r3, r5
  402652:	e4fa      	b.n	40204a <_svfprintf_r+0x6a6>
  402654:	3204      	adds	r2, #4
  402656:	681c      	ldr	r4, [r3, #0]
  402658:	920f      	str	r2, [sp, #60]	; 0x3c
  40265a:	2301      	movs	r3, #1
  40265c:	2500      	movs	r5, #0
  40265e:	f7ff ba94 	b.w	401b8a <_svfprintf_r+0x1e6>
  402662:	681c      	ldr	r4, [r3, #0]
  402664:	3304      	adds	r3, #4
  402666:	930f      	str	r3, [sp, #60]	; 0x3c
  402668:	2500      	movs	r5, #0
  40266a:	e421      	b.n	401eb0 <_svfprintf_r+0x50c>
  40266c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40266e:	460a      	mov	r2, r1
  402670:	3204      	adds	r2, #4
  402672:	680c      	ldr	r4, [r1, #0]
  402674:	920f      	str	r2, [sp, #60]	; 0x3c
  402676:	2500      	movs	r5, #0
  402678:	f7ff ba87 	b.w	401b8a <_svfprintf_r+0x1e6>
  40267c:	4614      	mov	r4, r2
  40267e:	3301      	adds	r3, #1
  402680:	4434      	add	r4, r6
  402682:	2b07      	cmp	r3, #7
  402684:	9427      	str	r4, [sp, #156]	; 0x9c
  402686:	9326      	str	r3, [sp, #152]	; 0x98
  402688:	e888 0060 	stmia.w	r8, {r5, r6}
  40268c:	f77f ab68 	ble.w	401d60 <_svfprintf_r+0x3bc>
  402690:	e6b3      	b.n	4023fa <_svfprintf_r+0xa56>
  402692:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402696:	f8cd b01c 	str.w	fp, [sp, #28]
  40269a:	ae42      	add	r6, sp, #264	; 0x108
  40269c:	3430      	adds	r4, #48	; 0x30
  40269e:	2301      	movs	r3, #1
  4026a0:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4026a4:	930e      	str	r3, [sp, #56]	; 0x38
  4026a6:	f7ff ba8d 	b.w	401bc4 <_svfprintf_r+0x220>
  4026aa:	aa25      	add	r2, sp, #148	; 0x94
  4026ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026ae:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026b0:	f002 fad4 	bl	404c5c <__ssprint_r>
  4026b4:	2800      	cmp	r0, #0
  4026b6:	f47f aa47 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4026ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026bc:	46c8      	mov	r8, r9
  4026be:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4026c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4026c2:	429a      	cmp	r2, r3
  4026c4:	db44      	blt.n	402750 <_svfprintf_r+0xdac>
  4026c6:	9b07      	ldr	r3, [sp, #28]
  4026c8:	07d9      	lsls	r1, r3, #31
  4026ca:	d441      	bmi.n	402750 <_svfprintf_r+0xdac>
  4026cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4026ce:	9812      	ldr	r0, [sp, #72]	; 0x48
  4026d0:	1a9a      	subs	r2, r3, r2
  4026d2:	1a1d      	subs	r5, r3, r0
  4026d4:	4295      	cmp	r5, r2
  4026d6:	bfa8      	it	ge
  4026d8:	4615      	movge	r5, r2
  4026da:	2d00      	cmp	r5, #0
  4026dc:	dd0e      	ble.n	4026fc <_svfprintf_r+0xd58>
  4026de:	9926      	ldr	r1, [sp, #152]	; 0x98
  4026e0:	f8c8 5004 	str.w	r5, [r8, #4]
  4026e4:	3101      	adds	r1, #1
  4026e6:	4406      	add	r6, r0
  4026e8:	442c      	add	r4, r5
  4026ea:	2907      	cmp	r1, #7
  4026ec:	f8c8 6000 	str.w	r6, [r8]
  4026f0:	9427      	str	r4, [sp, #156]	; 0x9c
  4026f2:	9126      	str	r1, [sp, #152]	; 0x98
  4026f4:	f300 823b 	bgt.w	402b6e <_svfprintf_r+0x11ca>
  4026f8:	f108 0808 	add.w	r8, r8, #8
  4026fc:	2d00      	cmp	r5, #0
  4026fe:	bfac      	ite	ge
  402700:	1b56      	subge	r6, r2, r5
  402702:	4616      	movlt	r6, r2
  402704:	2e00      	cmp	r6, #0
  402706:	f77f ab2d 	ble.w	401d64 <_svfprintf_r+0x3c0>
  40270a:	2e10      	cmp	r6, #16
  40270c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40270e:	4db0      	ldr	r5, [pc, #704]	; (4029d0 <_svfprintf_r+0x102c>)
  402710:	ddb5      	ble.n	40267e <_svfprintf_r+0xcda>
  402712:	4622      	mov	r2, r4
  402714:	2710      	movs	r7, #16
  402716:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40271a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40271c:	e004      	b.n	402728 <_svfprintf_r+0xd84>
  40271e:	f108 0808 	add.w	r8, r8, #8
  402722:	3e10      	subs	r6, #16
  402724:	2e10      	cmp	r6, #16
  402726:	dda9      	ble.n	40267c <_svfprintf_r+0xcd8>
  402728:	3301      	adds	r3, #1
  40272a:	3210      	adds	r2, #16
  40272c:	2b07      	cmp	r3, #7
  40272e:	9227      	str	r2, [sp, #156]	; 0x9c
  402730:	9326      	str	r3, [sp, #152]	; 0x98
  402732:	e888 00a0 	stmia.w	r8, {r5, r7}
  402736:	ddf2      	ble.n	40271e <_svfprintf_r+0xd7a>
  402738:	aa25      	add	r2, sp, #148	; 0x94
  40273a:	4621      	mov	r1, r4
  40273c:	4658      	mov	r0, fp
  40273e:	f002 fa8d 	bl	404c5c <__ssprint_r>
  402742:	2800      	cmp	r0, #0
  402744:	f47f aa00 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402748:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40274a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40274c:	46c8      	mov	r8, r9
  40274e:	e7e8      	b.n	402722 <_svfprintf_r+0xd7e>
  402750:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402752:	9819      	ldr	r0, [sp, #100]	; 0x64
  402754:	991a      	ldr	r1, [sp, #104]	; 0x68
  402756:	f8c8 1000 	str.w	r1, [r8]
  40275a:	3301      	adds	r3, #1
  40275c:	4404      	add	r4, r0
  40275e:	2b07      	cmp	r3, #7
  402760:	9427      	str	r4, [sp, #156]	; 0x9c
  402762:	f8c8 0004 	str.w	r0, [r8, #4]
  402766:	9326      	str	r3, [sp, #152]	; 0x98
  402768:	f300 81f5 	bgt.w	402b56 <_svfprintf_r+0x11b2>
  40276c:	f108 0808 	add.w	r8, r8, #8
  402770:	e7ac      	b.n	4026cc <_svfprintf_r+0xd28>
  402772:	9b07      	ldr	r3, [sp, #28]
  402774:	07da      	lsls	r2, r3, #31
  402776:	f53f adfe 	bmi.w	402376 <_svfprintf_r+0x9d2>
  40277a:	3701      	adds	r7, #1
  40277c:	3401      	adds	r4, #1
  40277e:	2301      	movs	r3, #1
  402780:	2f07      	cmp	r7, #7
  402782:	9427      	str	r4, [sp, #156]	; 0x9c
  402784:	9726      	str	r7, [sp, #152]	; 0x98
  402786:	f8c8 6000 	str.w	r6, [r8]
  40278a:	f8c8 3004 	str.w	r3, [r8, #4]
  40278e:	f77f ae25 	ble.w	4023dc <_svfprintf_r+0xa38>
  402792:	e74a      	b.n	40262a <_svfprintf_r+0xc86>
  402794:	aa25      	add	r2, sp, #148	; 0x94
  402796:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402798:	980c      	ldr	r0, [sp, #48]	; 0x30
  40279a:	f002 fa5f 	bl	404c5c <__ssprint_r>
  40279e:	2800      	cmp	r0, #0
  4027a0:	f47f a9d2 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4027a4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027a6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4027a8:	46c8      	mov	r8, r9
  4027aa:	e5f2      	b.n	402392 <_svfprintf_r+0x9ee>
  4027ac:	aa25      	add	r2, sp, #148	; 0x94
  4027ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027b0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027b2:	f002 fa53 	bl	404c5c <__ssprint_r>
  4027b6:	2800      	cmp	r0, #0
  4027b8:	f47f a9c6 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4027bc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027be:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4027c0:	46c8      	mov	r8, r9
  4027c2:	e5f5      	b.n	4023b0 <_svfprintf_r+0xa0c>
  4027c4:	464e      	mov	r6, r9
  4027c6:	f7ff b9fd 	b.w	401bc4 <_svfprintf_r+0x220>
  4027ca:	aa25      	add	r2, sp, #148	; 0x94
  4027cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027ce:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027d0:	f002 fa44 	bl	404c5c <__ssprint_r>
  4027d4:	2800      	cmp	r0, #0
  4027d6:	f47f a9b7 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4027da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027dc:	46c8      	mov	r8, r9
  4027de:	f7ff ba72 	b.w	401cc6 <_svfprintf_r+0x322>
  4027e2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4027e4:	4622      	mov	r2, r4
  4027e6:	4620      	mov	r0, r4
  4027e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4027ea:	4623      	mov	r3, r4
  4027ec:	4621      	mov	r1, r4
  4027ee:	f003 fafb 	bl	405de8 <__aeabi_dcmpun>
  4027f2:	2800      	cmp	r0, #0
  4027f4:	f040 8286 	bne.w	402d04 <_svfprintf_r+0x1360>
  4027f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027fa:	3301      	adds	r3, #1
  4027fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4027fe:	f023 0320 	bic.w	r3, r3, #32
  402802:	930e      	str	r3, [sp, #56]	; 0x38
  402804:	f000 81e2 	beq.w	402bcc <_svfprintf_r+0x1228>
  402808:	2b47      	cmp	r3, #71	; 0x47
  40280a:	f000 811e 	beq.w	402a4a <_svfprintf_r+0x10a6>
  40280e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402812:	9307      	str	r3, [sp, #28]
  402814:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402816:	1e1f      	subs	r7, r3, #0
  402818:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40281a:	9308      	str	r3, [sp, #32]
  40281c:	bfbb      	ittet	lt
  40281e:	463b      	movlt	r3, r7
  402820:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402824:	2300      	movge	r3, #0
  402826:	232d      	movlt	r3, #45	; 0x2d
  402828:	9310      	str	r3, [sp, #64]	; 0x40
  40282a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40282c:	2b66      	cmp	r3, #102	; 0x66
  40282e:	f000 81bb 	beq.w	402ba8 <_svfprintf_r+0x1204>
  402832:	2b46      	cmp	r3, #70	; 0x46
  402834:	f000 80df 	beq.w	4029f6 <_svfprintf_r+0x1052>
  402838:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40283a:	9a08      	ldr	r2, [sp, #32]
  40283c:	2b45      	cmp	r3, #69	; 0x45
  40283e:	bf0c      	ite	eq
  402840:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402842:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402844:	a823      	add	r0, sp, #140	; 0x8c
  402846:	a920      	add	r1, sp, #128	; 0x80
  402848:	bf08      	it	eq
  40284a:	1c5d      	addeq	r5, r3, #1
  40284c:	9004      	str	r0, [sp, #16]
  40284e:	9103      	str	r1, [sp, #12]
  402850:	a81f      	add	r0, sp, #124	; 0x7c
  402852:	2102      	movs	r1, #2
  402854:	463b      	mov	r3, r7
  402856:	9002      	str	r0, [sp, #8]
  402858:	9501      	str	r5, [sp, #4]
  40285a:	9100      	str	r1, [sp, #0]
  40285c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40285e:	f000 fb73 	bl	402f48 <_dtoa_r>
  402862:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402864:	2b67      	cmp	r3, #103	; 0x67
  402866:	4606      	mov	r6, r0
  402868:	f040 81e0 	bne.w	402c2c <_svfprintf_r+0x1288>
  40286c:	f01b 0f01 	tst.w	fp, #1
  402870:	f000 8246 	beq.w	402d00 <_svfprintf_r+0x135c>
  402874:	1974      	adds	r4, r6, r5
  402876:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402878:	9808      	ldr	r0, [sp, #32]
  40287a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40287c:	4639      	mov	r1, r7
  40287e:	f003 fa81 	bl	405d84 <__aeabi_dcmpeq>
  402882:	2800      	cmp	r0, #0
  402884:	f040 8165 	bne.w	402b52 <_svfprintf_r+0x11ae>
  402888:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40288a:	42a3      	cmp	r3, r4
  40288c:	d206      	bcs.n	40289c <_svfprintf_r+0xef8>
  40288e:	2130      	movs	r1, #48	; 0x30
  402890:	1c5a      	adds	r2, r3, #1
  402892:	9223      	str	r2, [sp, #140]	; 0x8c
  402894:	7019      	strb	r1, [r3, #0]
  402896:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402898:	429c      	cmp	r4, r3
  40289a:	d8f9      	bhi.n	402890 <_svfprintf_r+0xeec>
  40289c:	1b9b      	subs	r3, r3, r6
  40289e:	9313      	str	r3, [sp, #76]	; 0x4c
  4028a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4028a2:	2b47      	cmp	r3, #71	; 0x47
  4028a4:	f000 80e9 	beq.w	402a7a <_svfprintf_r+0x10d6>
  4028a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028aa:	2b65      	cmp	r3, #101	; 0x65
  4028ac:	f340 81cd 	ble.w	402c4a <_svfprintf_r+0x12a6>
  4028b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028b2:	2b66      	cmp	r3, #102	; 0x66
  4028b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4028b6:	9312      	str	r3, [sp, #72]	; 0x48
  4028b8:	f000 819e 	beq.w	402bf8 <_svfprintf_r+0x1254>
  4028bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4028be:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4028c0:	4619      	mov	r1, r3
  4028c2:	4291      	cmp	r1, r2
  4028c4:	f300 818a 	bgt.w	402bdc <_svfprintf_r+0x1238>
  4028c8:	f01b 0f01 	tst.w	fp, #1
  4028cc:	f040 8213 	bne.w	402cf6 <_svfprintf_r+0x1352>
  4028d0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4028d4:	9308      	str	r3, [sp, #32]
  4028d6:	2367      	movs	r3, #103	; 0x67
  4028d8:	920e      	str	r2, [sp, #56]	; 0x38
  4028da:	9311      	str	r3, [sp, #68]	; 0x44
  4028dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4028de:	2b00      	cmp	r3, #0
  4028e0:	f040 80c4 	bne.w	402a6c <_svfprintf_r+0x10c8>
  4028e4:	930a      	str	r3, [sp, #40]	; 0x28
  4028e6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4028ea:	f7ff b973 	b.w	401bd4 <_svfprintf_r+0x230>
  4028ee:	4635      	mov	r5, r6
  4028f0:	460c      	mov	r4, r1
  4028f2:	4646      	mov	r6, r8
  4028f4:	4690      	mov	r8, r2
  4028f6:	3301      	adds	r3, #1
  4028f8:	443c      	add	r4, r7
  4028fa:	2b07      	cmp	r3, #7
  4028fc:	9427      	str	r4, [sp, #156]	; 0x9c
  4028fe:	9326      	str	r3, [sp, #152]	; 0x98
  402900:	e888 00a0 	stmia.w	r8, {r5, r7}
  402904:	f73f aed1 	bgt.w	4026aa <_svfprintf_r+0xd06>
  402908:	f108 0808 	add.w	r8, r8, #8
  40290c:	e6d7      	b.n	4026be <_svfprintf_r+0xd1a>
  40290e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402910:	6813      	ldr	r3, [r2, #0]
  402912:	3204      	adds	r2, #4
  402914:	920f      	str	r2, [sp, #60]	; 0x3c
  402916:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402918:	601a      	str	r2, [r3, #0]
  40291a:	f7ff b86a 	b.w	4019f2 <_svfprintf_r+0x4e>
  40291e:	aa25      	add	r2, sp, #148	; 0x94
  402920:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402922:	980c      	ldr	r0, [sp, #48]	; 0x30
  402924:	f002 f99a 	bl	404c5c <__ssprint_r>
  402928:	2800      	cmp	r0, #0
  40292a:	f47f a90d 	bne.w	401b48 <_svfprintf_r+0x1a4>
  40292e:	46c8      	mov	r8, r9
  402930:	e48d      	b.n	40224e <_svfprintf_r+0x8aa>
  402932:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402934:	4a27      	ldr	r2, [pc, #156]	; (4029d4 <_svfprintf_r+0x1030>)
  402936:	f8c8 2000 	str.w	r2, [r8]
  40293a:	3301      	adds	r3, #1
  40293c:	3401      	adds	r4, #1
  40293e:	2201      	movs	r2, #1
  402940:	2b07      	cmp	r3, #7
  402942:	9427      	str	r4, [sp, #156]	; 0x9c
  402944:	9326      	str	r3, [sp, #152]	; 0x98
  402946:	f8c8 2004 	str.w	r2, [r8, #4]
  40294a:	dc72      	bgt.n	402a32 <_svfprintf_r+0x108e>
  40294c:	f108 0808 	add.w	r8, r8, #8
  402950:	b929      	cbnz	r1, 40295e <_svfprintf_r+0xfba>
  402952:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402954:	b91b      	cbnz	r3, 40295e <_svfprintf_r+0xfba>
  402956:	9b07      	ldr	r3, [sp, #28]
  402958:	07d8      	lsls	r0, r3, #31
  40295a:	f57f aa03 	bpl.w	401d64 <_svfprintf_r+0x3c0>
  40295e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402960:	9819      	ldr	r0, [sp, #100]	; 0x64
  402962:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402964:	f8c8 2000 	str.w	r2, [r8]
  402968:	3301      	adds	r3, #1
  40296a:	4602      	mov	r2, r0
  40296c:	4422      	add	r2, r4
  40296e:	2b07      	cmp	r3, #7
  402970:	9227      	str	r2, [sp, #156]	; 0x9c
  402972:	f8c8 0004 	str.w	r0, [r8, #4]
  402976:	9326      	str	r3, [sp, #152]	; 0x98
  402978:	f300 818d 	bgt.w	402c96 <_svfprintf_r+0x12f2>
  40297c:	f108 0808 	add.w	r8, r8, #8
  402980:	2900      	cmp	r1, #0
  402982:	f2c0 8165 	blt.w	402c50 <_svfprintf_r+0x12ac>
  402986:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402988:	f8c8 6000 	str.w	r6, [r8]
  40298c:	3301      	adds	r3, #1
  40298e:	188c      	adds	r4, r1, r2
  402990:	2b07      	cmp	r3, #7
  402992:	9427      	str	r4, [sp, #156]	; 0x9c
  402994:	9326      	str	r3, [sp, #152]	; 0x98
  402996:	f8c8 1004 	str.w	r1, [r8, #4]
  40299a:	f77f a9e1 	ble.w	401d60 <_svfprintf_r+0x3bc>
  40299e:	e52c      	b.n	4023fa <_svfprintf_r+0xa56>
  4029a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029a2:	9909      	ldr	r1, [sp, #36]	; 0x24
  4029a4:	6813      	ldr	r3, [r2, #0]
  4029a6:	17cd      	asrs	r5, r1, #31
  4029a8:	4608      	mov	r0, r1
  4029aa:	3204      	adds	r2, #4
  4029ac:	4629      	mov	r1, r5
  4029ae:	920f      	str	r2, [sp, #60]	; 0x3c
  4029b0:	e9c3 0100 	strd	r0, r1, [r3]
  4029b4:	f7ff b81d 	b.w	4019f2 <_svfprintf_r+0x4e>
  4029b8:	aa25      	add	r2, sp, #148	; 0x94
  4029ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029bc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029be:	f002 f94d 	bl	404c5c <__ssprint_r>
  4029c2:	2800      	cmp	r0, #0
  4029c4:	f47f a8c0 	bne.w	401b48 <_svfprintf_r+0x1a4>
  4029c8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029ca:	46c8      	mov	r8, r9
  4029cc:	e458      	b.n	402280 <_svfprintf_r+0x8dc>
  4029ce:	bf00      	nop
  4029d0:	00406c24 	.word	0x00406c24
  4029d4:	00406c10 	.word	0x00406c10
  4029d8:	2140      	movs	r1, #64	; 0x40
  4029da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029dc:	f001 fa0a 	bl	403df4 <_malloc_r>
  4029e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4029e2:	6010      	str	r0, [r2, #0]
  4029e4:	6110      	str	r0, [r2, #16]
  4029e6:	2800      	cmp	r0, #0
  4029e8:	f000 81f2 	beq.w	402dd0 <_svfprintf_r+0x142c>
  4029ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4029ee:	2340      	movs	r3, #64	; 0x40
  4029f0:	6153      	str	r3, [r2, #20]
  4029f2:	f7fe bfee 	b.w	4019d2 <_svfprintf_r+0x2e>
  4029f6:	a823      	add	r0, sp, #140	; 0x8c
  4029f8:	a920      	add	r1, sp, #128	; 0x80
  4029fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4029fc:	9004      	str	r0, [sp, #16]
  4029fe:	9103      	str	r1, [sp, #12]
  402a00:	a81f      	add	r0, sp, #124	; 0x7c
  402a02:	2103      	movs	r1, #3
  402a04:	9002      	str	r0, [sp, #8]
  402a06:	9a08      	ldr	r2, [sp, #32]
  402a08:	9401      	str	r4, [sp, #4]
  402a0a:	463b      	mov	r3, r7
  402a0c:	9100      	str	r1, [sp, #0]
  402a0e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a10:	f000 fa9a 	bl	402f48 <_dtoa_r>
  402a14:	4625      	mov	r5, r4
  402a16:	4606      	mov	r6, r0
  402a18:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a1a:	2b46      	cmp	r3, #70	; 0x46
  402a1c:	eb06 0405 	add.w	r4, r6, r5
  402a20:	f47f af29 	bne.w	402876 <_svfprintf_r+0xed2>
  402a24:	7833      	ldrb	r3, [r6, #0]
  402a26:	2b30      	cmp	r3, #48	; 0x30
  402a28:	f000 8178 	beq.w	402d1c <_svfprintf_r+0x1378>
  402a2c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402a2e:	442c      	add	r4, r5
  402a30:	e721      	b.n	402876 <_svfprintf_r+0xed2>
  402a32:	aa25      	add	r2, sp, #148	; 0x94
  402a34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a36:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a38:	f002 f910 	bl	404c5c <__ssprint_r>
  402a3c:	2800      	cmp	r0, #0
  402a3e:	f47f a883 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402a42:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402a44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a46:	46c8      	mov	r8, r9
  402a48:	e782      	b.n	402950 <_svfprintf_r+0xfac>
  402a4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a4c:	2b00      	cmp	r3, #0
  402a4e:	bf08      	it	eq
  402a50:	2301      	moveq	r3, #1
  402a52:	930a      	str	r3, [sp, #40]	; 0x28
  402a54:	e6db      	b.n	40280e <_svfprintf_r+0xe6a>
  402a56:	4630      	mov	r0, r6
  402a58:	940a      	str	r4, [sp, #40]	; 0x28
  402a5a:	f002 f891 	bl	404b80 <strlen>
  402a5e:	950f      	str	r5, [sp, #60]	; 0x3c
  402a60:	900e      	str	r0, [sp, #56]	; 0x38
  402a62:	f8cd b01c 	str.w	fp, [sp, #28]
  402a66:	4603      	mov	r3, r0
  402a68:	f7ff b9f9 	b.w	401e5e <_svfprintf_r+0x4ba>
  402a6c:	272d      	movs	r7, #45	; 0x2d
  402a6e:	2300      	movs	r3, #0
  402a70:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402a74:	930a      	str	r3, [sp, #40]	; 0x28
  402a76:	f7ff b8ae 	b.w	401bd6 <_svfprintf_r+0x232>
  402a7a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402a7c:	9312      	str	r3, [sp, #72]	; 0x48
  402a7e:	461a      	mov	r2, r3
  402a80:	3303      	adds	r3, #3
  402a82:	db04      	blt.n	402a8e <_svfprintf_r+0x10ea>
  402a84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a86:	4619      	mov	r1, r3
  402a88:	4291      	cmp	r1, r2
  402a8a:	f6bf af17 	bge.w	4028bc <_svfprintf_r+0xf18>
  402a8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a90:	3b02      	subs	r3, #2
  402a92:	9311      	str	r3, [sp, #68]	; 0x44
  402a94:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402a98:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402a9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a9e:	3b01      	subs	r3, #1
  402aa0:	2b00      	cmp	r3, #0
  402aa2:	931f      	str	r3, [sp, #124]	; 0x7c
  402aa4:	bfbd      	ittte	lt
  402aa6:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402aa8:	f1c3 0301 	rsblt	r3, r3, #1
  402aac:	222d      	movlt	r2, #45	; 0x2d
  402aae:	222b      	movge	r2, #43	; 0x2b
  402ab0:	2b09      	cmp	r3, #9
  402ab2:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402ab6:	f340 8116 	ble.w	402ce6 <_svfprintf_r+0x1342>
  402aba:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402abe:	4620      	mov	r0, r4
  402ac0:	4dab      	ldr	r5, [pc, #684]	; (402d70 <_svfprintf_r+0x13cc>)
  402ac2:	e000      	b.n	402ac6 <_svfprintf_r+0x1122>
  402ac4:	4610      	mov	r0, r2
  402ac6:	fb85 1203 	smull	r1, r2, r5, r3
  402aca:	17d9      	asrs	r1, r3, #31
  402acc:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402ad0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402ad4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402ad8:	3230      	adds	r2, #48	; 0x30
  402ada:	2909      	cmp	r1, #9
  402adc:	f800 2c01 	strb.w	r2, [r0, #-1]
  402ae0:	460b      	mov	r3, r1
  402ae2:	f100 32ff 	add.w	r2, r0, #4294967295
  402ae6:	dced      	bgt.n	402ac4 <_svfprintf_r+0x1120>
  402ae8:	3330      	adds	r3, #48	; 0x30
  402aea:	3802      	subs	r0, #2
  402aec:	b2d9      	uxtb	r1, r3
  402aee:	4284      	cmp	r4, r0
  402af0:	f802 1c01 	strb.w	r1, [r2, #-1]
  402af4:	f240 8165 	bls.w	402dc2 <_svfprintf_r+0x141e>
  402af8:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402afc:	4613      	mov	r3, r2
  402afe:	e001      	b.n	402b04 <_svfprintf_r+0x1160>
  402b00:	f813 1b01 	ldrb.w	r1, [r3], #1
  402b04:	f800 1b01 	strb.w	r1, [r0], #1
  402b08:	42a3      	cmp	r3, r4
  402b0a:	d1f9      	bne.n	402b00 <_svfprintf_r+0x115c>
  402b0c:	3301      	adds	r3, #1
  402b0e:	1a9b      	subs	r3, r3, r2
  402b10:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402b14:	4413      	add	r3, r2
  402b16:	aa21      	add	r2, sp, #132	; 0x84
  402b18:	1a9b      	subs	r3, r3, r2
  402b1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402b1c:	931b      	str	r3, [sp, #108]	; 0x6c
  402b1e:	2a01      	cmp	r2, #1
  402b20:	4413      	add	r3, r2
  402b22:	930e      	str	r3, [sp, #56]	; 0x38
  402b24:	f340 8119 	ble.w	402d5a <_svfprintf_r+0x13b6>
  402b28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402b2a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402b2c:	4413      	add	r3, r2
  402b2e:	930e      	str	r3, [sp, #56]	; 0x38
  402b30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402b34:	9308      	str	r3, [sp, #32]
  402b36:	2300      	movs	r3, #0
  402b38:	9312      	str	r3, [sp, #72]	; 0x48
  402b3a:	e6cf      	b.n	4028dc <_svfprintf_r+0xf38>
  402b3c:	aa25      	add	r2, sp, #148	; 0x94
  402b3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b40:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b42:	f002 f88b 	bl	404c5c <__ssprint_r>
  402b46:	2800      	cmp	r0, #0
  402b48:	f47e affe 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402b4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b4e:	46c8      	mov	r8, r9
  402b50:	e4d7      	b.n	402502 <_svfprintf_r+0xb5e>
  402b52:	4623      	mov	r3, r4
  402b54:	e6a2      	b.n	40289c <_svfprintf_r+0xef8>
  402b56:	aa25      	add	r2, sp, #148	; 0x94
  402b58:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b5a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b5c:	f002 f87e 	bl	404c5c <__ssprint_r>
  402b60:	2800      	cmp	r0, #0
  402b62:	f47e aff1 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402b66:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b6a:	46c8      	mov	r8, r9
  402b6c:	e5ae      	b.n	4026cc <_svfprintf_r+0xd28>
  402b6e:	aa25      	add	r2, sp, #148	; 0x94
  402b70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b72:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b74:	f002 f872 	bl	404c5c <__ssprint_r>
  402b78:	2800      	cmp	r0, #0
  402b7a:	f47e afe5 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402b7e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b80:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b84:	1a9a      	subs	r2, r3, r2
  402b86:	46c8      	mov	r8, r9
  402b88:	e5b8      	b.n	4026fc <_svfprintf_r+0xd58>
  402b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b8c:	9612      	str	r6, [sp, #72]	; 0x48
  402b8e:	2b06      	cmp	r3, #6
  402b90:	bf28      	it	cs
  402b92:	2306      	movcs	r3, #6
  402b94:	960a      	str	r6, [sp, #40]	; 0x28
  402b96:	4637      	mov	r7, r6
  402b98:	9308      	str	r3, [sp, #32]
  402b9a:	950f      	str	r5, [sp, #60]	; 0x3c
  402b9c:	f8cd b01c 	str.w	fp, [sp, #28]
  402ba0:	930e      	str	r3, [sp, #56]	; 0x38
  402ba2:	4e74      	ldr	r6, [pc, #464]	; (402d74 <_svfprintf_r+0x13d0>)
  402ba4:	f7ff b816 	b.w	401bd4 <_svfprintf_r+0x230>
  402ba8:	a823      	add	r0, sp, #140	; 0x8c
  402baa:	a920      	add	r1, sp, #128	; 0x80
  402bac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402bae:	9004      	str	r0, [sp, #16]
  402bb0:	9103      	str	r1, [sp, #12]
  402bb2:	a81f      	add	r0, sp, #124	; 0x7c
  402bb4:	2103      	movs	r1, #3
  402bb6:	9002      	str	r0, [sp, #8]
  402bb8:	9a08      	ldr	r2, [sp, #32]
  402bba:	9501      	str	r5, [sp, #4]
  402bbc:	463b      	mov	r3, r7
  402bbe:	9100      	str	r1, [sp, #0]
  402bc0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bc2:	f000 f9c1 	bl	402f48 <_dtoa_r>
  402bc6:	4606      	mov	r6, r0
  402bc8:	1944      	adds	r4, r0, r5
  402bca:	e72b      	b.n	402a24 <_svfprintf_r+0x1080>
  402bcc:	2306      	movs	r3, #6
  402bce:	930a      	str	r3, [sp, #40]	; 0x28
  402bd0:	e61d      	b.n	40280e <_svfprintf_r+0xe6a>
  402bd2:	272d      	movs	r7, #45	; 0x2d
  402bd4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402bd8:	f7ff bacd 	b.w	402176 <_svfprintf_r+0x7d2>
  402bdc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402bde:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402be0:	4413      	add	r3, r2
  402be2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402be4:	930e      	str	r3, [sp, #56]	; 0x38
  402be6:	2a00      	cmp	r2, #0
  402be8:	f340 80b0 	ble.w	402d4c <_svfprintf_r+0x13a8>
  402bec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402bf0:	9308      	str	r3, [sp, #32]
  402bf2:	2367      	movs	r3, #103	; 0x67
  402bf4:	9311      	str	r3, [sp, #68]	; 0x44
  402bf6:	e671      	b.n	4028dc <_svfprintf_r+0xf38>
  402bf8:	2b00      	cmp	r3, #0
  402bfa:	f340 80c3 	ble.w	402d84 <_svfprintf_r+0x13e0>
  402bfe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402c00:	2a00      	cmp	r2, #0
  402c02:	f040 8099 	bne.w	402d38 <_svfprintf_r+0x1394>
  402c06:	f01b 0f01 	tst.w	fp, #1
  402c0a:	f040 8095 	bne.w	402d38 <_svfprintf_r+0x1394>
  402c0e:	9308      	str	r3, [sp, #32]
  402c10:	930e      	str	r3, [sp, #56]	; 0x38
  402c12:	e663      	b.n	4028dc <_svfprintf_r+0xf38>
  402c14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c16:	9308      	str	r3, [sp, #32]
  402c18:	930e      	str	r3, [sp, #56]	; 0x38
  402c1a:	900a      	str	r0, [sp, #40]	; 0x28
  402c1c:	950f      	str	r5, [sp, #60]	; 0x3c
  402c1e:	f8cd b01c 	str.w	fp, [sp, #28]
  402c22:	9012      	str	r0, [sp, #72]	; 0x48
  402c24:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402c28:	f7fe bfd4 	b.w	401bd4 <_svfprintf_r+0x230>
  402c2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c2e:	2b47      	cmp	r3, #71	; 0x47
  402c30:	f47f ae20 	bne.w	402874 <_svfprintf_r+0xed0>
  402c34:	f01b 0f01 	tst.w	fp, #1
  402c38:	f47f aeee 	bne.w	402a18 <_svfprintf_r+0x1074>
  402c3c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c3e:	1b9b      	subs	r3, r3, r6
  402c40:	9313      	str	r3, [sp, #76]	; 0x4c
  402c42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c44:	2b47      	cmp	r3, #71	; 0x47
  402c46:	f43f af18 	beq.w	402a7a <_svfprintf_r+0x10d6>
  402c4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c4c:	9312      	str	r3, [sp, #72]	; 0x48
  402c4e:	e721      	b.n	402a94 <_svfprintf_r+0x10f0>
  402c50:	424f      	negs	r7, r1
  402c52:	3110      	adds	r1, #16
  402c54:	4d48      	ldr	r5, [pc, #288]	; (402d78 <_svfprintf_r+0x13d4>)
  402c56:	da2f      	bge.n	402cb8 <_svfprintf_r+0x1314>
  402c58:	2410      	movs	r4, #16
  402c5a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c5e:	e004      	b.n	402c6a <_svfprintf_r+0x12c6>
  402c60:	f108 0808 	add.w	r8, r8, #8
  402c64:	3f10      	subs	r7, #16
  402c66:	2f10      	cmp	r7, #16
  402c68:	dd26      	ble.n	402cb8 <_svfprintf_r+0x1314>
  402c6a:	3301      	adds	r3, #1
  402c6c:	3210      	adds	r2, #16
  402c6e:	2b07      	cmp	r3, #7
  402c70:	9227      	str	r2, [sp, #156]	; 0x9c
  402c72:	9326      	str	r3, [sp, #152]	; 0x98
  402c74:	f8c8 5000 	str.w	r5, [r8]
  402c78:	f8c8 4004 	str.w	r4, [r8, #4]
  402c7c:	ddf0      	ble.n	402c60 <_svfprintf_r+0x12bc>
  402c7e:	aa25      	add	r2, sp, #148	; 0x94
  402c80:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c82:	4658      	mov	r0, fp
  402c84:	f001 ffea 	bl	404c5c <__ssprint_r>
  402c88:	2800      	cmp	r0, #0
  402c8a:	f47e af5d 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402c8e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c90:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c92:	46c8      	mov	r8, r9
  402c94:	e7e6      	b.n	402c64 <_svfprintf_r+0x12c0>
  402c96:	aa25      	add	r2, sp, #148	; 0x94
  402c98:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c9a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c9c:	f001 ffde 	bl	404c5c <__ssprint_r>
  402ca0:	2800      	cmp	r0, #0
  402ca2:	f47e af51 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402ca6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ca8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402caa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cac:	46c8      	mov	r8, r9
  402cae:	e667      	b.n	402980 <_svfprintf_r+0xfdc>
  402cb0:	2000      	movs	r0, #0
  402cb2:	900a      	str	r0, [sp, #40]	; 0x28
  402cb4:	f7fe bed0 	b.w	401a58 <_svfprintf_r+0xb4>
  402cb8:	3301      	adds	r3, #1
  402cba:	443a      	add	r2, r7
  402cbc:	2b07      	cmp	r3, #7
  402cbe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cc2:	9227      	str	r2, [sp, #156]	; 0x9c
  402cc4:	9326      	str	r3, [sp, #152]	; 0x98
  402cc6:	f108 0808 	add.w	r8, r8, #8
  402cca:	f77f ae5c 	ble.w	402986 <_svfprintf_r+0xfe2>
  402cce:	aa25      	add	r2, sp, #148	; 0x94
  402cd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cd4:	f001 ffc2 	bl	404c5c <__ssprint_r>
  402cd8:	2800      	cmp	r0, #0
  402cda:	f47e af35 	bne.w	401b48 <_svfprintf_r+0x1a4>
  402cde:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402ce0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ce2:	46c8      	mov	r8, r9
  402ce4:	e64f      	b.n	402986 <_svfprintf_r+0xfe2>
  402ce6:	3330      	adds	r3, #48	; 0x30
  402ce8:	2230      	movs	r2, #48	; 0x30
  402cea:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402cee:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402cf2:	ab22      	add	r3, sp, #136	; 0x88
  402cf4:	e70f      	b.n	402b16 <_svfprintf_r+0x1172>
  402cf6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402cf8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402cfa:	4413      	add	r3, r2
  402cfc:	930e      	str	r3, [sp, #56]	; 0x38
  402cfe:	e775      	b.n	402bec <_svfprintf_r+0x1248>
  402d00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d02:	e5cb      	b.n	40289c <_svfprintf_r+0xef8>
  402d04:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402d06:	4e1d      	ldr	r6, [pc, #116]	; (402d7c <_svfprintf_r+0x13d8>)
  402d08:	2b00      	cmp	r3, #0
  402d0a:	bfb6      	itet	lt
  402d0c:	272d      	movlt	r7, #45	; 0x2d
  402d0e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402d12:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402d16:	4b1a      	ldr	r3, [pc, #104]	; (402d80 <_svfprintf_r+0x13dc>)
  402d18:	f7ff ba2f 	b.w	40217a <_svfprintf_r+0x7d6>
  402d1c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402d1e:	9808      	ldr	r0, [sp, #32]
  402d20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402d22:	4639      	mov	r1, r7
  402d24:	f003 f82e 	bl	405d84 <__aeabi_dcmpeq>
  402d28:	2800      	cmp	r0, #0
  402d2a:	f47f ae7f 	bne.w	402a2c <_svfprintf_r+0x1088>
  402d2e:	f1c5 0501 	rsb	r5, r5, #1
  402d32:	951f      	str	r5, [sp, #124]	; 0x7c
  402d34:	442c      	add	r4, r5
  402d36:	e59e      	b.n	402876 <_svfprintf_r+0xed2>
  402d38:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d3a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d3c:	4413      	add	r3, r2
  402d3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402d40:	441a      	add	r2, r3
  402d42:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402d46:	920e      	str	r2, [sp, #56]	; 0x38
  402d48:	9308      	str	r3, [sp, #32]
  402d4a:	e5c7      	b.n	4028dc <_svfprintf_r+0xf38>
  402d4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d4e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402d50:	f1c3 0301 	rsb	r3, r3, #1
  402d54:	441a      	add	r2, r3
  402d56:	4613      	mov	r3, r2
  402d58:	e7d0      	b.n	402cfc <_svfprintf_r+0x1358>
  402d5a:	f01b 0301 	ands.w	r3, fp, #1
  402d5e:	9312      	str	r3, [sp, #72]	; 0x48
  402d60:	f47f aee2 	bne.w	402b28 <_svfprintf_r+0x1184>
  402d64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d6a:	9308      	str	r3, [sp, #32]
  402d6c:	e5b6      	b.n	4028dc <_svfprintf_r+0xf38>
  402d6e:	bf00      	nop
  402d70:	66666667 	.word	0x66666667
  402d74:	00406c08 	.word	0x00406c08
  402d78:	00406c24 	.word	0x00406c24
  402d7c:	00406bdc 	.word	0x00406bdc
  402d80:	00406bd8 	.word	0x00406bd8
  402d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d86:	b913      	cbnz	r3, 402d8e <_svfprintf_r+0x13ea>
  402d88:	f01b 0f01 	tst.w	fp, #1
  402d8c:	d002      	beq.n	402d94 <_svfprintf_r+0x13f0>
  402d8e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402d90:	3301      	adds	r3, #1
  402d92:	e7d4      	b.n	402d3e <_svfprintf_r+0x139a>
  402d94:	2301      	movs	r3, #1
  402d96:	e73a      	b.n	402c0e <_svfprintf_r+0x126a>
  402d98:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402d9a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402d9e:	6828      	ldr	r0, [r5, #0]
  402da0:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402da4:	900a      	str	r0, [sp, #40]	; 0x28
  402da6:	4628      	mov	r0, r5
  402da8:	3004      	adds	r0, #4
  402daa:	46a2      	mov	sl, r4
  402dac:	900f      	str	r0, [sp, #60]	; 0x3c
  402dae:	f7fe be51 	b.w	401a54 <_svfprintf_r+0xb0>
  402db2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402db6:	f7ff b867 	b.w	401e88 <_svfprintf_r+0x4e4>
  402dba:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dbe:	f7ff ba15 	b.w	4021ec <_svfprintf_r+0x848>
  402dc2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402dc6:	e6a6      	b.n	402b16 <_svfprintf_r+0x1172>
  402dc8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dcc:	f7ff b8eb 	b.w	401fa6 <_svfprintf_r+0x602>
  402dd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402dd2:	230c      	movs	r3, #12
  402dd4:	6013      	str	r3, [r2, #0]
  402dd6:	f04f 33ff 	mov.w	r3, #4294967295
  402dda:	9309      	str	r3, [sp, #36]	; 0x24
  402ddc:	f7fe bebd 	b.w	401b5a <_svfprintf_r+0x1b6>
  402de0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402de4:	f7ff b99a 	b.w	40211c <_svfprintf_r+0x778>
  402de8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dec:	f7ff b976 	b.w	4020dc <_svfprintf_r+0x738>
  402df0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402df4:	f7ff b959 	b.w	4020aa <_svfprintf_r+0x706>
  402df8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dfc:	f7ff b912 	b.w	402024 <_svfprintf_r+0x680>

00402e00 <register_fini>:
  402e00:	4b02      	ldr	r3, [pc, #8]	; (402e0c <register_fini+0xc>)
  402e02:	b113      	cbz	r3, 402e0a <register_fini+0xa>
  402e04:	4802      	ldr	r0, [pc, #8]	; (402e10 <register_fini+0x10>)
  402e06:	f000 b805 	b.w	402e14 <atexit>
  402e0a:	4770      	bx	lr
  402e0c:	00000000 	.word	0x00000000
  402e10:	00403d9d 	.word	0x00403d9d

00402e14 <atexit>:
  402e14:	2300      	movs	r3, #0
  402e16:	4601      	mov	r1, r0
  402e18:	461a      	mov	r2, r3
  402e1a:	4618      	mov	r0, r3
  402e1c:	f001 bf9c 	b.w	404d58 <__register_exitproc>

00402e20 <quorem>:
  402e20:	6902      	ldr	r2, [r0, #16]
  402e22:	690b      	ldr	r3, [r1, #16]
  402e24:	4293      	cmp	r3, r2
  402e26:	f300 808d 	bgt.w	402f44 <quorem+0x124>
  402e2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e2e:	f103 38ff 	add.w	r8, r3, #4294967295
  402e32:	f101 0714 	add.w	r7, r1, #20
  402e36:	f100 0b14 	add.w	fp, r0, #20
  402e3a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402e3e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402e42:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402e46:	b083      	sub	sp, #12
  402e48:	3201      	adds	r2, #1
  402e4a:	fbb3 f9f2 	udiv	r9, r3, r2
  402e4e:	eb0b 0304 	add.w	r3, fp, r4
  402e52:	9400      	str	r4, [sp, #0]
  402e54:	eb07 0a04 	add.w	sl, r7, r4
  402e58:	9301      	str	r3, [sp, #4]
  402e5a:	f1b9 0f00 	cmp.w	r9, #0
  402e5e:	d039      	beq.n	402ed4 <quorem+0xb4>
  402e60:	2500      	movs	r5, #0
  402e62:	462e      	mov	r6, r5
  402e64:	46bc      	mov	ip, r7
  402e66:	46de      	mov	lr, fp
  402e68:	f85c 4b04 	ldr.w	r4, [ip], #4
  402e6c:	f8de 3000 	ldr.w	r3, [lr]
  402e70:	b2a2      	uxth	r2, r4
  402e72:	fb09 5502 	mla	r5, r9, r2, r5
  402e76:	0c22      	lsrs	r2, r4, #16
  402e78:	0c2c      	lsrs	r4, r5, #16
  402e7a:	fb09 4202 	mla	r2, r9, r2, r4
  402e7e:	b2ad      	uxth	r5, r5
  402e80:	1b75      	subs	r5, r6, r5
  402e82:	b296      	uxth	r6, r2
  402e84:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  402e88:	fa15 f383 	uxtah	r3, r5, r3
  402e8c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402e90:	b29b      	uxth	r3, r3
  402e92:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402e96:	45e2      	cmp	sl, ip
  402e98:	ea4f 4512 	mov.w	r5, r2, lsr #16
  402e9c:	f84e 3b04 	str.w	r3, [lr], #4
  402ea0:	ea4f 4626 	mov.w	r6, r6, asr #16
  402ea4:	d2e0      	bcs.n	402e68 <quorem+0x48>
  402ea6:	9b00      	ldr	r3, [sp, #0]
  402ea8:	f85b 3003 	ldr.w	r3, [fp, r3]
  402eac:	b993      	cbnz	r3, 402ed4 <quorem+0xb4>
  402eae:	9c01      	ldr	r4, [sp, #4]
  402eb0:	1f23      	subs	r3, r4, #4
  402eb2:	459b      	cmp	fp, r3
  402eb4:	d20c      	bcs.n	402ed0 <quorem+0xb0>
  402eb6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402eba:	b94b      	cbnz	r3, 402ed0 <quorem+0xb0>
  402ebc:	f1a4 0308 	sub.w	r3, r4, #8
  402ec0:	e002      	b.n	402ec8 <quorem+0xa8>
  402ec2:	681a      	ldr	r2, [r3, #0]
  402ec4:	3b04      	subs	r3, #4
  402ec6:	b91a      	cbnz	r2, 402ed0 <quorem+0xb0>
  402ec8:	459b      	cmp	fp, r3
  402eca:	f108 38ff 	add.w	r8, r8, #4294967295
  402ece:	d3f8      	bcc.n	402ec2 <quorem+0xa2>
  402ed0:	f8c0 8010 	str.w	r8, [r0, #16]
  402ed4:	4604      	mov	r4, r0
  402ed6:	f001 fd37 	bl	404948 <__mcmp>
  402eda:	2800      	cmp	r0, #0
  402edc:	db2e      	blt.n	402f3c <quorem+0x11c>
  402ede:	f109 0901 	add.w	r9, r9, #1
  402ee2:	465d      	mov	r5, fp
  402ee4:	2300      	movs	r3, #0
  402ee6:	f857 1b04 	ldr.w	r1, [r7], #4
  402eea:	6828      	ldr	r0, [r5, #0]
  402eec:	b28a      	uxth	r2, r1
  402eee:	1a9a      	subs	r2, r3, r2
  402ef0:	0c0b      	lsrs	r3, r1, #16
  402ef2:	fa12 f280 	uxtah	r2, r2, r0
  402ef6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  402efa:	eb03 4322 	add.w	r3, r3, r2, asr #16
  402efe:	b292      	uxth	r2, r2
  402f00:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  402f04:	45ba      	cmp	sl, r7
  402f06:	f845 2b04 	str.w	r2, [r5], #4
  402f0a:	ea4f 4323 	mov.w	r3, r3, asr #16
  402f0e:	d2ea      	bcs.n	402ee6 <quorem+0xc6>
  402f10:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  402f14:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  402f18:	b982      	cbnz	r2, 402f3c <quorem+0x11c>
  402f1a:	1f1a      	subs	r2, r3, #4
  402f1c:	4593      	cmp	fp, r2
  402f1e:	d20b      	bcs.n	402f38 <quorem+0x118>
  402f20:	f853 2c04 	ldr.w	r2, [r3, #-4]
  402f24:	b942      	cbnz	r2, 402f38 <quorem+0x118>
  402f26:	3b08      	subs	r3, #8
  402f28:	e002      	b.n	402f30 <quorem+0x110>
  402f2a:	681a      	ldr	r2, [r3, #0]
  402f2c:	3b04      	subs	r3, #4
  402f2e:	b91a      	cbnz	r2, 402f38 <quorem+0x118>
  402f30:	459b      	cmp	fp, r3
  402f32:	f108 38ff 	add.w	r8, r8, #4294967295
  402f36:	d3f8      	bcc.n	402f2a <quorem+0x10a>
  402f38:	f8c4 8010 	str.w	r8, [r4, #16]
  402f3c:	4648      	mov	r0, r9
  402f3e:	b003      	add	sp, #12
  402f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f44:	2000      	movs	r0, #0
  402f46:	4770      	bx	lr

00402f48 <_dtoa_r>:
  402f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f4c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  402f4e:	b09b      	sub	sp, #108	; 0x6c
  402f50:	4604      	mov	r4, r0
  402f52:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  402f54:	4692      	mov	sl, r2
  402f56:	469b      	mov	fp, r3
  402f58:	b141      	cbz	r1, 402f6c <_dtoa_r+0x24>
  402f5a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  402f5c:	604a      	str	r2, [r1, #4]
  402f5e:	2301      	movs	r3, #1
  402f60:	4093      	lsls	r3, r2
  402f62:	608b      	str	r3, [r1, #8]
  402f64:	f001 fb18 	bl	404598 <_Bfree>
  402f68:	2300      	movs	r3, #0
  402f6a:	6423      	str	r3, [r4, #64]	; 0x40
  402f6c:	f1bb 0f00 	cmp.w	fp, #0
  402f70:	465d      	mov	r5, fp
  402f72:	db35      	blt.n	402fe0 <_dtoa_r+0x98>
  402f74:	2300      	movs	r3, #0
  402f76:	6033      	str	r3, [r6, #0]
  402f78:	4b9d      	ldr	r3, [pc, #628]	; (4031f0 <_dtoa_r+0x2a8>)
  402f7a:	43ab      	bics	r3, r5
  402f7c:	d015      	beq.n	402faa <_dtoa_r+0x62>
  402f7e:	4650      	mov	r0, sl
  402f80:	4659      	mov	r1, fp
  402f82:	2200      	movs	r2, #0
  402f84:	2300      	movs	r3, #0
  402f86:	f002 fefd 	bl	405d84 <__aeabi_dcmpeq>
  402f8a:	4680      	mov	r8, r0
  402f8c:	2800      	cmp	r0, #0
  402f8e:	d02d      	beq.n	402fec <_dtoa_r+0xa4>
  402f90:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402f92:	2301      	movs	r3, #1
  402f94:	6013      	str	r3, [r2, #0]
  402f96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402f98:	2b00      	cmp	r3, #0
  402f9a:	f000 80bd 	beq.w	403118 <_dtoa_r+0x1d0>
  402f9e:	4895      	ldr	r0, [pc, #596]	; (4031f4 <_dtoa_r+0x2ac>)
  402fa0:	6018      	str	r0, [r3, #0]
  402fa2:	3801      	subs	r0, #1
  402fa4:	b01b      	add	sp, #108	; 0x6c
  402fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402faa:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402fac:	f242 730f 	movw	r3, #9999	; 0x270f
  402fb0:	6013      	str	r3, [r2, #0]
  402fb2:	f1ba 0f00 	cmp.w	sl, #0
  402fb6:	d10d      	bne.n	402fd4 <_dtoa_r+0x8c>
  402fb8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  402fbc:	b955      	cbnz	r5, 402fd4 <_dtoa_r+0x8c>
  402fbe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402fc0:	488d      	ldr	r0, [pc, #564]	; (4031f8 <_dtoa_r+0x2b0>)
  402fc2:	2b00      	cmp	r3, #0
  402fc4:	d0ee      	beq.n	402fa4 <_dtoa_r+0x5c>
  402fc6:	f100 0308 	add.w	r3, r0, #8
  402fca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  402fcc:	6013      	str	r3, [r2, #0]
  402fce:	b01b      	add	sp, #108	; 0x6c
  402fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402fd6:	4889      	ldr	r0, [pc, #548]	; (4031fc <_dtoa_r+0x2b4>)
  402fd8:	2b00      	cmp	r3, #0
  402fda:	d0e3      	beq.n	402fa4 <_dtoa_r+0x5c>
  402fdc:	1cc3      	adds	r3, r0, #3
  402fde:	e7f4      	b.n	402fca <_dtoa_r+0x82>
  402fe0:	2301      	movs	r3, #1
  402fe2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  402fe6:	6033      	str	r3, [r6, #0]
  402fe8:	46ab      	mov	fp, r5
  402fea:	e7c5      	b.n	402f78 <_dtoa_r+0x30>
  402fec:	aa18      	add	r2, sp, #96	; 0x60
  402fee:	ab19      	add	r3, sp, #100	; 0x64
  402ff0:	9201      	str	r2, [sp, #4]
  402ff2:	9300      	str	r3, [sp, #0]
  402ff4:	4652      	mov	r2, sl
  402ff6:	465b      	mov	r3, fp
  402ff8:	4620      	mov	r0, r4
  402ffa:	f001 fd45 	bl	404a88 <__d2b>
  402ffe:	0d2b      	lsrs	r3, r5, #20
  403000:	4681      	mov	r9, r0
  403002:	d071      	beq.n	4030e8 <_dtoa_r+0x1a0>
  403004:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403008:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40300c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40300e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403012:	4650      	mov	r0, sl
  403014:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403018:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40301c:	2200      	movs	r2, #0
  40301e:	4b78      	ldr	r3, [pc, #480]	; (403200 <_dtoa_r+0x2b8>)
  403020:	f002 fa94 	bl	40554c <__aeabi_dsub>
  403024:	a36c      	add	r3, pc, #432	; (adr r3, 4031d8 <_dtoa_r+0x290>)
  403026:	e9d3 2300 	ldrd	r2, r3, [r3]
  40302a:	f002 fc43 	bl	4058b4 <__aeabi_dmul>
  40302e:	a36c      	add	r3, pc, #432	; (adr r3, 4031e0 <_dtoa_r+0x298>)
  403030:	e9d3 2300 	ldrd	r2, r3, [r3]
  403034:	f002 fa8c 	bl	405550 <__adddf3>
  403038:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40303c:	4630      	mov	r0, r6
  40303e:	f002 fbd3 	bl	4057e8 <__aeabi_i2d>
  403042:	a369      	add	r3, pc, #420	; (adr r3, 4031e8 <_dtoa_r+0x2a0>)
  403044:	e9d3 2300 	ldrd	r2, r3, [r3]
  403048:	f002 fc34 	bl	4058b4 <__aeabi_dmul>
  40304c:	4602      	mov	r2, r0
  40304e:	460b      	mov	r3, r1
  403050:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403054:	f002 fa7c 	bl	405550 <__adddf3>
  403058:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40305c:	f002 feda 	bl	405e14 <__aeabi_d2iz>
  403060:	2200      	movs	r2, #0
  403062:	9002      	str	r0, [sp, #8]
  403064:	2300      	movs	r3, #0
  403066:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40306a:	f002 fe95 	bl	405d98 <__aeabi_dcmplt>
  40306e:	2800      	cmp	r0, #0
  403070:	f040 8173 	bne.w	40335a <_dtoa_r+0x412>
  403074:	9d02      	ldr	r5, [sp, #8]
  403076:	2d16      	cmp	r5, #22
  403078:	f200 815d 	bhi.w	403336 <_dtoa_r+0x3ee>
  40307c:	4b61      	ldr	r3, [pc, #388]	; (403204 <_dtoa_r+0x2bc>)
  40307e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403082:	e9d3 0100 	ldrd	r0, r1, [r3]
  403086:	4652      	mov	r2, sl
  403088:	465b      	mov	r3, fp
  40308a:	f002 fea3 	bl	405dd4 <__aeabi_dcmpgt>
  40308e:	2800      	cmp	r0, #0
  403090:	f000 81c5 	beq.w	40341e <_dtoa_r+0x4d6>
  403094:	1e6b      	subs	r3, r5, #1
  403096:	9302      	str	r3, [sp, #8]
  403098:	2300      	movs	r3, #0
  40309a:	930e      	str	r3, [sp, #56]	; 0x38
  40309c:	1bbf      	subs	r7, r7, r6
  40309e:	1e7b      	subs	r3, r7, #1
  4030a0:	9306      	str	r3, [sp, #24]
  4030a2:	f100 8154 	bmi.w	40334e <_dtoa_r+0x406>
  4030a6:	2300      	movs	r3, #0
  4030a8:	9308      	str	r3, [sp, #32]
  4030aa:	9b02      	ldr	r3, [sp, #8]
  4030ac:	2b00      	cmp	r3, #0
  4030ae:	f2c0 8145 	blt.w	40333c <_dtoa_r+0x3f4>
  4030b2:	9a06      	ldr	r2, [sp, #24]
  4030b4:	930d      	str	r3, [sp, #52]	; 0x34
  4030b6:	4611      	mov	r1, r2
  4030b8:	4419      	add	r1, r3
  4030ba:	2300      	movs	r3, #0
  4030bc:	9106      	str	r1, [sp, #24]
  4030be:	930c      	str	r3, [sp, #48]	; 0x30
  4030c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030c2:	2b09      	cmp	r3, #9
  4030c4:	d82a      	bhi.n	40311c <_dtoa_r+0x1d4>
  4030c6:	2b05      	cmp	r3, #5
  4030c8:	f340 865b 	ble.w	403d82 <_dtoa_r+0xe3a>
  4030cc:	3b04      	subs	r3, #4
  4030ce:	9324      	str	r3, [sp, #144]	; 0x90
  4030d0:	2500      	movs	r5, #0
  4030d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030d4:	3b02      	subs	r3, #2
  4030d6:	2b03      	cmp	r3, #3
  4030d8:	f200 8642 	bhi.w	403d60 <_dtoa_r+0xe18>
  4030dc:	e8df f013 	tbh	[pc, r3, lsl #1]
  4030e0:	02c903d4 	.word	0x02c903d4
  4030e4:	046103df 	.word	0x046103df
  4030e8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4030ea:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4030ec:	443e      	add	r6, r7
  4030ee:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4030f2:	2b20      	cmp	r3, #32
  4030f4:	f340 818e 	ble.w	403414 <_dtoa_r+0x4cc>
  4030f8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4030fc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403100:	409d      	lsls	r5, r3
  403102:	fa2a f000 	lsr.w	r0, sl, r0
  403106:	4328      	orrs	r0, r5
  403108:	f002 fb5e 	bl	4057c8 <__aeabi_ui2d>
  40310c:	2301      	movs	r3, #1
  40310e:	3e01      	subs	r6, #1
  403110:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403114:	9314      	str	r3, [sp, #80]	; 0x50
  403116:	e781      	b.n	40301c <_dtoa_r+0xd4>
  403118:	483b      	ldr	r0, [pc, #236]	; (403208 <_dtoa_r+0x2c0>)
  40311a:	e743      	b.n	402fa4 <_dtoa_r+0x5c>
  40311c:	2100      	movs	r1, #0
  40311e:	6461      	str	r1, [r4, #68]	; 0x44
  403120:	4620      	mov	r0, r4
  403122:	9125      	str	r1, [sp, #148]	; 0x94
  403124:	f001 fa12 	bl	40454c <_Balloc>
  403128:	f04f 33ff 	mov.w	r3, #4294967295
  40312c:	930a      	str	r3, [sp, #40]	; 0x28
  40312e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403130:	930f      	str	r3, [sp, #60]	; 0x3c
  403132:	2301      	movs	r3, #1
  403134:	9004      	str	r0, [sp, #16]
  403136:	6420      	str	r0, [r4, #64]	; 0x40
  403138:	9224      	str	r2, [sp, #144]	; 0x90
  40313a:	930b      	str	r3, [sp, #44]	; 0x2c
  40313c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40313e:	2b00      	cmp	r3, #0
  403140:	f2c0 80d9 	blt.w	4032f6 <_dtoa_r+0x3ae>
  403144:	9a02      	ldr	r2, [sp, #8]
  403146:	2a0e      	cmp	r2, #14
  403148:	f300 80d5 	bgt.w	4032f6 <_dtoa_r+0x3ae>
  40314c:	4b2d      	ldr	r3, [pc, #180]	; (403204 <_dtoa_r+0x2bc>)
  40314e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403152:	e9d3 2300 	ldrd	r2, r3, [r3]
  403156:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40315a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40315c:	2b00      	cmp	r3, #0
  40315e:	f2c0 83ba 	blt.w	4038d6 <_dtoa_r+0x98e>
  403162:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403166:	4650      	mov	r0, sl
  403168:	462a      	mov	r2, r5
  40316a:	4633      	mov	r3, r6
  40316c:	4659      	mov	r1, fp
  40316e:	f002 fccb 	bl	405b08 <__aeabi_ddiv>
  403172:	f002 fe4f 	bl	405e14 <__aeabi_d2iz>
  403176:	4680      	mov	r8, r0
  403178:	f002 fb36 	bl	4057e8 <__aeabi_i2d>
  40317c:	462a      	mov	r2, r5
  40317e:	4633      	mov	r3, r6
  403180:	f002 fb98 	bl	4058b4 <__aeabi_dmul>
  403184:	460b      	mov	r3, r1
  403186:	4602      	mov	r2, r0
  403188:	4659      	mov	r1, fp
  40318a:	4650      	mov	r0, sl
  40318c:	f002 f9de 	bl	40554c <__aeabi_dsub>
  403190:	9d04      	ldr	r5, [sp, #16]
  403192:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403196:	702b      	strb	r3, [r5, #0]
  403198:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40319a:	2b01      	cmp	r3, #1
  40319c:	4606      	mov	r6, r0
  40319e:	460f      	mov	r7, r1
  4031a0:	f105 0501 	add.w	r5, r5, #1
  4031a4:	d068      	beq.n	403278 <_dtoa_r+0x330>
  4031a6:	2200      	movs	r2, #0
  4031a8:	4b18      	ldr	r3, [pc, #96]	; (40320c <_dtoa_r+0x2c4>)
  4031aa:	f002 fb83 	bl	4058b4 <__aeabi_dmul>
  4031ae:	2200      	movs	r2, #0
  4031b0:	2300      	movs	r3, #0
  4031b2:	4606      	mov	r6, r0
  4031b4:	460f      	mov	r7, r1
  4031b6:	f002 fde5 	bl	405d84 <__aeabi_dcmpeq>
  4031ba:	2800      	cmp	r0, #0
  4031bc:	f040 8088 	bne.w	4032d0 <_dtoa_r+0x388>
  4031c0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4031c4:	f04f 0a00 	mov.w	sl, #0
  4031c8:	f8df b040 	ldr.w	fp, [pc, #64]	; 40320c <_dtoa_r+0x2c4>
  4031cc:	940c      	str	r4, [sp, #48]	; 0x30
  4031ce:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4031d2:	e028      	b.n	403226 <_dtoa_r+0x2de>
  4031d4:	f3af 8000 	nop.w
  4031d8:	636f4361 	.word	0x636f4361
  4031dc:	3fd287a7 	.word	0x3fd287a7
  4031e0:	8b60c8b3 	.word	0x8b60c8b3
  4031e4:	3fc68a28 	.word	0x3fc68a28
  4031e8:	509f79fb 	.word	0x509f79fb
  4031ec:	3fd34413 	.word	0x3fd34413
  4031f0:	7ff00000 	.word	0x7ff00000
  4031f4:	00406c11 	.word	0x00406c11
  4031f8:	00406c34 	.word	0x00406c34
  4031fc:	00406c40 	.word	0x00406c40
  403200:	3ff80000 	.word	0x3ff80000
  403204:	00406c70 	.word	0x00406c70
  403208:	00406c10 	.word	0x00406c10
  40320c:	40240000 	.word	0x40240000
  403210:	f002 fb50 	bl	4058b4 <__aeabi_dmul>
  403214:	2200      	movs	r2, #0
  403216:	2300      	movs	r3, #0
  403218:	4606      	mov	r6, r0
  40321a:	460f      	mov	r7, r1
  40321c:	f002 fdb2 	bl	405d84 <__aeabi_dcmpeq>
  403220:	2800      	cmp	r0, #0
  403222:	f040 83c1 	bne.w	4039a8 <_dtoa_r+0xa60>
  403226:	4642      	mov	r2, r8
  403228:	464b      	mov	r3, r9
  40322a:	4630      	mov	r0, r6
  40322c:	4639      	mov	r1, r7
  40322e:	f002 fc6b 	bl	405b08 <__aeabi_ddiv>
  403232:	f002 fdef 	bl	405e14 <__aeabi_d2iz>
  403236:	4604      	mov	r4, r0
  403238:	f002 fad6 	bl	4057e8 <__aeabi_i2d>
  40323c:	4642      	mov	r2, r8
  40323e:	464b      	mov	r3, r9
  403240:	f002 fb38 	bl	4058b4 <__aeabi_dmul>
  403244:	4602      	mov	r2, r0
  403246:	460b      	mov	r3, r1
  403248:	4630      	mov	r0, r6
  40324a:	4639      	mov	r1, r7
  40324c:	f002 f97e 	bl	40554c <__aeabi_dsub>
  403250:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403254:	9e04      	ldr	r6, [sp, #16]
  403256:	f805 eb01 	strb.w	lr, [r5], #1
  40325a:	eba5 0e06 	sub.w	lr, r5, r6
  40325e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403260:	45b6      	cmp	lr, r6
  403262:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403266:	4652      	mov	r2, sl
  403268:	465b      	mov	r3, fp
  40326a:	d1d1      	bne.n	403210 <_dtoa_r+0x2c8>
  40326c:	46a0      	mov	r8, r4
  40326e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403272:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403274:	4606      	mov	r6, r0
  403276:	460f      	mov	r7, r1
  403278:	4632      	mov	r2, r6
  40327a:	463b      	mov	r3, r7
  40327c:	4630      	mov	r0, r6
  40327e:	4639      	mov	r1, r7
  403280:	f002 f966 	bl	405550 <__adddf3>
  403284:	4606      	mov	r6, r0
  403286:	460f      	mov	r7, r1
  403288:	4602      	mov	r2, r0
  40328a:	460b      	mov	r3, r1
  40328c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403290:	f002 fd82 	bl	405d98 <__aeabi_dcmplt>
  403294:	b948      	cbnz	r0, 4032aa <_dtoa_r+0x362>
  403296:	4632      	mov	r2, r6
  403298:	463b      	mov	r3, r7
  40329a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40329e:	f002 fd71 	bl	405d84 <__aeabi_dcmpeq>
  4032a2:	b1a8      	cbz	r0, 4032d0 <_dtoa_r+0x388>
  4032a4:	f018 0f01 	tst.w	r8, #1
  4032a8:	d012      	beq.n	4032d0 <_dtoa_r+0x388>
  4032aa:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4032ae:	9a04      	ldr	r2, [sp, #16]
  4032b0:	1e6b      	subs	r3, r5, #1
  4032b2:	e004      	b.n	4032be <_dtoa_r+0x376>
  4032b4:	429a      	cmp	r2, r3
  4032b6:	f000 8401 	beq.w	403abc <_dtoa_r+0xb74>
  4032ba:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4032be:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4032c2:	f103 0501 	add.w	r5, r3, #1
  4032c6:	d0f5      	beq.n	4032b4 <_dtoa_r+0x36c>
  4032c8:	f108 0801 	add.w	r8, r8, #1
  4032cc:	f883 8000 	strb.w	r8, [r3]
  4032d0:	4649      	mov	r1, r9
  4032d2:	4620      	mov	r0, r4
  4032d4:	f001 f960 	bl	404598 <_Bfree>
  4032d8:	2200      	movs	r2, #0
  4032da:	9b02      	ldr	r3, [sp, #8]
  4032dc:	702a      	strb	r2, [r5, #0]
  4032de:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4032e0:	3301      	adds	r3, #1
  4032e2:	6013      	str	r3, [r2, #0]
  4032e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4032e6:	2b00      	cmp	r3, #0
  4032e8:	f000 839e 	beq.w	403a28 <_dtoa_r+0xae0>
  4032ec:	9804      	ldr	r0, [sp, #16]
  4032ee:	601d      	str	r5, [r3, #0]
  4032f0:	b01b      	add	sp, #108	; 0x6c
  4032f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032f8:	2a00      	cmp	r2, #0
  4032fa:	d03e      	beq.n	40337a <_dtoa_r+0x432>
  4032fc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4032fe:	2a01      	cmp	r2, #1
  403300:	f340 8311 	ble.w	403926 <_dtoa_r+0x9de>
  403304:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403306:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403308:	1e5f      	subs	r7, r3, #1
  40330a:	42ba      	cmp	r2, r7
  40330c:	f2c0 838f 	blt.w	403a2e <_dtoa_r+0xae6>
  403310:	1bd7      	subs	r7, r2, r7
  403312:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403314:	2b00      	cmp	r3, #0
  403316:	f2c0 848b 	blt.w	403c30 <_dtoa_r+0xce8>
  40331a:	9d08      	ldr	r5, [sp, #32]
  40331c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40331e:	9a08      	ldr	r2, [sp, #32]
  403320:	441a      	add	r2, r3
  403322:	9208      	str	r2, [sp, #32]
  403324:	9a06      	ldr	r2, [sp, #24]
  403326:	2101      	movs	r1, #1
  403328:	441a      	add	r2, r3
  40332a:	4620      	mov	r0, r4
  40332c:	9206      	str	r2, [sp, #24]
  40332e:	f001 f9cd 	bl	4046cc <__i2b>
  403332:	4606      	mov	r6, r0
  403334:	e024      	b.n	403380 <_dtoa_r+0x438>
  403336:	2301      	movs	r3, #1
  403338:	930e      	str	r3, [sp, #56]	; 0x38
  40333a:	e6af      	b.n	40309c <_dtoa_r+0x154>
  40333c:	9a08      	ldr	r2, [sp, #32]
  40333e:	9b02      	ldr	r3, [sp, #8]
  403340:	1ad2      	subs	r2, r2, r3
  403342:	425b      	negs	r3, r3
  403344:	930c      	str	r3, [sp, #48]	; 0x30
  403346:	2300      	movs	r3, #0
  403348:	9208      	str	r2, [sp, #32]
  40334a:	930d      	str	r3, [sp, #52]	; 0x34
  40334c:	e6b8      	b.n	4030c0 <_dtoa_r+0x178>
  40334e:	f1c7 0301 	rsb	r3, r7, #1
  403352:	9308      	str	r3, [sp, #32]
  403354:	2300      	movs	r3, #0
  403356:	9306      	str	r3, [sp, #24]
  403358:	e6a7      	b.n	4030aa <_dtoa_r+0x162>
  40335a:	9d02      	ldr	r5, [sp, #8]
  40335c:	4628      	mov	r0, r5
  40335e:	f002 fa43 	bl	4057e8 <__aeabi_i2d>
  403362:	4602      	mov	r2, r0
  403364:	460b      	mov	r3, r1
  403366:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40336a:	f002 fd0b 	bl	405d84 <__aeabi_dcmpeq>
  40336e:	2800      	cmp	r0, #0
  403370:	f47f ae80 	bne.w	403074 <_dtoa_r+0x12c>
  403374:	1e6b      	subs	r3, r5, #1
  403376:	9302      	str	r3, [sp, #8]
  403378:	e67c      	b.n	403074 <_dtoa_r+0x12c>
  40337a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40337c:	9d08      	ldr	r5, [sp, #32]
  40337e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403380:	2d00      	cmp	r5, #0
  403382:	dd0c      	ble.n	40339e <_dtoa_r+0x456>
  403384:	9906      	ldr	r1, [sp, #24]
  403386:	2900      	cmp	r1, #0
  403388:	460b      	mov	r3, r1
  40338a:	dd08      	ble.n	40339e <_dtoa_r+0x456>
  40338c:	42a9      	cmp	r1, r5
  40338e:	9a08      	ldr	r2, [sp, #32]
  403390:	bfa8      	it	ge
  403392:	462b      	movge	r3, r5
  403394:	1ad2      	subs	r2, r2, r3
  403396:	1aed      	subs	r5, r5, r3
  403398:	1acb      	subs	r3, r1, r3
  40339a:	9208      	str	r2, [sp, #32]
  40339c:	9306      	str	r3, [sp, #24]
  40339e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4033a0:	b1d3      	cbz	r3, 4033d8 <_dtoa_r+0x490>
  4033a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4033a4:	2b00      	cmp	r3, #0
  4033a6:	f000 82b7 	beq.w	403918 <_dtoa_r+0x9d0>
  4033aa:	2f00      	cmp	r7, #0
  4033ac:	dd10      	ble.n	4033d0 <_dtoa_r+0x488>
  4033ae:	4631      	mov	r1, r6
  4033b0:	463a      	mov	r2, r7
  4033b2:	4620      	mov	r0, r4
  4033b4:	f001 fa26 	bl	404804 <__pow5mult>
  4033b8:	464a      	mov	r2, r9
  4033ba:	4601      	mov	r1, r0
  4033bc:	4606      	mov	r6, r0
  4033be:	4620      	mov	r0, r4
  4033c0:	f001 f98e 	bl	4046e0 <__multiply>
  4033c4:	4649      	mov	r1, r9
  4033c6:	4680      	mov	r8, r0
  4033c8:	4620      	mov	r0, r4
  4033ca:	f001 f8e5 	bl	404598 <_Bfree>
  4033ce:	46c1      	mov	r9, r8
  4033d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4033d2:	1bda      	subs	r2, r3, r7
  4033d4:	f040 82a1 	bne.w	40391a <_dtoa_r+0x9d2>
  4033d8:	2101      	movs	r1, #1
  4033da:	4620      	mov	r0, r4
  4033dc:	f001 f976 	bl	4046cc <__i2b>
  4033e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4033e2:	2b00      	cmp	r3, #0
  4033e4:	4680      	mov	r8, r0
  4033e6:	dd1c      	ble.n	403422 <_dtoa_r+0x4da>
  4033e8:	4601      	mov	r1, r0
  4033ea:	461a      	mov	r2, r3
  4033ec:	4620      	mov	r0, r4
  4033ee:	f001 fa09 	bl	404804 <__pow5mult>
  4033f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033f4:	2b01      	cmp	r3, #1
  4033f6:	4680      	mov	r8, r0
  4033f8:	f340 8254 	ble.w	4038a4 <_dtoa_r+0x95c>
  4033fc:	2300      	movs	r3, #0
  4033fe:	930c      	str	r3, [sp, #48]	; 0x30
  403400:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403404:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403408:	6918      	ldr	r0, [r3, #16]
  40340a:	f001 f90f 	bl	40462c <__hi0bits>
  40340e:	f1c0 0020 	rsb	r0, r0, #32
  403412:	e010      	b.n	403436 <_dtoa_r+0x4ee>
  403414:	f1c3 0520 	rsb	r5, r3, #32
  403418:	fa0a f005 	lsl.w	r0, sl, r5
  40341c:	e674      	b.n	403108 <_dtoa_r+0x1c0>
  40341e:	900e      	str	r0, [sp, #56]	; 0x38
  403420:	e63c      	b.n	40309c <_dtoa_r+0x154>
  403422:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403424:	2b01      	cmp	r3, #1
  403426:	f340 8287 	ble.w	403938 <_dtoa_r+0x9f0>
  40342a:	2300      	movs	r3, #0
  40342c:	930c      	str	r3, [sp, #48]	; 0x30
  40342e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403430:	2001      	movs	r0, #1
  403432:	2b00      	cmp	r3, #0
  403434:	d1e4      	bne.n	403400 <_dtoa_r+0x4b8>
  403436:	9a06      	ldr	r2, [sp, #24]
  403438:	4410      	add	r0, r2
  40343a:	f010 001f 	ands.w	r0, r0, #31
  40343e:	f000 80a1 	beq.w	403584 <_dtoa_r+0x63c>
  403442:	f1c0 0320 	rsb	r3, r0, #32
  403446:	2b04      	cmp	r3, #4
  403448:	f340 849e 	ble.w	403d88 <_dtoa_r+0xe40>
  40344c:	9b08      	ldr	r3, [sp, #32]
  40344e:	f1c0 001c 	rsb	r0, r0, #28
  403452:	4403      	add	r3, r0
  403454:	9308      	str	r3, [sp, #32]
  403456:	4613      	mov	r3, r2
  403458:	4403      	add	r3, r0
  40345a:	4405      	add	r5, r0
  40345c:	9306      	str	r3, [sp, #24]
  40345e:	9b08      	ldr	r3, [sp, #32]
  403460:	2b00      	cmp	r3, #0
  403462:	dd05      	ble.n	403470 <_dtoa_r+0x528>
  403464:	4649      	mov	r1, r9
  403466:	461a      	mov	r2, r3
  403468:	4620      	mov	r0, r4
  40346a:	f001 fa1b 	bl	4048a4 <__lshift>
  40346e:	4681      	mov	r9, r0
  403470:	9b06      	ldr	r3, [sp, #24]
  403472:	2b00      	cmp	r3, #0
  403474:	dd05      	ble.n	403482 <_dtoa_r+0x53a>
  403476:	4641      	mov	r1, r8
  403478:	461a      	mov	r2, r3
  40347a:	4620      	mov	r0, r4
  40347c:	f001 fa12 	bl	4048a4 <__lshift>
  403480:	4680      	mov	r8, r0
  403482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403484:	2b00      	cmp	r3, #0
  403486:	f040 8086 	bne.w	403596 <_dtoa_r+0x64e>
  40348a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40348c:	2b00      	cmp	r3, #0
  40348e:	f340 8266 	ble.w	40395e <_dtoa_r+0xa16>
  403492:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403494:	2b00      	cmp	r3, #0
  403496:	f000 8098 	beq.w	4035ca <_dtoa_r+0x682>
  40349a:	2d00      	cmp	r5, #0
  40349c:	dd05      	ble.n	4034aa <_dtoa_r+0x562>
  40349e:	4631      	mov	r1, r6
  4034a0:	462a      	mov	r2, r5
  4034a2:	4620      	mov	r0, r4
  4034a4:	f001 f9fe 	bl	4048a4 <__lshift>
  4034a8:	4606      	mov	r6, r0
  4034aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4034ac:	2b00      	cmp	r3, #0
  4034ae:	f040 8337 	bne.w	403b20 <_dtoa_r+0xbd8>
  4034b2:	9606      	str	r6, [sp, #24]
  4034b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034b6:	9a04      	ldr	r2, [sp, #16]
  4034b8:	f8dd b018 	ldr.w	fp, [sp, #24]
  4034bc:	3b01      	subs	r3, #1
  4034be:	18d3      	adds	r3, r2, r3
  4034c0:	930b      	str	r3, [sp, #44]	; 0x2c
  4034c2:	f00a 0301 	and.w	r3, sl, #1
  4034c6:	930c      	str	r3, [sp, #48]	; 0x30
  4034c8:	4617      	mov	r7, r2
  4034ca:	46c2      	mov	sl, r8
  4034cc:	4651      	mov	r1, sl
  4034ce:	4648      	mov	r0, r9
  4034d0:	f7ff fca6 	bl	402e20 <quorem>
  4034d4:	4631      	mov	r1, r6
  4034d6:	4605      	mov	r5, r0
  4034d8:	4648      	mov	r0, r9
  4034da:	f001 fa35 	bl	404948 <__mcmp>
  4034de:	465a      	mov	r2, fp
  4034e0:	900a      	str	r0, [sp, #40]	; 0x28
  4034e2:	4651      	mov	r1, sl
  4034e4:	4620      	mov	r0, r4
  4034e6:	f001 fa4b 	bl	404980 <__mdiff>
  4034ea:	68c2      	ldr	r2, [r0, #12]
  4034ec:	4680      	mov	r8, r0
  4034ee:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4034f2:	2a00      	cmp	r2, #0
  4034f4:	f040 822b 	bne.w	40394e <_dtoa_r+0xa06>
  4034f8:	4601      	mov	r1, r0
  4034fa:	4648      	mov	r0, r9
  4034fc:	9308      	str	r3, [sp, #32]
  4034fe:	f001 fa23 	bl	404948 <__mcmp>
  403502:	4641      	mov	r1, r8
  403504:	9006      	str	r0, [sp, #24]
  403506:	4620      	mov	r0, r4
  403508:	f001 f846 	bl	404598 <_Bfree>
  40350c:	9a06      	ldr	r2, [sp, #24]
  40350e:	9b08      	ldr	r3, [sp, #32]
  403510:	b932      	cbnz	r2, 403520 <_dtoa_r+0x5d8>
  403512:	9924      	ldr	r1, [sp, #144]	; 0x90
  403514:	b921      	cbnz	r1, 403520 <_dtoa_r+0x5d8>
  403516:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403518:	2a00      	cmp	r2, #0
  40351a:	f000 83ef 	beq.w	403cfc <_dtoa_r+0xdb4>
  40351e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403520:	990a      	ldr	r1, [sp, #40]	; 0x28
  403522:	2900      	cmp	r1, #0
  403524:	f2c0 829f 	blt.w	403a66 <_dtoa_r+0xb1e>
  403528:	d105      	bne.n	403536 <_dtoa_r+0x5ee>
  40352a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40352c:	b919      	cbnz	r1, 403536 <_dtoa_r+0x5ee>
  40352e:	990c      	ldr	r1, [sp, #48]	; 0x30
  403530:	2900      	cmp	r1, #0
  403532:	f000 8298 	beq.w	403a66 <_dtoa_r+0xb1e>
  403536:	2a00      	cmp	r2, #0
  403538:	f300 8306 	bgt.w	403b48 <_dtoa_r+0xc00>
  40353c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40353e:	703b      	strb	r3, [r7, #0]
  403540:	f107 0801 	add.w	r8, r7, #1
  403544:	4297      	cmp	r7, r2
  403546:	4645      	mov	r5, r8
  403548:	f000 830c 	beq.w	403b64 <_dtoa_r+0xc1c>
  40354c:	4649      	mov	r1, r9
  40354e:	2300      	movs	r3, #0
  403550:	220a      	movs	r2, #10
  403552:	4620      	mov	r0, r4
  403554:	f001 f82a 	bl	4045ac <__multadd>
  403558:	455e      	cmp	r6, fp
  40355a:	4681      	mov	r9, r0
  40355c:	4631      	mov	r1, r6
  40355e:	f04f 0300 	mov.w	r3, #0
  403562:	f04f 020a 	mov.w	r2, #10
  403566:	4620      	mov	r0, r4
  403568:	f000 81eb 	beq.w	403942 <_dtoa_r+0x9fa>
  40356c:	f001 f81e 	bl	4045ac <__multadd>
  403570:	4659      	mov	r1, fp
  403572:	4606      	mov	r6, r0
  403574:	2300      	movs	r3, #0
  403576:	220a      	movs	r2, #10
  403578:	4620      	mov	r0, r4
  40357a:	f001 f817 	bl	4045ac <__multadd>
  40357e:	4647      	mov	r7, r8
  403580:	4683      	mov	fp, r0
  403582:	e7a3      	b.n	4034cc <_dtoa_r+0x584>
  403584:	201c      	movs	r0, #28
  403586:	9b08      	ldr	r3, [sp, #32]
  403588:	4403      	add	r3, r0
  40358a:	9308      	str	r3, [sp, #32]
  40358c:	9b06      	ldr	r3, [sp, #24]
  40358e:	4403      	add	r3, r0
  403590:	4405      	add	r5, r0
  403592:	9306      	str	r3, [sp, #24]
  403594:	e763      	b.n	40345e <_dtoa_r+0x516>
  403596:	4641      	mov	r1, r8
  403598:	4648      	mov	r0, r9
  40359a:	f001 f9d5 	bl	404948 <__mcmp>
  40359e:	2800      	cmp	r0, #0
  4035a0:	f6bf af73 	bge.w	40348a <_dtoa_r+0x542>
  4035a4:	9f02      	ldr	r7, [sp, #8]
  4035a6:	4649      	mov	r1, r9
  4035a8:	2300      	movs	r3, #0
  4035aa:	220a      	movs	r2, #10
  4035ac:	4620      	mov	r0, r4
  4035ae:	3f01      	subs	r7, #1
  4035b0:	9702      	str	r7, [sp, #8]
  4035b2:	f000 fffb 	bl	4045ac <__multadd>
  4035b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4035b8:	4681      	mov	r9, r0
  4035ba:	2b00      	cmp	r3, #0
  4035bc:	f040 83b6 	bne.w	403d2c <_dtoa_r+0xde4>
  4035c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4035c2:	2b00      	cmp	r3, #0
  4035c4:	f340 83bf 	ble.w	403d46 <_dtoa_r+0xdfe>
  4035c8:	930a      	str	r3, [sp, #40]	; 0x28
  4035ca:	f8dd b010 	ldr.w	fp, [sp, #16]
  4035ce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4035d0:	465d      	mov	r5, fp
  4035d2:	e002      	b.n	4035da <_dtoa_r+0x692>
  4035d4:	f000 ffea 	bl	4045ac <__multadd>
  4035d8:	4681      	mov	r9, r0
  4035da:	4641      	mov	r1, r8
  4035dc:	4648      	mov	r0, r9
  4035de:	f7ff fc1f 	bl	402e20 <quorem>
  4035e2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4035e6:	f805 ab01 	strb.w	sl, [r5], #1
  4035ea:	eba5 030b 	sub.w	r3, r5, fp
  4035ee:	42bb      	cmp	r3, r7
  4035f0:	f04f 020a 	mov.w	r2, #10
  4035f4:	f04f 0300 	mov.w	r3, #0
  4035f8:	4649      	mov	r1, r9
  4035fa:	4620      	mov	r0, r4
  4035fc:	dbea      	blt.n	4035d4 <_dtoa_r+0x68c>
  4035fe:	9b04      	ldr	r3, [sp, #16]
  403600:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403602:	2a01      	cmp	r2, #1
  403604:	bfac      	ite	ge
  403606:	189b      	addge	r3, r3, r2
  403608:	3301      	addlt	r3, #1
  40360a:	461d      	mov	r5, r3
  40360c:	f04f 0b00 	mov.w	fp, #0
  403610:	4649      	mov	r1, r9
  403612:	2201      	movs	r2, #1
  403614:	4620      	mov	r0, r4
  403616:	f001 f945 	bl	4048a4 <__lshift>
  40361a:	4641      	mov	r1, r8
  40361c:	4681      	mov	r9, r0
  40361e:	f001 f993 	bl	404948 <__mcmp>
  403622:	2800      	cmp	r0, #0
  403624:	f340 823d 	ble.w	403aa2 <_dtoa_r+0xb5a>
  403628:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40362c:	9904      	ldr	r1, [sp, #16]
  40362e:	1e6b      	subs	r3, r5, #1
  403630:	e004      	b.n	40363c <_dtoa_r+0x6f4>
  403632:	428b      	cmp	r3, r1
  403634:	f000 81ae 	beq.w	403994 <_dtoa_r+0xa4c>
  403638:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40363c:	2a39      	cmp	r2, #57	; 0x39
  40363e:	f103 0501 	add.w	r5, r3, #1
  403642:	d0f6      	beq.n	403632 <_dtoa_r+0x6ea>
  403644:	3201      	adds	r2, #1
  403646:	701a      	strb	r2, [r3, #0]
  403648:	4641      	mov	r1, r8
  40364a:	4620      	mov	r0, r4
  40364c:	f000 ffa4 	bl	404598 <_Bfree>
  403650:	2e00      	cmp	r6, #0
  403652:	f43f ae3d 	beq.w	4032d0 <_dtoa_r+0x388>
  403656:	f1bb 0f00 	cmp.w	fp, #0
  40365a:	d005      	beq.n	403668 <_dtoa_r+0x720>
  40365c:	45b3      	cmp	fp, r6
  40365e:	d003      	beq.n	403668 <_dtoa_r+0x720>
  403660:	4659      	mov	r1, fp
  403662:	4620      	mov	r0, r4
  403664:	f000 ff98 	bl	404598 <_Bfree>
  403668:	4631      	mov	r1, r6
  40366a:	4620      	mov	r0, r4
  40366c:	f000 ff94 	bl	404598 <_Bfree>
  403670:	e62e      	b.n	4032d0 <_dtoa_r+0x388>
  403672:	2300      	movs	r3, #0
  403674:	930b      	str	r3, [sp, #44]	; 0x2c
  403676:	9b02      	ldr	r3, [sp, #8]
  403678:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40367a:	4413      	add	r3, r2
  40367c:	930f      	str	r3, [sp, #60]	; 0x3c
  40367e:	3301      	adds	r3, #1
  403680:	2b01      	cmp	r3, #1
  403682:	461f      	mov	r7, r3
  403684:	461e      	mov	r6, r3
  403686:	930a      	str	r3, [sp, #40]	; 0x28
  403688:	bfb8      	it	lt
  40368a:	2701      	movlt	r7, #1
  40368c:	2100      	movs	r1, #0
  40368e:	2f17      	cmp	r7, #23
  403690:	6461      	str	r1, [r4, #68]	; 0x44
  403692:	d90a      	bls.n	4036aa <_dtoa_r+0x762>
  403694:	2201      	movs	r2, #1
  403696:	2304      	movs	r3, #4
  403698:	005b      	lsls	r3, r3, #1
  40369a:	f103 0014 	add.w	r0, r3, #20
  40369e:	4287      	cmp	r7, r0
  4036a0:	4611      	mov	r1, r2
  4036a2:	f102 0201 	add.w	r2, r2, #1
  4036a6:	d2f7      	bcs.n	403698 <_dtoa_r+0x750>
  4036a8:	6461      	str	r1, [r4, #68]	; 0x44
  4036aa:	4620      	mov	r0, r4
  4036ac:	f000 ff4e 	bl	40454c <_Balloc>
  4036b0:	2e0e      	cmp	r6, #14
  4036b2:	9004      	str	r0, [sp, #16]
  4036b4:	6420      	str	r0, [r4, #64]	; 0x40
  4036b6:	f63f ad41 	bhi.w	40313c <_dtoa_r+0x1f4>
  4036ba:	2d00      	cmp	r5, #0
  4036bc:	f43f ad3e 	beq.w	40313c <_dtoa_r+0x1f4>
  4036c0:	9902      	ldr	r1, [sp, #8]
  4036c2:	2900      	cmp	r1, #0
  4036c4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4036c8:	f340 8202 	ble.w	403ad0 <_dtoa_r+0xb88>
  4036cc:	4bb8      	ldr	r3, [pc, #736]	; (4039b0 <_dtoa_r+0xa68>)
  4036ce:	f001 020f 	and.w	r2, r1, #15
  4036d2:	110d      	asrs	r5, r1, #4
  4036d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4036d8:	06e9      	lsls	r1, r5, #27
  4036da:	e9d3 6700 	ldrd	r6, r7, [r3]
  4036de:	f140 81ae 	bpl.w	403a3e <_dtoa_r+0xaf6>
  4036e2:	4bb4      	ldr	r3, [pc, #720]	; (4039b4 <_dtoa_r+0xa6c>)
  4036e4:	4650      	mov	r0, sl
  4036e6:	4659      	mov	r1, fp
  4036e8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4036ec:	f002 fa0c 	bl	405b08 <__aeabi_ddiv>
  4036f0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4036f4:	f005 050f 	and.w	r5, r5, #15
  4036f8:	f04f 0a03 	mov.w	sl, #3
  4036fc:	b18d      	cbz	r5, 403722 <_dtoa_r+0x7da>
  4036fe:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4039b4 <_dtoa_r+0xa6c>
  403702:	07ea      	lsls	r2, r5, #31
  403704:	d509      	bpl.n	40371a <_dtoa_r+0x7d2>
  403706:	4630      	mov	r0, r6
  403708:	4639      	mov	r1, r7
  40370a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40370e:	f002 f8d1 	bl	4058b4 <__aeabi_dmul>
  403712:	f10a 0a01 	add.w	sl, sl, #1
  403716:	4606      	mov	r6, r0
  403718:	460f      	mov	r7, r1
  40371a:	106d      	asrs	r5, r5, #1
  40371c:	f108 0808 	add.w	r8, r8, #8
  403720:	d1ef      	bne.n	403702 <_dtoa_r+0x7ba>
  403722:	463b      	mov	r3, r7
  403724:	4632      	mov	r2, r6
  403726:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40372a:	f002 f9ed 	bl	405b08 <__aeabi_ddiv>
  40372e:	4607      	mov	r7, r0
  403730:	4688      	mov	r8, r1
  403732:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403734:	b143      	cbz	r3, 403748 <_dtoa_r+0x800>
  403736:	2200      	movs	r2, #0
  403738:	4b9f      	ldr	r3, [pc, #636]	; (4039b8 <_dtoa_r+0xa70>)
  40373a:	4638      	mov	r0, r7
  40373c:	4641      	mov	r1, r8
  40373e:	f002 fb2b 	bl	405d98 <__aeabi_dcmplt>
  403742:	2800      	cmp	r0, #0
  403744:	f040 8286 	bne.w	403c54 <_dtoa_r+0xd0c>
  403748:	4650      	mov	r0, sl
  40374a:	f002 f84d 	bl	4057e8 <__aeabi_i2d>
  40374e:	463a      	mov	r2, r7
  403750:	4643      	mov	r3, r8
  403752:	f002 f8af 	bl	4058b4 <__aeabi_dmul>
  403756:	4b99      	ldr	r3, [pc, #612]	; (4039bc <_dtoa_r+0xa74>)
  403758:	2200      	movs	r2, #0
  40375a:	f001 fef9 	bl	405550 <__adddf3>
  40375e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403760:	4605      	mov	r5, r0
  403762:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403766:	2b00      	cmp	r3, #0
  403768:	f000 813e 	beq.w	4039e8 <_dtoa_r+0xaa0>
  40376c:	9b02      	ldr	r3, [sp, #8]
  40376e:	9315      	str	r3, [sp, #84]	; 0x54
  403770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403772:	9312      	str	r3, [sp, #72]	; 0x48
  403774:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403776:	2b00      	cmp	r3, #0
  403778:	f000 81fa 	beq.w	403b70 <_dtoa_r+0xc28>
  40377c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40377e:	4b8c      	ldr	r3, [pc, #560]	; (4039b0 <_dtoa_r+0xa68>)
  403780:	498f      	ldr	r1, [pc, #572]	; (4039c0 <_dtoa_r+0xa78>)
  403782:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403786:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40378a:	2000      	movs	r0, #0
  40378c:	f002 f9bc 	bl	405b08 <__aeabi_ddiv>
  403790:	462a      	mov	r2, r5
  403792:	4633      	mov	r3, r6
  403794:	f001 feda 	bl	40554c <__aeabi_dsub>
  403798:	4682      	mov	sl, r0
  40379a:	468b      	mov	fp, r1
  40379c:	4638      	mov	r0, r7
  40379e:	4641      	mov	r1, r8
  4037a0:	f002 fb38 	bl	405e14 <__aeabi_d2iz>
  4037a4:	4605      	mov	r5, r0
  4037a6:	f002 f81f 	bl	4057e8 <__aeabi_i2d>
  4037aa:	4602      	mov	r2, r0
  4037ac:	460b      	mov	r3, r1
  4037ae:	4638      	mov	r0, r7
  4037b0:	4641      	mov	r1, r8
  4037b2:	f001 fecb 	bl	40554c <__aeabi_dsub>
  4037b6:	3530      	adds	r5, #48	; 0x30
  4037b8:	fa5f f885 	uxtb.w	r8, r5
  4037bc:	9d04      	ldr	r5, [sp, #16]
  4037be:	4606      	mov	r6, r0
  4037c0:	460f      	mov	r7, r1
  4037c2:	f885 8000 	strb.w	r8, [r5]
  4037c6:	4602      	mov	r2, r0
  4037c8:	460b      	mov	r3, r1
  4037ca:	4650      	mov	r0, sl
  4037cc:	4659      	mov	r1, fp
  4037ce:	3501      	adds	r5, #1
  4037d0:	f002 fb00 	bl	405dd4 <__aeabi_dcmpgt>
  4037d4:	2800      	cmp	r0, #0
  4037d6:	d154      	bne.n	403882 <_dtoa_r+0x93a>
  4037d8:	4632      	mov	r2, r6
  4037da:	463b      	mov	r3, r7
  4037dc:	2000      	movs	r0, #0
  4037de:	4976      	ldr	r1, [pc, #472]	; (4039b8 <_dtoa_r+0xa70>)
  4037e0:	f001 feb4 	bl	40554c <__aeabi_dsub>
  4037e4:	4602      	mov	r2, r0
  4037e6:	460b      	mov	r3, r1
  4037e8:	4650      	mov	r0, sl
  4037ea:	4659      	mov	r1, fp
  4037ec:	f002 faf2 	bl	405dd4 <__aeabi_dcmpgt>
  4037f0:	2800      	cmp	r0, #0
  4037f2:	f040 8270 	bne.w	403cd6 <_dtoa_r+0xd8e>
  4037f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4037f8:	2a01      	cmp	r2, #1
  4037fa:	f000 8111 	beq.w	403a20 <_dtoa_r+0xad8>
  4037fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403800:	9a04      	ldr	r2, [sp, #16]
  403802:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403806:	4413      	add	r3, r2
  403808:	4699      	mov	r9, r3
  40380a:	e00d      	b.n	403828 <_dtoa_r+0x8e0>
  40380c:	2000      	movs	r0, #0
  40380e:	496a      	ldr	r1, [pc, #424]	; (4039b8 <_dtoa_r+0xa70>)
  403810:	f001 fe9c 	bl	40554c <__aeabi_dsub>
  403814:	4652      	mov	r2, sl
  403816:	465b      	mov	r3, fp
  403818:	f002 fabe 	bl	405d98 <__aeabi_dcmplt>
  40381c:	2800      	cmp	r0, #0
  40381e:	f040 8258 	bne.w	403cd2 <_dtoa_r+0xd8a>
  403822:	454d      	cmp	r5, r9
  403824:	f000 80fa 	beq.w	403a1c <_dtoa_r+0xad4>
  403828:	4650      	mov	r0, sl
  40382a:	4659      	mov	r1, fp
  40382c:	2200      	movs	r2, #0
  40382e:	4b65      	ldr	r3, [pc, #404]	; (4039c4 <_dtoa_r+0xa7c>)
  403830:	f002 f840 	bl	4058b4 <__aeabi_dmul>
  403834:	2200      	movs	r2, #0
  403836:	4b63      	ldr	r3, [pc, #396]	; (4039c4 <_dtoa_r+0xa7c>)
  403838:	4682      	mov	sl, r0
  40383a:	468b      	mov	fp, r1
  40383c:	4630      	mov	r0, r6
  40383e:	4639      	mov	r1, r7
  403840:	f002 f838 	bl	4058b4 <__aeabi_dmul>
  403844:	460f      	mov	r7, r1
  403846:	4606      	mov	r6, r0
  403848:	f002 fae4 	bl	405e14 <__aeabi_d2iz>
  40384c:	4680      	mov	r8, r0
  40384e:	f001 ffcb 	bl	4057e8 <__aeabi_i2d>
  403852:	4602      	mov	r2, r0
  403854:	460b      	mov	r3, r1
  403856:	4630      	mov	r0, r6
  403858:	4639      	mov	r1, r7
  40385a:	f001 fe77 	bl	40554c <__aeabi_dsub>
  40385e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403862:	fa5f f888 	uxtb.w	r8, r8
  403866:	4652      	mov	r2, sl
  403868:	465b      	mov	r3, fp
  40386a:	f805 8b01 	strb.w	r8, [r5], #1
  40386e:	4606      	mov	r6, r0
  403870:	460f      	mov	r7, r1
  403872:	f002 fa91 	bl	405d98 <__aeabi_dcmplt>
  403876:	4632      	mov	r2, r6
  403878:	463b      	mov	r3, r7
  40387a:	2800      	cmp	r0, #0
  40387c:	d0c6      	beq.n	40380c <_dtoa_r+0x8c4>
  40387e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403882:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403884:	9302      	str	r3, [sp, #8]
  403886:	e523      	b.n	4032d0 <_dtoa_r+0x388>
  403888:	2300      	movs	r3, #0
  40388a:	930b      	str	r3, [sp, #44]	; 0x2c
  40388c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40388e:	2b00      	cmp	r3, #0
  403890:	f340 80dc 	ble.w	403a4c <_dtoa_r+0xb04>
  403894:	461f      	mov	r7, r3
  403896:	461e      	mov	r6, r3
  403898:	930f      	str	r3, [sp, #60]	; 0x3c
  40389a:	930a      	str	r3, [sp, #40]	; 0x28
  40389c:	e6f6      	b.n	40368c <_dtoa_r+0x744>
  40389e:	2301      	movs	r3, #1
  4038a0:	930b      	str	r3, [sp, #44]	; 0x2c
  4038a2:	e7f3      	b.n	40388c <_dtoa_r+0x944>
  4038a4:	f1ba 0f00 	cmp.w	sl, #0
  4038a8:	f47f ada8 	bne.w	4033fc <_dtoa_r+0x4b4>
  4038ac:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4038b0:	2b00      	cmp	r3, #0
  4038b2:	f47f adba 	bne.w	40342a <_dtoa_r+0x4e2>
  4038b6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4038ba:	0d3f      	lsrs	r7, r7, #20
  4038bc:	053f      	lsls	r7, r7, #20
  4038be:	2f00      	cmp	r7, #0
  4038c0:	f000 820d 	beq.w	403cde <_dtoa_r+0xd96>
  4038c4:	9b08      	ldr	r3, [sp, #32]
  4038c6:	3301      	adds	r3, #1
  4038c8:	9308      	str	r3, [sp, #32]
  4038ca:	9b06      	ldr	r3, [sp, #24]
  4038cc:	3301      	adds	r3, #1
  4038ce:	9306      	str	r3, [sp, #24]
  4038d0:	2301      	movs	r3, #1
  4038d2:	930c      	str	r3, [sp, #48]	; 0x30
  4038d4:	e5ab      	b.n	40342e <_dtoa_r+0x4e6>
  4038d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038d8:	2b00      	cmp	r3, #0
  4038da:	f73f ac42 	bgt.w	403162 <_dtoa_r+0x21a>
  4038de:	f040 8221 	bne.w	403d24 <_dtoa_r+0xddc>
  4038e2:	2200      	movs	r2, #0
  4038e4:	4b38      	ldr	r3, [pc, #224]	; (4039c8 <_dtoa_r+0xa80>)
  4038e6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038ea:	f001 ffe3 	bl	4058b4 <__aeabi_dmul>
  4038ee:	4652      	mov	r2, sl
  4038f0:	465b      	mov	r3, fp
  4038f2:	f002 fa65 	bl	405dc0 <__aeabi_dcmpge>
  4038f6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4038fa:	4646      	mov	r6, r8
  4038fc:	2800      	cmp	r0, #0
  4038fe:	d041      	beq.n	403984 <_dtoa_r+0xa3c>
  403900:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403902:	9d04      	ldr	r5, [sp, #16]
  403904:	43db      	mvns	r3, r3
  403906:	9302      	str	r3, [sp, #8]
  403908:	4641      	mov	r1, r8
  40390a:	4620      	mov	r0, r4
  40390c:	f000 fe44 	bl	404598 <_Bfree>
  403910:	2e00      	cmp	r6, #0
  403912:	f43f acdd 	beq.w	4032d0 <_dtoa_r+0x388>
  403916:	e6a7      	b.n	403668 <_dtoa_r+0x720>
  403918:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40391a:	4649      	mov	r1, r9
  40391c:	4620      	mov	r0, r4
  40391e:	f000 ff71 	bl	404804 <__pow5mult>
  403922:	4681      	mov	r9, r0
  403924:	e558      	b.n	4033d8 <_dtoa_r+0x490>
  403926:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403928:	2a00      	cmp	r2, #0
  40392a:	f000 8187 	beq.w	403c3c <_dtoa_r+0xcf4>
  40392e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403932:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403934:	9d08      	ldr	r5, [sp, #32]
  403936:	e4f2      	b.n	40331e <_dtoa_r+0x3d6>
  403938:	f1ba 0f00 	cmp.w	sl, #0
  40393c:	f47f ad75 	bne.w	40342a <_dtoa_r+0x4e2>
  403940:	e7b4      	b.n	4038ac <_dtoa_r+0x964>
  403942:	f000 fe33 	bl	4045ac <__multadd>
  403946:	4647      	mov	r7, r8
  403948:	4606      	mov	r6, r0
  40394a:	4683      	mov	fp, r0
  40394c:	e5be      	b.n	4034cc <_dtoa_r+0x584>
  40394e:	4601      	mov	r1, r0
  403950:	4620      	mov	r0, r4
  403952:	9306      	str	r3, [sp, #24]
  403954:	f000 fe20 	bl	404598 <_Bfree>
  403958:	2201      	movs	r2, #1
  40395a:	9b06      	ldr	r3, [sp, #24]
  40395c:	e5e0      	b.n	403520 <_dtoa_r+0x5d8>
  40395e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403960:	2b02      	cmp	r3, #2
  403962:	f77f ad96 	ble.w	403492 <_dtoa_r+0x54a>
  403966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403968:	2b00      	cmp	r3, #0
  40396a:	d1c9      	bne.n	403900 <_dtoa_r+0x9b8>
  40396c:	4641      	mov	r1, r8
  40396e:	2205      	movs	r2, #5
  403970:	4620      	mov	r0, r4
  403972:	f000 fe1b 	bl	4045ac <__multadd>
  403976:	4601      	mov	r1, r0
  403978:	4680      	mov	r8, r0
  40397a:	4648      	mov	r0, r9
  40397c:	f000 ffe4 	bl	404948 <__mcmp>
  403980:	2800      	cmp	r0, #0
  403982:	ddbd      	ble.n	403900 <_dtoa_r+0x9b8>
  403984:	9a02      	ldr	r2, [sp, #8]
  403986:	9904      	ldr	r1, [sp, #16]
  403988:	2331      	movs	r3, #49	; 0x31
  40398a:	3201      	adds	r2, #1
  40398c:	9202      	str	r2, [sp, #8]
  40398e:	700b      	strb	r3, [r1, #0]
  403990:	1c4d      	adds	r5, r1, #1
  403992:	e7b9      	b.n	403908 <_dtoa_r+0x9c0>
  403994:	9a02      	ldr	r2, [sp, #8]
  403996:	3201      	adds	r2, #1
  403998:	9202      	str	r2, [sp, #8]
  40399a:	9a04      	ldr	r2, [sp, #16]
  40399c:	2331      	movs	r3, #49	; 0x31
  40399e:	7013      	strb	r3, [r2, #0]
  4039a0:	e652      	b.n	403648 <_dtoa_r+0x700>
  4039a2:	2301      	movs	r3, #1
  4039a4:	930b      	str	r3, [sp, #44]	; 0x2c
  4039a6:	e666      	b.n	403676 <_dtoa_r+0x72e>
  4039a8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4039ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4039ae:	e48f      	b.n	4032d0 <_dtoa_r+0x388>
  4039b0:	00406c70 	.word	0x00406c70
  4039b4:	00406c48 	.word	0x00406c48
  4039b8:	3ff00000 	.word	0x3ff00000
  4039bc:	401c0000 	.word	0x401c0000
  4039c0:	3fe00000 	.word	0x3fe00000
  4039c4:	40240000 	.word	0x40240000
  4039c8:	40140000 	.word	0x40140000
  4039cc:	4650      	mov	r0, sl
  4039ce:	f001 ff0b 	bl	4057e8 <__aeabi_i2d>
  4039d2:	463a      	mov	r2, r7
  4039d4:	4643      	mov	r3, r8
  4039d6:	f001 ff6d 	bl	4058b4 <__aeabi_dmul>
  4039da:	2200      	movs	r2, #0
  4039dc:	4bc1      	ldr	r3, [pc, #772]	; (403ce4 <_dtoa_r+0xd9c>)
  4039de:	f001 fdb7 	bl	405550 <__adddf3>
  4039e2:	4605      	mov	r5, r0
  4039e4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4039e8:	4641      	mov	r1, r8
  4039ea:	2200      	movs	r2, #0
  4039ec:	4bbe      	ldr	r3, [pc, #760]	; (403ce8 <_dtoa_r+0xda0>)
  4039ee:	4638      	mov	r0, r7
  4039f0:	f001 fdac 	bl	40554c <__aeabi_dsub>
  4039f4:	462a      	mov	r2, r5
  4039f6:	4633      	mov	r3, r6
  4039f8:	4682      	mov	sl, r0
  4039fa:	468b      	mov	fp, r1
  4039fc:	f002 f9ea 	bl	405dd4 <__aeabi_dcmpgt>
  403a00:	4680      	mov	r8, r0
  403a02:	2800      	cmp	r0, #0
  403a04:	f040 8110 	bne.w	403c28 <_dtoa_r+0xce0>
  403a08:	462a      	mov	r2, r5
  403a0a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403a0e:	4650      	mov	r0, sl
  403a10:	4659      	mov	r1, fp
  403a12:	f002 f9c1 	bl	405d98 <__aeabi_dcmplt>
  403a16:	b118      	cbz	r0, 403a20 <_dtoa_r+0xad8>
  403a18:	4646      	mov	r6, r8
  403a1a:	e771      	b.n	403900 <_dtoa_r+0x9b8>
  403a1c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403a20:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403a24:	f7ff bb8a 	b.w	40313c <_dtoa_r+0x1f4>
  403a28:	9804      	ldr	r0, [sp, #16]
  403a2a:	f7ff babb 	b.w	402fa4 <_dtoa_r+0x5c>
  403a2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403a32:	970c      	str	r7, [sp, #48]	; 0x30
  403a34:	1afb      	subs	r3, r7, r3
  403a36:	441a      	add	r2, r3
  403a38:	920d      	str	r2, [sp, #52]	; 0x34
  403a3a:	2700      	movs	r7, #0
  403a3c:	e469      	b.n	403312 <_dtoa_r+0x3ca>
  403a3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403a42:	f04f 0a02 	mov.w	sl, #2
  403a46:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403a4a:	e657      	b.n	4036fc <_dtoa_r+0x7b4>
  403a4c:	2100      	movs	r1, #0
  403a4e:	2301      	movs	r3, #1
  403a50:	6461      	str	r1, [r4, #68]	; 0x44
  403a52:	4620      	mov	r0, r4
  403a54:	9325      	str	r3, [sp, #148]	; 0x94
  403a56:	f000 fd79 	bl	40454c <_Balloc>
  403a5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a5c:	9004      	str	r0, [sp, #16]
  403a5e:	6420      	str	r0, [r4, #64]	; 0x40
  403a60:	930a      	str	r3, [sp, #40]	; 0x28
  403a62:	930f      	str	r3, [sp, #60]	; 0x3c
  403a64:	e629      	b.n	4036ba <_dtoa_r+0x772>
  403a66:	2a00      	cmp	r2, #0
  403a68:	46d0      	mov	r8, sl
  403a6a:	f8cd b018 	str.w	fp, [sp, #24]
  403a6e:	469a      	mov	sl, r3
  403a70:	dd11      	ble.n	403a96 <_dtoa_r+0xb4e>
  403a72:	4649      	mov	r1, r9
  403a74:	2201      	movs	r2, #1
  403a76:	4620      	mov	r0, r4
  403a78:	f000 ff14 	bl	4048a4 <__lshift>
  403a7c:	4641      	mov	r1, r8
  403a7e:	4681      	mov	r9, r0
  403a80:	f000 ff62 	bl	404948 <__mcmp>
  403a84:	2800      	cmp	r0, #0
  403a86:	f340 8146 	ble.w	403d16 <_dtoa_r+0xdce>
  403a8a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403a8e:	f000 8106 	beq.w	403c9e <_dtoa_r+0xd56>
  403a92:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403a96:	46b3      	mov	fp, r6
  403a98:	f887 a000 	strb.w	sl, [r7]
  403a9c:	1c7d      	adds	r5, r7, #1
  403a9e:	9e06      	ldr	r6, [sp, #24]
  403aa0:	e5d2      	b.n	403648 <_dtoa_r+0x700>
  403aa2:	d104      	bne.n	403aae <_dtoa_r+0xb66>
  403aa4:	f01a 0f01 	tst.w	sl, #1
  403aa8:	d001      	beq.n	403aae <_dtoa_r+0xb66>
  403aaa:	e5bd      	b.n	403628 <_dtoa_r+0x6e0>
  403aac:	4615      	mov	r5, r2
  403aae:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403ab2:	2b30      	cmp	r3, #48	; 0x30
  403ab4:	f105 32ff 	add.w	r2, r5, #4294967295
  403ab8:	d0f8      	beq.n	403aac <_dtoa_r+0xb64>
  403aba:	e5c5      	b.n	403648 <_dtoa_r+0x700>
  403abc:	9904      	ldr	r1, [sp, #16]
  403abe:	2230      	movs	r2, #48	; 0x30
  403ac0:	700a      	strb	r2, [r1, #0]
  403ac2:	9a02      	ldr	r2, [sp, #8]
  403ac4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403ac8:	3201      	adds	r2, #1
  403aca:	9202      	str	r2, [sp, #8]
  403acc:	f7ff bbfc 	b.w	4032c8 <_dtoa_r+0x380>
  403ad0:	f000 80bb 	beq.w	403c4a <_dtoa_r+0xd02>
  403ad4:	9b02      	ldr	r3, [sp, #8]
  403ad6:	425d      	negs	r5, r3
  403ad8:	4b84      	ldr	r3, [pc, #528]	; (403cec <_dtoa_r+0xda4>)
  403ada:	f005 020f 	and.w	r2, r5, #15
  403ade:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403ae2:	e9d3 2300 	ldrd	r2, r3, [r3]
  403ae6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403aea:	f001 fee3 	bl	4058b4 <__aeabi_dmul>
  403aee:	112d      	asrs	r5, r5, #4
  403af0:	4607      	mov	r7, r0
  403af2:	4688      	mov	r8, r1
  403af4:	f000 812c 	beq.w	403d50 <_dtoa_r+0xe08>
  403af8:	4e7d      	ldr	r6, [pc, #500]	; (403cf0 <_dtoa_r+0xda8>)
  403afa:	f04f 0a02 	mov.w	sl, #2
  403afe:	07eb      	lsls	r3, r5, #31
  403b00:	d509      	bpl.n	403b16 <_dtoa_r+0xbce>
  403b02:	4638      	mov	r0, r7
  403b04:	4641      	mov	r1, r8
  403b06:	e9d6 2300 	ldrd	r2, r3, [r6]
  403b0a:	f001 fed3 	bl	4058b4 <__aeabi_dmul>
  403b0e:	f10a 0a01 	add.w	sl, sl, #1
  403b12:	4607      	mov	r7, r0
  403b14:	4688      	mov	r8, r1
  403b16:	106d      	asrs	r5, r5, #1
  403b18:	f106 0608 	add.w	r6, r6, #8
  403b1c:	d1ef      	bne.n	403afe <_dtoa_r+0xbb6>
  403b1e:	e608      	b.n	403732 <_dtoa_r+0x7ea>
  403b20:	6871      	ldr	r1, [r6, #4]
  403b22:	4620      	mov	r0, r4
  403b24:	f000 fd12 	bl	40454c <_Balloc>
  403b28:	6933      	ldr	r3, [r6, #16]
  403b2a:	3302      	adds	r3, #2
  403b2c:	009a      	lsls	r2, r3, #2
  403b2e:	4605      	mov	r5, r0
  403b30:	f106 010c 	add.w	r1, r6, #12
  403b34:	300c      	adds	r0, #12
  403b36:	f000 fc63 	bl	404400 <memcpy>
  403b3a:	4629      	mov	r1, r5
  403b3c:	2201      	movs	r2, #1
  403b3e:	4620      	mov	r0, r4
  403b40:	f000 feb0 	bl	4048a4 <__lshift>
  403b44:	9006      	str	r0, [sp, #24]
  403b46:	e4b5      	b.n	4034b4 <_dtoa_r+0x56c>
  403b48:	2b39      	cmp	r3, #57	; 0x39
  403b4a:	f8cd b018 	str.w	fp, [sp, #24]
  403b4e:	46d0      	mov	r8, sl
  403b50:	f000 80a5 	beq.w	403c9e <_dtoa_r+0xd56>
  403b54:	f103 0a01 	add.w	sl, r3, #1
  403b58:	46b3      	mov	fp, r6
  403b5a:	f887 a000 	strb.w	sl, [r7]
  403b5e:	1c7d      	adds	r5, r7, #1
  403b60:	9e06      	ldr	r6, [sp, #24]
  403b62:	e571      	b.n	403648 <_dtoa_r+0x700>
  403b64:	465a      	mov	r2, fp
  403b66:	46d0      	mov	r8, sl
  403b68:	46b3      	mov	fp, r6
  403b6a:	469a      	mov	sl, r3
  403b6c:	4616      	mov	r6, r2
  403b6e:	e54f      	b.n	403610 <_dtoa_r+0x6c8>
  403b70:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b72:	495e      	ldr	r1, [pc, #376]	; (403cec <_dtoa_r+0xda4>)
  403b74:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403b78:	462a      	mov	r2, r5
  403b7a:	4633      	mov	r3, r6
  403b7c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403b80:	f001 fe98 	bl	4058b4 <__aeabi_dmul>
  403b84:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403b88:	4638      	mov	r0, r7
  403b8a:	4641      	mov	r1, r8
  403b8c:	f002 f942 	bl	405e14 <__aeabi_d2iz>
  403b90:	4605      	mov	r5, r0
  403b92:	f001 fe29 	bl	4057e8 <__aeabi_i2d>
  403b96:	460b      	mov	r3, r1
  403b98:	4602      	mov	r2, r0
  403b9a:	4641      	mov	r1, r8
  403b9c:	4638      	mov	r0, r7
  403b9e:	f001 fcd5 	bl	40554c <__aeabi_dsub>
  403ba2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403ba4:	460f      	mov	r7, r1
  403ba6:	9904      	ldr	r1, [sp, #16]
  403ba8:	3530      	adds	r5, #48	; 0x30
  403baa:	2b01      	cmp	r3, #1
  403bac:	700d      	strb	r5, [r1, #0]
  403bae:	4606      	mov	r6, r0
  403bb0:	f101 0501 	add.w	r5, r1, #1
  403bb4:	d026      	beq.n	403c04 <_dtoa_r+0xcbc>
  403bb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403bb8:	9a04      	ldr	r2, [sp, #16]
  403bba:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403cf8 <_dtoa_r+0xdb0>
  403bbe:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403bc2:	4413      	add	r3, r2
  403bc4:	f04f 0a00 	mov.w	sl, #0
  403bc8:	4699      	mov	r9, r3
  403bca:	4652      	mov	r2, sl
  403bcc:	465b      	mov	r3, fp
  403bce:	4630      	mov	r0, r6
  403bd0:	4639      	mov	r1, r7
  403bd2:	f001 fe6f 	bl	4058b4 <__aeabi_dmul>
  403bd6:	460f      	mov	r7, r1
  403bd8:	4606      	mov	r6, r0
  403bda:	f002 f91b 	bl	405e14 <__aeabi_d2iz>
  403bde:	4680      	mov	r8, r0
  403be0:	f001 fe02 	bl	4057e8 <__aeabi_i2d>
  403be4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403be8:	4602      	mov	r2, r0
  403bea:	460b      	mov	r3, r1
  403bec:	4630      	mov	r0, r6
  403bee:	4639      	mov	r1, r7
  403bf0:	f001 fcac 	bl	40554c <__aeabi_dsub>
  403bf4:	f805 8b01 	strb.w	r8, [r5], #1
  403bf8:	454d      	cmp	r5, r9
  403bfa:	4606      	mov	r6, r0
  403bfc:	460f      	mov	r7, r1
  403bfe:	d1e4      	bne.n	403bca <_dtoa_r+0xc82>
  403c00:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c04:	4b3b      	ldr	r3, [pc, #236]	; (403cf4 <_dtoa_r+0xdac>)
  403c06:	2200      	movs	r2, #0
  403c08:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403c0c:	f001 fca0 	bl	405550 <__adddf3>
  403c10:	4632      	mov	r2, r6
  403c12:	463b      	mov	r3, r7
  403c14:	f002 f8c0 	bl	405d98 <__aeabi_dcmplt>
  403c18:	2800      	cmp	r0, #0
  403c1a:	d046      	beq.n	403caa <_dtoa_r+0xd62>
  403c1c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c1e:	9302      	str	r3, [sp, #8]
  403c20:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403c24:	f7ff bb43 	b.w	4032ae <_dtoa_r+0x366>
  403c28:	f04f 0800 	mov.w	r8, #0
  403c2c:	4646      	mov	r6, r8
  403c2e:	e6a9      	b.n	403984 <_dtoa_r+0xa3c>
  403c30:	9b08      	ldr	r3, [sp, #32]
  403c32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403c34:	1a9d      	subs	r5, r3, r2
  403c36:	2300      	movs	r3, #0
  403c38:	f7ff bb71 	b.w	40331e <_dtoa_r+0x3d6>
  403c3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403c3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403c40:	9d08      	ldr	r5, [sp, #32]
  403c42:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403c46:	f7ff bb6a 	b.w	40331e <_dtoa_r+0x3d6>
  403c4a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403c4e:	f04f 0a02 	mov.w	sl, #2
  403c52:	e56e      	b.n	403732 <_dtoa_r+0x7ea>
  403c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c56:	2b00      	cmp	r3, #0
  403c58:	f43f aeb8 	beq.w	4039cc <_dtoa_r+0xa84>
  403c5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403c5e:	2b00      	cmp	r3, #0
  403c60:	f77f aede 	ble.w	403a20 <_dtoa_r+0xad8>
  403c64:	2200      	movs	r2, #0
  403c66:	4b24      	ldr	r3, [pc, #144]	; (403cf8 <_dtoa_r+0xdb0>)
  403c68:	4638      	mov	r0, r7
  403c6a:	4641      	mov	r1, r8
  403c6c:	f001 fe22 	bl	4058b4 <__aeabi_dmul>
  403c70:	4607      	mov	r7, r0
  403c72:	4688      	mov	r8, r1
  403c74:	f10a 0001 	add.w	r0, sl, #1
  403c78:	f001 fdb6 	bl	4057e8 <__aeabi_i2d>
  403c7c:	463a      	mov	r2, r7
  403c7e:	4643      	mov	r3, r8
  403c80:	f001 fe18 	bl	4058b4 <__aeabi_dmul>
  403c84:	2200      	movs	r2, #0
  403c86:	4b17      	ldr	r3, [pc, #92]	; (403ce4 <_dtoa_r+0xd9c>)
  403c88:	f001 fc62 	bl	405550 <__adddf3>
  403c8c:	9a02      	ldr	r2, [sp, #8]
  403c8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403c90:	9312      	str	r3, [sp, #72]	; 0x48
  403c92:	3a01      	subs	r2, #1
  403c94:	4605      	mov	r5, r0
  403c96:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403c9a:	9215      	str	r2, [sp, #84]	; 0x54
  403c9c:	e56a      	b.n	403774 <_dtoa_r+0x82c>
  403c9e:	2239      	movs	r2, #57	; 0x39
  403ca0:	46b3      	mov	fp, r6
  403ca2:	703a      	strb	r2, [r7, #0]
  403ca4:	9e06      	ldr	r6, [sp, #24]
  403ca6:	1c7d      	adds	r5, r7, #1
  403ca8:	e4c0      	b.n	40362c <_dtoa_r+0x6e4>
  403caa:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403cae:	2000      	movs	r0, #0
  403cb0:	4910      	ldr	r1, [pc, #64]	; (403cf4 <_dtoa_r+0xdac>)
  403cb2:	f001 fc4b 	bl	40554c <__aeabi_dsub>
  403cb6:	4632      	mov	r2, r6
  403cb8:	463b      	mov	r3, r7
  403cba:	f002 f88b 	bl	405dd4 <__aeabi_dcmpgt>
  403cbe:	b908      	cbnz	r0, 403cc4 <_dtoa_r+0xd7c>
  403cc0:	e6ae      	b.n	403a20 <_dtoa_r+0xad8>
  403cc2:	4615      	mov	r5, r2
  403cc4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403cc8:	2b30      	cmp	r3, #48	; 0x30
  403cca:	f105 32ff 	add.w	r2, r5, #4294967295
  403cce:	d0f8      	beq.n	403cc2 <_dtoa_r+0xd7a>
  403cd0:	e5d7      	b.n	403882 <_dtoa_r+0x93a>
  403cd2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403cd6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cd8:	9302      	str	r3, [sp, #8]
  403cda:	f7ff bae8 	b.w	4032ae <_dtoa_r+0x366>
  403cde:	970c      	str	r7, [sp, #48]	; 0x30
  403ce0:	f7ff bba5 	b.w	40342e <_dtoa_r+0x4e6>
  403ce4:	401c0000 	.word	0x401c0000
  403ce8:	40140000 	.word	0x40140000
  403cec:	00406c70 	.word	0x00406c70
  403cf0:	00406c48 	.word	0x00406c48
  403cf4:	3fe00000 	.word	0x3fe00000
  403cf8:	40240000 	.word	0x40240000
  403cfc:	2b39      	cmp	r3, #57	; 0x39
  403cfe:	f8cd b018 	str.w	fp, [sp, #24]
  403d02:	46d0      	mov	r8, sl
  403d04:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403d08:	469a      	mov	sl, r3
  403d0a:	d0c8      	beq.n	403c9e <_dtoa_r+0xd56>
  403d0c:	f1bb 0f00 	cmp.w	fp, #0
  403d10:	f73f aebf 	bgt.w	403a92 <_dtoa_r+0xb4a>
  403d14:	e6bf      	b.n	403a96 <_dtoa_r+0xb4e>
  403d16:	f47f aebe 	bne.w	403a96 <_dtoa_r+0xb4e>
  403d1a:	f01a 0f01 	tst.w	sl, #1
  403d1e:	f43f aeba 	beq.w	403a96 <_dtoa_r+0xb4e>
  403d22:	e6b2      	b.n	403a8a <_dtoa_r+0xb42>
  403d24:	f04f 0800 	mov.w	r8, #0
  403d28:	4646      	mov	r6, r8
  403d2a:	e5e9      	b.n	403900 <_dtoa_r+0x9b8>
  403d2c:	4631      	mov	r1, r6
  403d2e:	2300      	movs	r3, #0
  403d30:	220a      	movs	r2, #10
  403d32:	4620      	mov	r0, r4
  403d34:	f000 fc3a 	bl	4045ac <__multadd>
  403d38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d3a:	2b00      	cmp	r3, #0
  403d3c:	4606      	mov	r6, r0
  403d3e:	dd0a      	ble.n	403d56 <_dtoa_r+0xe0e>
  403d40:	930a      	str	r3, [sp, #40]	; 0x28
  403d42:	f7ff bbaa 	b.w	40349a <_dtoa_r+0x552>
  403d46:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d48:	2b02      	cmp	r3, #2
  403d4a:	dc23      	bgt.n	403d94 <_dtoa_r+0xe4c>
  403d4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d4e:	e43b      	b.n	4035c8 <_dtoa_r+0x680>
  403d50:	f04f 0a02 	mov.w	sl, #2
  403d54:	e4ed      	b.n	403732 <_dtoa_r+0x7ea>
  403d56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d58:	2b02      	cmp	r3, #2
  403d5a:	dc1b      	bgt.n	403d94 <_dtoa_r+0xe4c>
  403d5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d5e:	e7ef      	b.n	403d40 <_dtoa_r+0xdf8>
  403d60:	2500      	movs	r5, #0
  403d62:	6465      	str	r5, [r4, #68]	; 0x44
  403d64:	4629      	mov	r1, r5
  403d66:	4620      	mov	r0, r4
  403d68:	f000 fbf0 	bl	40454c <_Balloc>
  403d6c:	f04f 33ff 	mov.w	r3, #4294967295
  403d70:	930a      	str	r3, [sp, #40]	; 0x28
  403d72:	930f      	str	r3, [sp, #60]	; 0x3c
  403d74:	2301      	movs	r3, #1
  403d76:	9004      	str	r0, [sp, #16]
  403d78:	9525      	str	r5, [sp, #148]	; 0x94
  403d7a:	6420      	str	r0, [r4, #64]	; 0x40
  403d7c:	930b      	str	r3, [sp, #44]	; 0x2c
  403d7e:	f7ff b9dd 	b.w	40313c <_dtoa_r+0x1f4>
  403d82:	2501      	movs	r5, #1
  403d84:	f7ff b9a5 	b.w	4030d2 <_dtoa_r+0x18a>
  403d88:	f43f ab69 	beq.w	40345e <_dtoa_r+0x516>
  403d8c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403d90:	f7ff bbf9 	b.w	403586 <_dtoa_r+0x63e>
  403d94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d96:	930a      	str	r3, [sp, #40]	; 0x28
  403d98:	e5e5      	b.n	403966 <_dtoa_r+0xa1e>
  403d9a:	bf00      	nop

00403d9c <__libc_fini_array>:
  403d9c:	b538      	push	{r3, r4, r5, lr}
  403d9e:	4c0a      	ldr	r4, [pc, #40]	; (403dc8 <__libc_fini_array+0x2c>)
  403da0:	4d0a      	ldr	r5, [pc, #40]	; (403dcc <__libc_fini_array+0x30>)
  403da2:	1b64      	subs	r4, r4, r5
  403da4:	10a4      	asrs	r4, r4, #2
  403da6:	d00a      	beq.n	403dbe <__libc_fini_array+0x22>
  403da8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403dac:	3b01      	subs	r3, #1
  403dae:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403db2:	3c01      	subs	r4, #1
  403db4:	f855 3904 	ldr.w	r3, [r5], #-4
  403db8:	4798      	blx	r3
  403dba:	2c00      	cmp	r4, #0
  403dbc:	d1f9      	bne.n	403db2 <__libc_fini_array+0x16>
  403dbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403dc2:	f003 b853 	b.w	406e6c <_fini>
  403dc6:	bf00      	nop
  403dc8:	00406e7c 	.word	0x00406e7c
  403dcc:	00406e78 	.word	0x00406e78

00403dd0 <_localeconv_r>:
  403dd0:	4a04      	ldr	r2, [pc, #16]	; (403de4 <_localeconv_r+0x14>)
  403dd2:	4b05      	ldr	r3, [pc, #20]	; (403de8 <_localeconv_r+0x18>)
  403dd4:	6812      	ldr	r2, [r2, #0]
  403dd6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403dd8:	2800      	cmp	r0, #0
  403dda:	bf08      	it	eq
  403ddc:	4618      	moveq	r0, r3
  403dde:	30f0      	adds	r0, #240	; 0xf0
  403de0:	4770      	bx	lr
  403de2:	bf00      	nop
  403de4:	20400024 	.word	0x20400024
  403de8:	20400864 	.word	0x20400864

00403dec <__retarget_lock_acquire_recursive>:
  403dec:	4770      	bx	lr
  403dee:	bf00      	nop

00403df0 <__retarget_lock_release_recursive>:
  403df0:	4770      	bx	lr
  403df2:	bf00      	nop

00403df4 <_malloc_r>:
  403df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403df8:	f101 060b 	add.w	r6, r1, #11
  403dfc:	2e16      	cmp	r6, #22
  403dfe:	b083      	sub	sp, #12
  403e00:	4605      	mov	r5, r0
  403e02:	f240 809e 	bls.w	403f42 <_malloc_r+0x14e>
  403e06:	f036 0607 	bics.w	r6, r6, #7
  403e0a:	f100 80bd 	bmi.w	403f88 <_malloc_r+0x194>
  403e0e:	42b1      	cmp	r1, r6
  403e10:	f200 80ba 	bhi.w	403f88 <_malloc_r+0x194>
  403e14:	f000 fb8e 	bl	404534 <__malloc_lock>
  403e18:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403e1c:	f0c0 8293 	bcc.w	404346 <_malloc_r+0x552>
  403e20:	0a73      	lsrs	r3, r6, #9
  403e22:	f000 80b8 	beq.w	403f96 <_malloc_r+0x1a2>
  403e26:	2b04      	cmp	r3, #4
  403e28:	f200 8179 	bhi.w	40411e <_malloc_r+0x32a>
  403e2c:	09b3      	lsrs	r3, r6, #6
  403e2e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403e32:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403e36:	00c3      	lsls	r3, r0, #3
  403e38:	4fbf      	ldr	r7, [pc, #764]	; (404138 <_malloc_r+0x344>)
  403e3a:	443b      	add	r3, r7
  403e3c:	f1a3 0108 	sub.w	r1, r3, #8
  403e40:	685c      	ldr	r4, [r3, #4]
  403e42:	42a1      	cmp	r1, r4
  403e44:	d106      	bne.n	403e54 <_malloc_r+0x60>
  403e46:	e00c      	b.n	403e62 <_malloc_r+0x6e>
  403e48:	2a00      	cmp	r2, #0
  403e4a:	f280 80aa 	bge.w	403fa2 <_malloc_r+0x1ae>
  403e4e:	68e4      	ldr	r4, [r4, #12]
  403e50:	42a1      	cmp	r1, r4
  403e52:	d006      	beq.n	403e62 <_malloc_r+0x6e>
  403e54:	6863      	ldr	r3, [r4, #4]
  403e56:	f023 0303 	bic.w	r3, r3, #3
  403e5a:	1b9a      	subs	r2, r3, r6
  403e5c:	2a0f      	cmp	r2, #15
  403e5e:	ddf3      	ble.n	403e48 <_malloc_r+0x54>
  403e60:	4670      	mov	r0, lr
  403e62:	693c      	ldr	r4, [r7, #16]
  403e64:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40414c <_malloc_r+0x358>
  403e68:	4574      	cmp	r4, lr
  403e6a:	f000 81ab 	beq.w	4041c4 <_malloc_r+0x3d0>
  403e6e:	6863      	ldr	r3, [r4, #4]
  403e70:	f023 0303 	bic.w	r3, r3, #3
  403e74:	1b9a      	subs	r2, r3, r6
  403e76:	2a0f      	cmp	r2, #15
  403e78:	f300 8190 	bgt.w	40419c <_malloc_r+0x3a8>
  403e7c:	2a00      	cmp	r2, #0
  403e7e:	f8c7 e014 	str.w	lr, [r7, #20]
  403e82:	f8c7 e010 	str.w	lr, [r7, #16]
  403e86:	f280 809d 	bge.w	403fc4 <_malloc_r+0x1d0>
  403e8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403e8e:	f080 8161 	bcs.w	404154 <_malloc_r+0x360>
  403e92:	08db      	lsrs	r3, r3, #3
  403e94:	f103 0c01 	add.w	ip, r3, #1
  403e98:	1099      	asrs	r1, r3, #2
  403e9a:	687a      	ldr	r2, [r7, #4]
  403e9c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403ea0:	f8c4 8008 	str.w	r8, [r4, #8]
  403ea4:	2301      	movs	r3, #1
  403ea6:	408b      	lsls	r3, r1
  403ea8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403eac:	4313      	orrs	r3, r2
  403eae:	3908      	subs	r1, #8
  403eb0:	60e1      	str	r1, [r4, #12]
  403eb2:	607b      	str	r3, [r7, #4]
  403eb4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403eb8:	f8c8 400c 	str.w	r4, [r8, #12]
  403ebc:	1082      	asrs	r2, r0, #2
  403ebe:	2401      	movs	r4, #1
  403ec0:	4094      	lsls	r4, r2
  403ec2:	429c      	cmp	r4, r3
  403ec4:	f200 808b 	bhi.w	403fde <_malloc_r+0x1ea>
  403ec8:	421c      	tst	r4, r3
  403eca:	d106      	bne.n	403eda <_malloc_r+0xe6>
  403ecc:	f020 0003 	bic.w	r0, r0, #3
  403ed0:	0064      	lsls	r4, r4, #1
  403ed2:	421c      	tst	r4, r3
  403ed4:	f100 0004 	add.w	r0, r0, #4
  403ed8:	d0fa      	beq.n	403ed0 <_malloc_r+0xdc>
  403eda:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403ede:	46cc      	mov	ip, r9
  403ee0:	4680      	mov	r8, r0
  403ee2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403ee6:	459c      	cmp	ip, r3
  403ee8:	d107      	bne.n	403efa <_malloc_r+0x106>
  403eea:	e16d      	b.n	4041c8 <_malloc_r+0x3d4>
  403eec:	2a00      	cmp	r2, #0
  403eee:	f280 817b 	bge.w	4041e8 <_malloc_r+0x3f4>
  403ef2:	68db      	ldr	r3, [r3, #12]
  403ef4:	459c      	cmp	ip, r3
  403ef6:	f000 8167 	beq.w	4041c8 <_malloc_r+0x3d4>
  403efa:	6859      	ldr	r1, [r3, #4]
  403efc:	f021 0103 	bic.w	r1, r1, #3
  403f00:	1b8a      	subs	r2, r1, r6
  403f02:	2a0f      	cmp	r2, #15
  403f04:	ddf2      	ble.n	403eec <_malloc_r+0xf8>
  403f06:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403f0a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403f0e:	9300      	str	r3, [sp, #0]
  403f10:	199c      	adds	r4, r3, r6
  403f12:	4628      	mov	r0, r5
  403f14:	f046 0601 	orr.w	r6, r6, #1
  403f18:	f042 0501 	orr.w	r5, r2, #1
  403f1c:	605e      	str	r6, [r3, #4]
  403f1e:	f8c8 c00c 	str.w	ip, [r8, #12]
  403f22:	f8cc 8008 	str.w	r8, [ip, #8]
  403f26:	617c      	str	r4, [r7, #20]
  403f28:	613c      	str	r4, [r7, #16]
  403f2a:	f8c4 e00c 	str.w	lr, [r4, #12]
  403f2e:	f8c4 e008 	str.w	lr, [r4, #8]
  403f32:	6065      	str	r5, [r4, #4]
  403f34:	505a      	str	r2, [r3, r1]
  403f36:	f000 fb03 	bl	404540 <__malloc_unlock>
  403f3a:	9b00      	ldr	r3, [sp, #0]
  403f3c:	f103 0408 	add.w	r4, r3, #8
  403f40:	e01e      	b.n	403f80 <_malloc_r+0x18c>
  403f42:	2910      	cmp	r1, #16
  403f44:	d820      	bhi.n	403f88 <_malloc_r+0x194>
  403f46:	f000 faf5 	bl	404534 <__malloc_lock>
  403f4a:	2610      	movs	r6, #16
  403f4c:	2318      	movs	r3, #24
  403f4e:	2002      	movs	r0, #2
  403f50:	4f79      	ldr	r7, [pc, #484]	; (404138 <_malloc_r+0x344>)
  403f52:	443b      	add	r3, r7
  403f54:	f1a3 0208 	sub.w	r2, r3, #8
  403f58:	685c      	ldr	r4, [r3, #4]
  403f5a:	4294      	cmp	r4, r2
  403f5c:	f000 813d 	beq.w	4041da <_malloc_r+0x3e6>
  403f60:	6863      	ldr	r3, [r4, #4]
  403f62:	68e1      	ldr	r1, [r4, #12]
  403f64:	68a6      	ldr	r6, [r4, #8]
  403f66:	f023 0303 	bic.w	r3, r3, #3
  403f6a:	4423      	add	r3, r4
  403f6c:	4628      	mov	r0, r5
  403f6e:	685a      	ldr	r2, [r3, #4]
  403f70:	60f1      	str	r1, [r6, #12]
  403f72:	f042 0201 	orr.w	r2, r2, #1
  403f76:	608e      	str	r6, [r1, #8]
  403f78:	605a      	str	r2, [r3, #4]
  403f7a:	f000 fae1 	bl	404540 <__malloc_unlock>
  403f7e:	3408      	adds	r4, #8
  403f80:	4620      	mov	r0, r4
  403f82:	b003      	add	sp, #12
  403f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f88:	2400      	movs	r4, #0
  403f8a:	230c      	movs	r3, #12
  403f8c:	4620      	mov	r0, r4
  403f8e:	602b      	str	r3, [r5, #0]
  403f90:	b003      	add	sp, #12
  403f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f96:	2040      	movs	r0, #64	; 0x40
  403f98:	f44f 7300 	mov.w	r3, #512	; 0x200
  403f9c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403fa0:	e74a      	b.n	403e38 <_malloc_r+0x44>
  403fa2:	4423      	add	r3, r4
  403fa4:	68e1      	ldr	r1, [r4, #12]
  403fa6:	685a      	ldr	r2, [r3, #4]
  403fa8:	68a6      	ldr	r6, [r4, #8]
  403faa:	f042 0201 	orr.w	r2, r2, #1
  403fae:	60f1      	str	r1, [r6, #12]
  403fb0:	4628      	mov	r0, r5
  403fb2:	608e      	str	r6, [r1, #8]
  403fb4:	605a      	str	r2, [r3, #4]
  403fb6:	f000 fac3 	bl	404540 <__malloc_unlock>
  403fba:	3408      	adds	r4, #8
  403fbc:	4620      	mov	r0, r4
  403fbe:	b003      	add	sp, #12
  403fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403fc4:	4423      	add	r3, r4
  403fc6:	4628      	mov	r0, r5
  403fc8:	685a      	ldr	r2, [r3, #4]
  403fca:	f042 0201 	orr.w	r2, r2, #1
  403fce:	605a      	str	r2, [r3, #4]
  403fd0:	f000 fab6 	bl	404540 <__malloc_unlock>
  403fd4:	3408      	adds	r4, #8
  403fd6:	4620      	mov	r0, r4
  403fd8:	b003      	add	sp, #12
  403fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403fde:	68bc      	ldr	r4, [r7, #8]
  403fe0:	6863      	ldr	r3, [r4, #4]
  403fe2:	f023 0803 	bic.w	r8, r3, #3
  403fe6:	45b0      	cmp	r8, r6
  403fe8:	d304      	bcc.n	403ff4 <_malloc_r+0x200>
  403fea:	eba8 0306 	sub.w	r3, r8, r6
  403fee:	2b0f      	cmp	r3, #15
  403ff0:	f300 8085 	bgt.w	4040fe <_malloc_r+0x30a>
  403ff4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404150 <_malloc_r+0x35c>
  403ff8:	4b50      	ldr	r3, [pc, #320]	; (40413c <_malloc_r+0x348>)
  403ffa:	f8d9 2000 	ldr.w	r2, [r9]
  403ffe:	681b      	ldr	r3, [r3, #0]
  404000:	3201      	adds	r2, #1
  404002:	4433      	add	r3, r6
  404004:	eb04 0a08 	add.w	sl, r4, r8
  404008:	f000 8155 	beq.w	4042b6 <_malloc_r+0x4c2>
  40400c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404010:	330f      	adds	r3, #15
  404012:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404016:	f02b 0b0f 	bic.w	fp, fp, #15
  40401a:	4659      	mov	r1, fp
  40401c:	4628      	mov	r0, r5
  40401e:	f000 fd8f 	bl	404b40 <_sbrk_r>
  404022:	1c41      	adds	r1, r0, #1
  404024:	4602      	mov	r2, r0
  404026:	f000 80fc 	beq.w	404222 <_malloc_r+0x42e>
  40402a:	4582      	cmp	sl, r0
  40402c:	f200 80f7 	bhi.w	40421e <_malloc_r+0x42a>
  404030:	4b43      	ldr	r3, [pc, #268]	; (404140 <_malloc_r+0x34c>)
  404032:	6819      	ldr	r1, [r3, #0]
  404034:	4459      	add	r1, fp
  404036:	6019      	str	r1, [r3, #0]
  404038:	f000 814d 	beq.w	4042d6 <_malloc_r+0x4e2>
  40403c:	f8d9 0000 	ldr.w	r0, [r9]
  404040:	3001      	adds	r0, #1
  404042:	bf1b      	ittet	ne
  404044:	eba2 0a0a 	subne.w	sl, r2, sl
  404048:	4451      	addne	r1, sl
  40404a:	f8c9 2000 	streq.w	r2, [r9]
  40404e:	6019      	strne	r1, [r3, #0]
  404050:	f012 0107 	ands.w	r1, r2, #7
  404054:	f000 8115 	beq.w	404282 <_malloc_r+0x48e>
  404058:	f1c1 0008 	rsb	r0, r1, #8
  40405c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404060:	4402      	add	r2, r0
  404062:	3108      	adds	r1, #8
  404064:	eb02 090b 	add.w	r9, r2, fp
  404068:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40406c:	eba1 0909 	sub.w	r9, r1, r9
  404070:	4649      	mov	r1, r9
  404072:	4628      	mov	r0, r5
  404074:	9301      	str	r3, [sp, #4]
  404076:	9200      	str	r2, [sp, #0]
  404078:	f000 fd62 	bl	404b40 <_sbrk_r>
  40407c:	1c43      	adds	r3, r0, #1
  40407e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404082:	f000 8143 	beq.w	40430c <_malloc_r+0x518>
  404086:	1a80      	subs	r0, r0, r2
  404088:	4448      	add	r0, r9
  40408a:	f040 0001 	orr.w	r0, r0, #1
  40408e:	6819      	ldr	r1, [r3, #0]
  404090:	60ba      	str	r2, [r7, #8]
  404092:	4449      	add	r1, r9
  404094:	42bc      	cmp	r4, r7
  404096:	6050      	str	r0, [r2, #4]
  404098:	6019      	str	r1, [r3, #0]
  40409a:	d017      	beq.n	4040cc <_malloc_r+0x2d8>
  40409c:	f1b8 0f0f 	cmp.w	r8, #15
  4040a0:	f240 80fb 	bls.w	40429a <_malloc_r+0x4a6>
  4040a4:	6860      	ldr	r0, [r4, #4]
  4040a6:	f1a8 020c 	sub.w	r2, r8, #12
  4040aa:	f022 0207 	bic.w	r2, r2, #7
  4040ae:	eb04 0e02 	add.w	lr, r4, r2
  4040b2:	f000 0001 	and.w	r0, r0, #1
  4040b6:	f04f 0c05 	mov.w	ip, #5
  4040ba:	4310      	orrs	r0, r2
  4040bc:	2a0f      	cmp	r2, #15
  4040be:	6060      	str	r0, [r4, #4]
  4040c0:	f8ce c004 	str.w	ip, [lr, #4]
  4040c4:	f8ce c008 	str.w	ip, [lr, #8]
  4040c8:	f200 8117 	bhi.w	4042fa <_malloc_r+0x506>
  4040cc:	4b1d      	ldr	r3, [pc, #116]	; (404144 <_malloc_r+0x350>)
  4040ce:	68bc      	ldr	r4, [r7, #8]
  4040d0:	681a      	ldr	r2, [r3, #0]
  4040d2:	4291      	cmp	r1, r2
  4040d4:	bf88      	it	hi
  4040d6:	6019      	strhi	r1, [r3, #0]
  4040d8:	4b1b      	ldr	r3, [pc, #108]	; (404148 <_malloc_r+0x354>)
  4040da:	681a      	ldr	r2, [r3, #0]
  4040dc:	4291      	cmp	r1, r2
  4040de:	6862      	ldr	r2, [r4, #4]
  4040e0:	bf88      	it	hi
  4040e2:	6019      	strhi	r1, [r3, #0]
  4040e4:	f022 0203 	bic.w	r2, r2, #3
  4040e8:	4296      	cmp	r6, r2
  4040ea:	eba2 0306 	sub.w	r3, r2, r6
  4040ee:	d801      	bhi.n	4040f4 <_malloc_r+0x300>
  4040f0:	2b0f      	cmp	r3, #15
  4040f2:	dc04      	bgt.n	4040fe <_malloc_r+0x30a>
  4040f4:	4628      	mov	r0, r5
  4040f6:	f000 fa23 	bl	404540 <__malloc_unlock>
  4040fa:	2400      	movs	r4, #0
  4040fc:	e740      	b.n	403f80 <_malloc_r+0x18c>
  4040fe:	19a2      	adds	r2, r4, r6
  404100:	f043 0301 	orr.w	r3, r3, #1
  404104:	f046 0601 	orr.w	r6, r6, #1
  404108:	6066      	str	r6, [r4, #4]
  40410a:	4628      	mov	r0, r5
  40410c:	60ba      	str	r2, [r7, #8]
  40410e:	6053      	str	r3, [r2, #4]
  404110:	f000 fa16 	bl	404540 <__malloc_unlock>
  404114:	3408      	adds	r4, #8
  404116:	4620      	mov	r0, r4
  404118:	b003      	add	sp, #12
  40411a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40411e:	2b14      	cmp	r3, #20
  404120:	d971      	bls.n	404206 <_malloc_r+0x412>
  404122:	2b54      	cmp	r3, #84	; 0x54
  404124:	f200 80a3 	bhi.w	40426e <_malloc_r+0x47a>
  404128:	0b33      	lsrs	r3, r6, #12
  40412a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40412e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404132:	00c3      	lsls	r3, r0, #3
  404134:	e680      	b.n	403e38 <_malloc_r+0x44>
  404136:	bf00      	nop
  404138:	20400454 	.word	0x20400454
  40413c:	20400ca8 	.word	0x20400ca8
  404140:	20400c78 	.word	0x20400c78
  404144:	20400ca0 	.word	0x20400ca0
  404148:	20400ca4 	.word	0x20400ca4
  40414c:	2040045c 	.word	0x2040045c
  404150:	2040085c 	.word	0x2040085c
  404154:	0a5a      	lsrs	r2, r3, #9
  404156:	2a04      	cmp	r2, #4
  404158:	d95b      	bls.n	404212 <_malloc_r+0x41e>
  40415a:	2a14      	cmp	r2, #20
  40415c:	f200 80ae 	bhi.w	4042bc <_malloc_r+0x4c8>
  404160:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404164:	00c9      	lsls	r1, r1, #3
  404166:	325b      	adds	r2, #91	; 0x5b
  404168:	eb07 0c01 	add.w	ip, r7, r1
  40416c:	5879      	ldr	r1, [r7, r1]
  40416e:	f1ac 0c08 	sub.w	ip, ip, #8
  404172:	458c      	cmp	ip, r1
  404174:	f000 8088 	beq.w	404288 <_malloc_r+0x494>
  404178:	684a      	ldr	r2, [r1, #4]
  40417a:	f022 0203 	bic.w	r2, r2, #3
  40417e:	4293      	cmp	r3, r2
  404180:	d273      	bcs.n	40426a <_malloc_r+0x476>
  404182:	6889      	ldr	r1, [r1, #8]
  404184:	458c      	cmp	ip, r1
  404186:	d1f7      	bne.n	404178 <_malloc_r+0x384>
  404188:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40418c:	687b      	ldr	r3, [r7, #4]
  40418e:	60e2      	str	r2, [r4, #12]
  404190:	f8c4 c008 	str.w	ip, [r4, #8]
  404194:	6094      	str	r4, [r2, #8]
  404196:	f8cc 400c 	str.w	r4, [ip, #12]
  40419a:	e68f      	b.n	403ebc <_malloc_r+0xc8>
  40419c:	19a1      	adds	r1, r4, r6
  40419e:	f046 0c01 	orr.w	ip, r6, #1
  4041a2:	f042 0601 	orr.w	r6, r2, #1
  4041a6:	f8c4 c004 	str.w	ip, [r4, #4]
  4041aa:	4628      	mov	r0, r5
  4041ac:	6179      	str	r1, [r7, #20]
  4041ae:	6139      	str	r1, [r7, #16]
  4041b0:	f8c1 e00c 	str.w	lr, [r1, #12]
  4041b4:	f8c1 e008 	str.w	lr, [r1, #8]
  4041b8:	604e      	str	r6, [r1, #4]
  4041ba:	50e2      	str	r2, [r4, r3]
  4041bc:	f000 f9c0 	bl	404540 <__malloc_unlock>
  4041c0:	3408      	adds	r4, #8
  4041c2:	e6dd      	b.n	403f80 <_malloc_r+0x18c>
  4041c4:	687b      	ldr	r3, [r7, #4]
  4041c6:	e679      	b.n	403ebc <_malloc_r+0xc8>
  4041c8:	f108 0801 	add.w	r8, r8, #1
  4041cc:	f018 0f03 	tst.w	r8, #3
  4041d0:	f10c 0c08 	add.w	ip, ip, #8
  4041d4:	f47f ae85 	bne.w	403ee2 <_malloc_r+0xee>
  4041d8:	e02d      	b.n	404236 <_malloc_r+0x442>
  4041da:	68dc      	ldr	r4, [r3, #12]
  4041dc:	42a3      	cmp	r3, r4
  4041de:	bf08      	it	eq
  4041e0:	3002      	addeq	r0, #2
  4041e2:	f43f ae3e 	beq.w	403e62 <_malloc_r+0x6e>
  4041e6:	e6bb      	b.n	403f60 <_malloc_r+0x16c>
  4041e8:	4419      	add	r1, r3
  4041ea:	461c      	mov	r4, r3
  4041ec:	684a      	ldr	r2, [r1, #4]
  4041ee:	68db      	ldr	r3, [r3, #12]
  4041f0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4041f4:	f042 0201 	orr.w	r2, r2, #1
  4041f8:	604a      	str	r2, [r1, #4]
  4041fa:	4628      	mov	r0, r5
  4041fc:	60f3      	str	r3, [r6, #12]
  4041fe:	609e      	str	r6, [r3, #8]
  404200:	f000 f99e 	bl	404540 <__malloc_unlock>
  404204:	e6bc      	b.n	403f80 <_malloc_r+0x18c>
  404206:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40420a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40420e:	00c3      	lsls	r3, r0, #3
  404210:	e612      	b.n	403e38 <_malloc_r+0x44>
  404212:	099a      	lsrs	r2, r3, #6
  404214:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404218:	00c9      	lsls	r1, r1, #3
  40421a:	3238      	adds	r2, #56	; 0x38
  40421c:	e7a4      	b.n	404168 <_malloc_r+0x374>
  40421e:	42bc      	cmp	r4, r7
  404220:	d054      	beq.n	4042cc <_malloc_r+0x4d8>
  404222:	68bc      	ldr	r4, [r7, #8]
  404224:	6862      	ldr	r2, [r4, #4]
  404226:	f022 0203 	bic.w	r2, r2, #3
  40422a:	e75d      	b.n	4040e8 <_malloc_r+0x2f4>
  40422c:	f859 3908 	ldr.w	r3, [r9], #-8
  404230:	4599      	cmp	r9, r3
  404232:	f040 8086 	bne.w	404342 <_malloc_r+0x54e>
  404236:	f010 0f03 	tst.w	r0, #3
  40423a:	f100 30ff 	add.w	r0, r0, #4294967295
  40423e:	d1f5      	bne.n	40422c <_malloc_r+0x438>
  404240:	687b      	ldr	r3, [r7, #4]
  404242:	ea23 0304 	bic.w	r3, r3, r4
  404246:	607b      	str	r3, [r7, #4]
  404248:	0064      	lsls	r4, r4, #1
  40424a:	429c      	cmp	r4, r3
  40424c:	f63f aec7 	bhi.w	403fde <_malloc_r+0x1ea>
  404250:	2c00      	cmp	r4, #0
  404252:	f43f aec4 	beq.w	403fde <_malloc_r+0x1ea>
  404256:	421c      	tst	r4, r3
  404258:	4640      	mov	r0, r8
  40425a:	f47f ae3e 	bne.w	403eda <_malloc_r+0xe6>
  40425e:	0064      	lsls	r4, r4, #1
  404260:	421c      	tst	r4, r3
  404262:	f100 0004 	add.w	r0, r0, #4
  404266:	d0fa      	beq.n	40425e <_malloc_r+0x46a>
  404268:	e637      	b.n	403eda <_malloc_r+0xe6>
  40426a:	468c      	mov	ip, r1
  40426c:	e78c      	b.n	404188 <_malloc_r+0x394>
  40426e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404272:	d815      	bhi.n	4042a0 <_malloc_r+0x4ac>
  404274:	0bf3      	lsrs	r3, r6, #15
  404276:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40427a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40427e:	00c3      	lsls	r3, r0, #3
  404280:	e5da      	b.n	403e38 <_malloc_r+0x44>
  404282:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404286:	e6ed      	b.n	404064 <_malloc_r+0x270>
  404288:	687b      	ldr	r3, [r7, #4]
  40428a:	1092      	asrs	r2, r2, #2
  40428c:	2101      	movs	r1, #1
  40428e:	fa01 f202 	lsl.w	r2, r1, r2
  404292:	4313      	orrs	r3, r2
  404294:	607b      	str	r3, [r7, #4]
  404296:	4662      	mov	r2, ip
  404298:	e779      	b.n	40418e <_malloc_r+0x39a>
  40429a:	2301      	movs	r3, #1
  40429c:	6053      	str	r3, [r2, #4]
  40429e:	e729      	b.n	4040f4 <_malloc_r+0x300>
  4042a0:	f240 5254 	movw	r2, #1364	; 0x554
  4042a4:	4293      	cmp	r3, r2
  4042a6:	d822      	bhi.n	4042ee <_malloc_r+0x4fa>
  4042a8:	0cb3      	lsrs	r3, r6, #18
  4042aa:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4042ae:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4042b2:	00c3      	lsls	r3, r0, #3
  4042b4:	e5c0      	b.n	403e38 <_malloc_r+0x44>
  4042b6:	f103 0b10 	add.w	fp, r3, #16
  4042ba:	e6ae      	b.n	40401a <_malloc_r+0x226>
  4042bc:	2a54      	cmp	r2, #84	; 0x54
  4042be:	d829      	bhi.n	404314 <_malloc_r+0x520>
  4042c0:	0b1a      	lsrs	r2, r3, #12
  4042c2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4042c6:	00c9      	lsls	r1, r1, #3
  4042c8:	326e      	adds	r2, #110	; 0x6e
  4042ca:	e74d      	b.n	404168 <_malloc_r+0x374>
  4042cc:	4b20      	ldr	r3, [pc, #128]	; (404350 <_malloc_r+0x55c>)
  4042ce:	6819      	ldr	r1, [r3, #0]
  4042d0:	4459      	add	r1, fp
  4042d2:	6019      	str	r1, [r3, #0]
  4042d4:	e6b2      	b.n	40403c <_malloc_r+0x248>
  4042d6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4042da:	2800      	cmp	r0, #0
  4042dc:	f47f aeae 	bne.w	40403c <_malloc_r+0x248>
  4042e0:	eb08 030b 	add.w	r3, r8, fp
  4042e4:	68ba      	ldr	r2, [r7, #8]
  4042e6:	f043 0301 	orr.w	r3, r3, #1
  4042ea:	6053      	str	r3, [r2, #4]
  4042ec:	e6ee      	b.n	4040cc <_malloc_r+0x2d8>
  4042ee:	207f      	movs	r0, #127	; 0x7f
  4042f0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4042f4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4042f8:	e59e      	b.n	403e38 <_malloc_r+0x44>
  4042fa:	f104 0108 	add.w	r1, r4, #8
  4042fe:	4628      	mov	r0, r5
  404300:	9300      	str	r3, [sp, #0]
  404302:	f000 fe0b 	bl	404f1c <_free_r>
  404306:	9b00      	ldr	r3, [sp, #0]
  404308:	6819      	ldr	r1, [r3, #0]
  40430a:	e6df      	b.n	4040cc <_malloc_r+0x2d8>
  40430c:	2001      	movs	r0, #1
  40430e:	f04f 0900 	mov.w	r9, #0
  404312:	e6bc      	b.n	40408e <_malloc_r+0x29a>
  404314:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404318:	d805      	bhi.n	404326 <_malloc_r+0x532>
  40431a:	0bda      	lsrs	r2, r3, #15
  40431c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404320:	00c9      	lsls	r1, r1, #3
  404322:	3277      	adds	r2, #119	; 0x77
  404324:	e720      	b.n	404168 <_malloc_r+0x374>
  404326:	f240 5154 	movw	r1, #1364	; 0x554
  40432a:	428a      	cmp	r2, r1
  40432c:	d805      	bhi.n	40433a <_malloc_r+0x546>
  40432e:	0c9a      	lsrs	r2, r3, #18
  404330:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404334:	00c9      	lsls	r1, r1, #3
  404336:	327c      	adds	r2, #124	; 0x7c
  404338:	e716      	b.n	404168 <_malloc_r+0x374>
  40433a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40433e:	227e      	movs	r2, #126	; 0x7e
  404340:	e712      	b.n	404168 <_malloc_r+0x374>
  404342:	687b      	ldr	r3, [r7, #4]
  404344:	e780      	b.n	404248 <_malloc_r+0x454>
  404346:	08f0      	lsrs	r0, r6, #3
  404348:	f106 0308 	add.w	r3, r6, #8
  40434c:	e600      	b.n	403f50 <_malloc_r+0x15c>
  40434e:	bf00      	nop
  404350:	20400c78 	.word	0x20400c78
	...

00404360 <memchr>:
  404360:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404364:	2a10      	cmp	r2, #16
  404366:	db2b      	blt.n	4043c0 <memchr+0x60>
  404368:	f010 0f07 	tst.w	r0, #7
  40436c:	d008      	beq.n	404380 <memchr+0x20>
  40436e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404372:	3a01      	subs	r2, #1
  404374:	428b      	cmp	r3, r1
  404376:	d02d      	beq.n	4043d4 <memchr+0x74>
  404378:	f010 0f07 	tst.w	r0, #7
  40437c:	b342      	cbz	r2, 4043d0 <memchr+0x70>
  40437e:	d1f6      	bne.n	40436e <memchr+0xe>
  404380:	b4f0      	push	{r4, r5, r6, r7}
  404382:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404386:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40438a:	f022 0407 	bic.w	r4, r2, #7
  40438e:	f07f 0700 	mvns.w	r7, #0
  404392:	2300      	movs	r3, #0
  404394:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404398:	3c08      	subs	r4, #8
  40439a:	ea85 0501 	eor.w	r5, r5, r1
  40439e:	ea86 0601 	eor.w	r6, r6, r1
  4043a2:	fa85 f547 	uadd8	r5, r5, r7
  4043a6:	faa3 f587 	sel	r5, r3, r7
  4043aa:	fa86 f647 	uadd8	r6, r6, r7
  4043ae:	faa5 f687 	sel	r6, r5, r7
  4043b2:	b98e      	cbnz	r6, 4043d8 <memchr+0x78>
  4043b4:	d1ee      	bne.n	404394 <memchr+0x34>
  4043b6:	bcf0      	pop	{r4, r5, r6, r7}
  4043b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4043bc:	f002 0207 	and.w	r2, r2, #7
  4043c0:	b132      	cbz	r2, 4043d0 <memchr+0x70>
  4043c2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4043c6:	3a01      	subs	r2, #1
  4043c8:	ea83 0301 	eor.w	r3, r3, r1
  4043cc:	b113      	cbz	r3, 4043d4 <memchr+0x74>
  4043ce:	d1f8      	bne.n	4043c2 <memchr+0x62>
  4043d0:	2000      	movs	r0, #0
  4043d2:	4770      	bx	lr
  4043d4:	3801      	subs	r0, #1
  4043d6:	4770      	bx	lr
  4043d8:	2d00      	cmp	r5, #0
  4043da:	bf06      	itte	eq
  4043dc:	4635      	moveq	r5, r6
  4043de:	3803      	subeq	r0, #3
  4043e0:	3807      	subne	r0, #7
  4043e2:	f015 0f01 	tst.w	r5, #1
  4043e6:	d107      	bne.n	4043f8 <memchr+0x98>
  4043e8:	3001      	adds	r0, #1
  4043ea:	f415 7f80 	tst.w	r5, #256	; 0x100
  4043ee:	bf02      	ittt	eq
  4043f0:	3001      	addeq	r0, #1
  4043f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4043f6:	3001      	addeq	r0, #1
  4043f8:	bcf0      	pop	{r4, r5, r6, r7}
  4043fa:	3801      	subs	r0, #1
  4043fc:	4770      	bx	lr
  4043fe:	bf00      	nop

00404400 <memcpy>:
  404400:	4684      	mov	ip, r0
  404402:	ea41 0300 	orr.w	r3, r1, r0
  404406:	f013 0303 	ands.w	r3, r3, #3
  40440a:	d16d      	bne.n	4044e8 <memcpy+0xe8>
  40440c:	3a40      	subs	r2, #64	; 0x40
  40440e:	d341      	bcc.n	404494 <memcpy+0x94>
  404410:	f851 3b04 	ldr.w	r3, [r1], #4
  404414:	f840 3b04 	str.w	r3, [r0], #4
  404418:	f851 3b04 	ldr.w	r3, [r1], #4
  40441c:	f840 3b04 	str.w	r3, [r0], #4
  404420:	f851 3b04 	ldr.w	r3, [r1], #4
  404424:	f840 3b04 	str.w	r3, [r0], #4
  404428:	f851 3b04 	ldr.w	r3, [r1], #4
  40442c:	f840 3b04 	str.w	r3, [r0], #4
  404430:	f851 3b04 	ldr.w	r3, [r1], #4
  404434:	f840 3b04 	str.w	r3, [r0], #4
  404438:	f851 3b04 	ldr.w	r3, [r1], #4
  40443c:	f840 3b04 	str.w	r3, [r0], #4
  404440:	f851 3b04 	ldr.w	r3, [r1], #4
  404444:	f840 3b04 	str.w	r3, [r0], #4
  404448:	f851 3b04 	ldr.w	r3, [r1], #4
  40444c:	f840 3b04 	str.w	r3, [r0], #4
  404450:	f851 3b04 	ldr.w	r3, [r1], #4
  404454:	f840 3b04 	str.w	r3, [r0], #4
  404458:	f851 3b04 	ldr.w	r3, [r1], #4
  40445c:	f840 3b04 	str.w	r3, [r0], #4
  404460:	f851 3b04 	ldr.w	r3, [r1], #4
  404464:	f840 3b04 	str.w	r3, [r0], #4
  404468:	f851 3b04 	ldr.w	r3, [r1], #4
  40446c:	f840 3b04 	str.w	r3, [r0], #4
  404470:	f851 3b04 	ldr.w	r3, [r1], #4
  404474:	f840 3b04 	str.w	r3, [r0], #4
  404478:	f851 3b04 	ldr.w	r3, [r1], #4
  40447c:	f840 3b04 	str.w	r3, [r0], #4
  404480:	f851 3b04 	ldr.w	r3, [r1], #4
  404484:	f840 3b04 	str.w	r3, [r0], #4
  404488:	f851 3b04 	ldr.w	r3, [r1], #4
  40448c:	f840 3b04 	str.w	r3, [r0], #4
  404490:	3a40      	subs	r2, #64	; 0x40
  404492:	d2bd      	bcs.n	404410 <memcpy+0x10>
  404494:	3230      	adds	r2, #48	; 0x30
  404496:	d311      	bcc.n	4044bc <memcpy+0xbc>
  404498:	f851 3b04 	ldr.w	r3, [r1], #4
  40449c:	f840 3b04 	str.w	r3, [r0], #4
  4044a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4044a4:	f840 3b04 	str.w	r3, [r0], #4
  4044a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4044ac:	f840 3b04 	str.w	r3, [r0], #4
  4044b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4044b4:	f840 3b04 	str.w	r3, [r0], #4
  4044b8:	3a10      	subs	r2, #16
  4044ba:	d2ed      	bcs.n	404498 <memcpy+0x98>
  4044bc:	320c      	adds	r2, #12
  4044be:	d305      	bcc.n	4044cc <memcpy+0xcc>
  4044c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4044c4:	f840 3b04 	str.w	r3, [r0], #4
  4044c8:	3a04      	subs	r2, #4
  4044ca:	d2f9      	bcs.n	4044c0 <memcpy+0xc0>
  4044cc:	3204      	adds	r2, #4
  4044ce:	d008      	beq.n	4044e2 <memcpy+0xe2>
  4044d0:	07d2      	lsls	r2, r2, #31
  4044d2:	bf1c      	itt	ne
  4044d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4044d8:	f800 3b01 	strbne.w	r3, [r0], #1
  4044dc:	d301      	bcc.n	4044e2 <memcpy+0xe2>
  4044de:	880b      	ldrh	r3, [r1, #0]
  4044e0:	8003      	strh	r3, [r0, #0]
  4044e2:	4660      	mov	r0, ip
  4044e4:	4770      	bx	lr
  4044e6:	bf00      	nop
  4044e8:	2a08      	cmp	r2, #8
  4044ea:	d313      	bcc.n	404514 <memcpy+0x114>
  4044ec:	078b      	lsls	r3, r1, #30
  4044ee:	d08d      	beq.n	40440c <memcpy+0xc>
  4044f0:	f010 0303 	ands.w	r3, r0, #3
  4044f4:	d08a      	beq.n	40440c <memcpy+0xc>
  4044f6:	f1c3 0304 	rsb	r3, r3, #4
  4044fa:	1ad2      	subs	r2, r2, r3
  4044fc:	07db      	lsls	r3, r3, #31
  4044fe:	bf1c      	itt	ne
  404500:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404504:	f800 3b01 	strbne.w	r3, [r0], #1
  404508:	d380      	bcc.n	40440c <memcpy+0xc>
  40450a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40450e:	f820 3b02 	strh.w	r3, [r0], #2
  404512:	e77b      	b.n	40440c <memcpy+0xc>
  404514:	3a04      	subs	r2, #4
  404516:	d3d9      	bcc.n	4044cc <memcpy+0xcc>
  404518:	3a01      	subs	r2, #1
  40451a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40451e:	f800 3b01 	strb.w	r3, [r0], #1
  404522:	d2f9      	bcs.n	404518 <memcpy+0x118>
  404524:	780b      	ldrb	r3, [r1, #0]
  404526:	7003      	strb	r3, [r0, #0]
  404528:	784b      	ldrb	r3, [r1, #1]
  40452a:	7043      	strb	r3, [r0, #1]
  40452c:	788b      	ldrb	r3, [r1, #2]
  40452e:	7083      	strb	r3, [r0, #2]
  404530:	4660      	mov	r0, ip
  404532:	4770      	bx	lr

00404534 <__malloc_lock>:
  404534:	4801      	ldr	r0, [pc, #4]	; (40453c <__malloc_lock+0x8>)
  404536:	f7ff bc59 	b.w	403dec <__retarget_lock_acquire_recursive>
  40453a:	bf00      	nop
  40453c:	20400cbc 	.word	0x20400cbc

00404540 <__malloc_unlock>:
  404540:	4801      	ldr	r0, [pc, #4]	; (404548 <__malloc_unlock+0x8>)
  404542:	f7ff bc55 	b.w	403df0 <__retarget_lock_release_recursive>
  404546:	bf00      	nop
  404548:	20400cbc 	.word	0x20400cbc

0040454c <_Balloc>:
  40454c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40454e:	b570      	push	{r4, r5, r6, lr}
  404550:	4605      	mov	r5, r0
  404552:	460c      	mov	r4, r1
  404554:	b14b      	cbz	r3, 40456a <_Balloc+0x1e>
  404556:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40455a:	b180      	cbz	r0, 40457e <_Balloc+0x32>
  40455c:	6802      	ldr	r2, [r0, #0]
  40455e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404562:	2300      	movs	r3, #0
  404564:	6103      	str	r3, [r0, #16]
  404566:	60c3      	str	r3, [r0, #12]
  404568:	bd70      	pop	{r4, r5, r6, pc}
  40456a:	2221      	movs	r2, #33	; 0x21
  40456c:	2104      	movs	r1, #4
  40456e:	f000 fc55 	bl	404e1c <_calloc_r>
  404572:	64e8      	str	r0, [r5, #76]	; 0x4c
  404574:	4603      	mov	r3, r0
  404576:	2800      	cmp	r0, #0
  404578:	d1ed      	bne.n	404556 <_Balloc+0xa>
  40457a:	2000      	movs	r0, #0
  40457c:	bd70      	pop	{r4, r5, r6, pc}
  40457e:	2101      	movs	r1, #1
  404580:	fa01 f604 	lsl.w	r6, r1, r4
  404584:	1d72      	adds	r2, r6, #5
  404586:	4628      	mov	r0, r5
  404588:	0092      	lsls	r2, r2, #2
  40458a:	f000 fc47 	bl	404e1c <_calloc_r>
  40458e:	2800      	cmp	r0, #0
  404590:	d0f3      	beq.n	40457a <_Balloc+0x2e>
  404592:	6044      	str	r4, [r0, #4]
  404594:	6086      	str	r6, [r0, #8]
  404596:	e7e4      	b.n	404562 <_Balloc+0x16>

00404598 <_Bfree>:
  404598:	b131      	cbz	r1, 4045a8 <_Bfree+0x10>
  40459a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40459c:	684a      	ldr	r2, [r1, #4]
  40459e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4045a2:	6008      	str	r0, [r1, #0]
  4045a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4045a8:	4770      	bx	lr
  4045aa:	bf00      	nop

004045ac <__multadd>:
  4045ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  4045ae:	690c      	ldr	r4, [r1, #16]
  4045b0:	b083      	sub	sp, #12
  4045b2:	460d      	mov	r5, r1
  4045b4:	4606      	mov	r6, r0
  4045b6:	f101 0e14 	add.w	lr, r1, #20
  4045ba:	2700      	movs	r7, #0
  4045bc:	f8de 0000 	ldr.w	r0, [lr]
  4045c0:	b281      	uxth	r1, r0
  4045c2:	fb02 3301 	mla	r3, r2, r1, r3
  4045c6:	0c01      	lsrs	r1, r0, #16
  4045c8:	0c18      	lsrs	r0, r3, #16
  4045ca:	fb02 0101 	mla	r1, r2, r1, r0
  4045ce:	b29b      	uxth	r3, r3
  4045d0:	3701      	adds	r7, #1
  4045d2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4045d6:	42bc      	cmp	r4, r7
  4045d8:	f84e 3b04 	str.w	r3, [lr], #4
  4045dc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4045e0:	dcec      	bgt.n	4045bc <__multadd+0x10>
  4045e2:	b13b      	cbz	r3, 4045f4 <__multadd+0x48>
  4045e4:	68aa      	ldr	r2, [r5, #8]
  4045e6:	4294      	cmp	r4, r2
  4045e8:	da07      	bge.n	4045fa <__multadd+0x4e>
  4045ea:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4045ee:	3401      	adds	r4, #1
  4045f0:	6153      	str	r3, [r2, #20]
  4045f2:	612c      	str	r4, [r5, #16]
  4045f4:	4628      	mov	r0, r5
  4045f6:	b003      	add	sp, #12
  4045f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4045fa:	6869      	ldr	r1, [r5, #4]
  4045fc:	9301      	str	r3, [sp, #4]
  4045fe:	3101      	adds	r1, #1
  404600:	4630      	mov	r0, r6
  404602:	f7ff ffa3 	bl	40454c <_Balloc>
  404606:	692a      	ldr	r2, [r5, #16]
  404608:	3202      	adds	r2, #2
  40460a:	f105 010c 	add.w	r1, r5, #12
  40460e:	4607      	mov	r7, r0
  404610:	0092      	lsls	r2, r2, #2
  404612:	300c      	adds	r0, #12
  404614:	f7ff fef4 	bl	404400 <memcpy>
  404618:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40461a:	6869      	ldr	r1, [r5, #4]
  40461c:	9b01      	ldr	r3, [sp, #4]
  40461e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404622:	6028      	str	r0, [r5, #0]
  404624:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404628:	463d      	mov	r5, r7
  40462a:	e7de      	b.n	4045ea <__multadd+0x3e>

0040462c <__hi0bits>:
  40462c:	0c02      	lsrs	r2, r0, #16
  40462e:	0412      	lsls	r2, r2, #16
  404630:	4603      	mov	r3, r0
  404632:	b9b2      	cbnz	r2, 404662 <__hi0bits+0x36>
  404634:	0403      	lsls	r3, r0, #16
  404636:	2010      	movs	r0, #16
  404638:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40463c:	bf04      	itt	eq
  40463e:	021b      	lsleq	r3, r3, #8
  404640:	3008      	addeq	r0, #8
  404642:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404646:	bf04      	itt	eq
  404648:	011b      	lsleq	r3, r3, #4
  40464a:	3004      	addeq	r0, #4
  40464c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404650:	bf04      	itt	eq
  404652:	009b      	lsleq	r3, r3, #2
  404654:	3002      	addeq	r0, #2
  404656:	2b00      	cmp	r3, #0
  404658:	db02      	blt.n	404660 <__hi0bits+0x34>
  40465a:	005b      	lsls	r3, r3, #1
  40465c:	d403      	bmi.n	404666 <__hi0bits+0x3a>
  40465e:	2020      	movs	r0, #32
  404660:	4770      	bx	lr
  404662:	2000      	movs	r0, #0
  404664:	e7e8      	b.n	404638 <__hi0bits+0xc>
  404666:	3001      	adds	r0, #1
  404668:	4770      	bx	lr
  40466a:	bf00      	nop

0040466c <__lo0bits>:
  40466c:	6803      	ldr	r3, [r0, #0]
  40466e:	f013 0207 	ands.w	r2, r3, #7
  404672:	4601      	mov	r1, r0
  404674:	d007      	beq.n	404686 <__lo0bits+0x1a>
  404676:	07da      	lsls	r2, r3, #31
  404678:	d421      	bmi.n	4046be <__lo0bits+0x52>
  40467a:	0798      	lsls	r0, r3, #30
  40467c:	d421      	bmi.n	4046c2 <__lo0bits+0x56>
  40467e:	089b      	lsrs	r3, r3, #2
  404680:	600b      	str	r3, [r1, #0]
  404682:	2002      	movs	r0, #2
  404684:	4770      	bx	lr
  404686:	b298      	uxth	r0, r3
  404688:	b198      	cbz	r0, 4046b2 <__lo0bits+0x46>
  40468a:	4610      	mov	r0, r2
  40468c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404690:	bf04      	itt	eq
  404692:	0a1b      	lsreq	r3, r3, #8
  404694:	3008      	addeq	r0, #8
  404696:	071a      	lsls	r2, r3, #28
  404698:	bf04      	itt	eq
  40469a:	091b      	lsreq	r3, r3, #4
  40469c:	3004      	addeq	r0, #4
  40469e:	079a      	lsls	r2, r3, #30
  4046a0:	bf04      	itt	eq
  4046a2:	089b      	lsreq	r3, r3, #2
  4046a4:	3002      	addeq	r0, #2
  4046a6:	07da      	lsls	r2, r3, #31
  4046a8:	d407      	bmi.n	4046ba <__lo0bits+0x4e>
  4046aa:	085b      	lsrs	r3, r3, #1
  4046ac:	d104      	bne.n	4046b8 <__lo0bits+0x4c>
  4046ae:	2020      	movs	r0, #32
  4046b0:	4770      	bx	lr
  4046b2:	0c1b      	lsrs	r3, r3, #16
  4046b4:	2010      	movs	r0, #16
  4046b6:	e7e9      	b.n	40468c <__lo0bits+0x20>
  4046b8:	3001      	adds	r0, #1
  4046ba:	600b      	str	r3, [r1, #0]
  4046bc:	4770      	bx	lr
  4046be:	2000      	movs	r0, #0
  4046c0:	4770      	bx	lr
  4046c2:	085b      	lsrs	r3, r3, #1
  4046c4:	600b      	str	r3, [r1, #0]
  4046c6:	2001      	movs	r0, #1
  4046c8:	4770      	bx	lr
  4046ca:	bf00      	nop

004046cc <__i2b>:
  4046cc:	b510      	push	{r4, lr}
  4046ce:	460c      	mov	r4, r1
  4046d0:	2101      	movs	r1, #1
  4046d2:	f7ff ff3b 	bl	40454c <_Balloc>
  4046d6:	2201      	movs	r2, #1
  4046d8:	6144      	str	r4, [r0, #20]
  4046da:	6102      	str	r2, [r0, #16]
  4046dc:	bd10      	pop	{r4, pc}
  4046de:	bf00      	nop

004046e0 <__multiply>:
  4046e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046e4:	690c      	ldr	r4, [r1, #16]
  4046e6:	6915      	ldr	r5, [r2, #16]
  4046e8:	42ac      	cmp	r4, r5
  4046ea:	b083      	sub	sp, #12
  4046ec:	468b      	mov	fp, r1
  4046ee:	4616      	mov	r6, r2
  4046f0:	da04      	bge.n	4046fc <__multiply+0x1c>
  4046f2:	4622      	mov	r2, r4
  4046f4:	46b3      	mov	fp, r6
  4046f6:	462c      	mov	r4, r5
  4046f8:	460e      	mov	r6, r1
  4046fa:	4615      	mov	r5, r2
  4046fc:	f8db 3008 	ldr.w	r3, [fp, #8]
  404700:	f8db 1004 	ldr.w	r1, [fp, #4]
  404704:	eb04 0805 	add.w	r8, r4, r5
  404708:	4598      	cmp	r8, r3
  40470a:	bfc8      	it	gt
  40470c:	3101      	addgt	r1, #1
  40470e:	f7ff ff1d 	bl	40454c <_Balloc>
  404712:	f100 0914 	add.w	r9, r0, #20
  404716:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40471a:	45d1      	cmp	r9, sl
  40471c:	9000      	str	r0, [sp, #0]
  40471e:	d205      	bcs.n	40472c <__multiply+0x4c>
  404720:	464b      	mov	r3, r9
  404722:	2100      	movs	r1, #0
  404724:	f843 1b04 	str.w	r1, [r3], #4
  404728:	459a      	cmp	sl, r3
  40472a:	d8fb      	bhi.n	404724 <__multiply+0x44>
  40472c:	f106 0c14 	add.w	ip, r6, #20
  404730:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404734:	f10b 0b14 	add.w	fp, fp, #20
  404738:	459c      	cmp	ip, r3
  40473a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40473e:	d24c      	bcs.n	4047da <__multiply+0xfa>
  404740:	f8cd a004 	str.w	sl, [sp, #4]
  404744:	469a      	mov	sl, r3
  404746:	f8dc 5000 	ldr.w	r5, [ip]
  40474a:	b2af      	uxth	r7, r5
  40474c:	b1ef      	cbz	r7, 40478a <__multiply+0xaa>
  40474e:	2100      	movs	r1, #0
  404750:	464d      	mov	r5, r9
  404752:	465e      	mov	r6, fp
  404754:	460c      	mov	r4, r1
  404756:	f856 2b04 	ldr.w	r2, [r6], #4
  40475a:	6828      	ldr	r0, [r5, #0]
  40475c:	b293      	uxth	r3, r2
  40475e:	b281      	uxth	r1, r0
  404760:	fb07 1303 	mla	r3, r7, r3, r1
  404764:	0c12      	lsrs	r2, r2, #16
  404766:	0c01      	lsrs	r1, r0, #16
  404768:	4423      	add	r3, r4
  40476a:	fb07 1102 	mla	r1, r7, r2, r1
  40476e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404772:	b29b      	uxth	r3, r3
  404774:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404778:	45b6      	cmp	lr, r6
  40477a:	f845 3b04 	str.w	r3, [r5], #4
  40477e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404782:	d8e8      	bhi.n	404756 <__multiply+0x76>
  404784:	602c      	str	r4, [r5, #0]
  404786:	f8dc 5000 	ldr.w	r5, [ip]
  40478a:	0c2d      	lsrs	r5, r5, #16
  40478c:	d01d      	beq.n	4047ca <__multiply+0xea>
  40478e:	f8d9 3000 	ldr.w	r3, [r9]
  404792:	4648      	mov	r0, r9
  404794:	461c      	mov	r4, r3
  404796:	4659      	mov	r1, fp
  404798:	2200      	movs	r2, #0
  40479a:	880e      	ldrh	r6, [r1, #0]
  40479c:	0c24      	lsrs	r4, r4, #16
  40479e:	fb05 4406 	mla	r4, r5, r6, r4
  4047a2:	4422      	add	r2, r4
  4047a4:	b29b      	uxth	r3, r3
  4047a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4047aa:	f840 3b04 	str.w	r3, [r0], #4
  4047ae:	f851 3b04 	ldr.w	r3, [r1], #4
  4047b2:	6804      	ldr	r4, [r0, #0]
  4047b4:	0c1b      	lsrs	r3, r3, #16
  4047b6:	b2a6      	uxth	r6, r4
  4047b8:	fb05 6303 	mla	r3, r5, r3, r6
  4047bc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4047c0:	458e      	cmp	lr, r1
  4047c2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4047c6:	d8e8      	bhi.n	40479a <__multiply+0xba>
  4047c8:	6003      	str	r3, [r0, #0]
  4047ca:	f10c 0c04 	add.w	ip, ip, #4
  4047ce:	45e2      	cmp	sl, ip
  4047d0:	f109 0904 	add.w	r9, r9, #4
  4047d4:	d8b7      	bhi.n	404746 <__multiply+0x66>
  4047d6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4047da:	f1b8 0f00 	cmp.w	r8, #0
  4047de:	dd0b      	ble.n	4047f8 <__multiply+0x118>
  4047e0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4047e4:	f1aa 0a04 	sub.w	sl, sl, #4
  4047e8:	b11b      	cbz	r3, 4047f2 <__multiply+0x112>
  4047ea:	e005      	b.n	4047f8 <__multiply+0x118>
  4047ec:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4047f0:	b913      	cbnz	r3, 4047f8 <__multiply+0x118>
  4047f2:	f1b8 0801 	subs.w	r8, r8, #1
  4047f6:	d1f9      	bne.n	4047ec <__multiply+0x10c>
  4047f8:	9800      	ldr	r0, [sp, #0]
  4047fa:	f8c0 8010 	str.w	r8, [r0, #16]
  4047fe:	b003      	add	sp, #12
  404800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404804 <__pow5mult>:
  404804:	f012 0303 	ands.w	r3, r2, #3
  404808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40480c:	4614      	mov	r4, r2
  40480e:	4607      	mov	r7, r0
  404810:	d12e      	bne.n	404870 <__pow5mult+0x6c>
  404812:	460d      	mov	r5, r1
  404814:	10a4      	asrs	r4, r4, #2
  404816:	d01c      	beq.n	404852 <__pow5mult+0x4e>
  404818:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40481a:	b396      	cbz	r6, 404882 <__pow5mult+0x7e>
  40481c:	07e3      	lsls	r3, r4, #31
  40481e:	f04f 0800 	mov.w	r8, #0
  404822:	d406      	bmi.n	404832 <__pow5mult+0x2e>
  404824:	1064      	asrs	r4, r4, #1
  404826:	d014      	beq.n	404852 <__pow5mult+0x4e>
  404828:	6830      	ldr	r0, [r6, #0]
  40482a:	b1a8      	cbz	r0, 404858 <__pow5mult+0x54>
  40482c:	4606      	mov	r6, r0
  40482e:	07e3      	lsls	r3, r4, #31
  404830:	d5f8      	bpl.n	404824 <__pow5mult+0x20>
  404832:	4632      	mov	r2, r6
  404834:	4629      	mov	r1, r5
  404836:	4638      	mov	r0, r7
  404838:	f7ff ff52 	bl	4046e0 <__multiply>
  40483c:	b1b5      	cbz	r5, 40486c <__pow5mult+0x68>
  40483e:	686a      	ldr	r2, [r5, #4]
  404840:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404842:	1064      	asrs	r4, r4, #1
  404844:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404848:	6029      	str	r1, [r5, #0]
  40484a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40484e:	4605      	mov	r5, r0
  404850:	d1ea      	bne.n	404828 <__pow5mult+0x24>
  404852:	4628      	mov	r0, r5
  404854:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404858:	4632      	mov	r2, r6
  40485a:	4631      	mov	r1, r6
  40485c:	4638      	mov	r0, r7
  40485e:	f7ff ff3f 	bl	4046e0 <__multiply>
  404862:	6030      	str	r0, [r6, #0]
  404864:	f8c0 8000 	str.w	r8, [r0]
  404868:	4606      	mov	r6, r0
  40486a:	e7e0      	b.n	40482e <__pow5mult+0x2a>
  40486c:	4605      	mov	r5, r0
  40486e:	e7d9      	b.n	404824 <__pow5mult+0x20>
  404870:	1e5a      	subs	r2, r3, #1
  404872:	4d0b      	ldr	r5, [pc, #44]	; (4048a0 <__pow5mult+0x9c>)
  404874:	2300      	movs	r3, #0
  404876:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40487a:	f7ff fe97 	bl	4045ac <__multadd>
  40487e:	4605      	mov	r5, r0
  404880:	e7c8      	b.n	404814 <__pow5mult+0x10>
  404882:	2101      	movs	r1, #1
  404884:	4638      	mov	r0, r7
  404886:	f7ff fe61 	bl	40454c <_Balloc>
  40488a:	f240 2171 	movw	r1, #625	; 0x271
  40488e:	2201      	movs	r2, #1
  404890:	2300      	movs	r3, #0
  404892:	6141      	str	r1, [r0, #20]
  404894:	6102      	str	r2, [r0, #16]
  404896:	4606      	mov	r6, r0
  404898:	64b8      	str	r0, [r7, #72]	; 0x48
  40489a:	6003      	str	r3, [r0, #0]
  40489c:	e7be      	b.n	40481c <__pow5mult+0x18>
  40489e:	bf00      	nop
  4048a0:	00406d38 	.word	0x00406d38

004048a4 <__lshift>:
  4048a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4048a8:	4691      	mov	r9, r2
  4048aa:	690a      	ldr	r2, [r1, #16]
  4048ac:	688b      	ldr	r3, [r1, #8]
  4048ae:	ea4f 1469 	mov.w	r4, r9, asr #5
  4048b2:	eb04 0802 	add.w	r8, r4, r2
  4048b6:	f108 0501 	add.w	r5, r8, #1
  4048ba:	429d      	cmp	r5, r3
  4048bc:	460e      	mov	r6, r1
  4048be:	4607      	mov	r7, r0
  4048c0:	6849      	ldr	r1, [r1, #4]
  4048c2:	dd04      	ble.n	4048ce <__lshift+0x2a>
  4048c4:	005b      	lsls	r3, r3, #1
  4048c6:	429d      	cmp	r5, r3
  4048c8:	f101 0101 	add.w	r1, r1, #1
  4048cc:	dcfa      	bgt.n	4048c4 <__lshift+0x20>
  4048ce:	4638      	mov	r0, r7
  4048d0:	f7ff fe3c 	bl	40454c <_Balloc>
  4048d4:	2c00      	cmp	r4, #0
  4048d6:	f100 0314 	add.w	r3, r0, #20
  4048da:	dd06      	ble.n	4048ea <__lshift+0x46>
  4048dc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4048e0:	2100      	movs	r1, #0
  4048e2:	f843 1b04 	str.w	r1, [r3], #4
  4048e6:	429a      	cmp	r2, r3
  4048e8:	d1fb      	bne.n	4048e2 <__lshift+0x3e>
  4048ea:	6934      	ldr	r4, [r6, #16]
  4048ec:	f106 0114 	add.w	r1, r6, #20
  4048f0:	f019 091f 	ands.w	r9, r9, #31
  4048f4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4048f8:	d01d      	beq.n	404936 <__lshift+0x92>
  4048fa:	f1c9 0c20 	rsb	ip, r9, #32
  4048fe:	2200      	movs	r2, #0
  404900:	680c      	ldr	r4, [r1, #0]
  404902:	fa04 f409 	lsl.w	r4, r4, r9
  404906:	4314      	orrs	r4, r2
  404908:	f843 4b04 	str.w	r4, [r3], #4
  40490c:	f851 2b04 	ldr.w	r2, [r1], #4
  404910:	458e      	cmp	lr, r1
  404912:	fa22 f20c 	lsr.w	r2, r2, ip
  404916:	d8f3      	bhi.n	404900 <__lshift+0x5c>
  404918:	601a      	str	r2, [r3, #0]
  40491a:	b10a      	cbz	r2, 404920 <__lshift+0x7c>
  40491c:	f108 0502 	add.w	r5, r8, #2
  404920:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404922:	6872      	ldr	r2, [r6, #4]
  404924:	3d01      	subs	r5, #1
  404926:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40492a:	6105      	str	r5, [r0, #16]
  40492c:	6031      	str	r1, [r6, #0]
  40492e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404932:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404936:	3b04      	subs	r3, #4
  404938:	f851 2b04 	ldr.w	r2, [r1], #4
  40493c:	f843 2f04 	str.w	r2, [r3, #4]!
  404940:	458e      	cmp	lr, r1
  404942:	d8f9      	bhi.n	404938 <__lshift+0x94>
  404944:	e7ec      	b.n	404920 <__lshift+0x7c>
  404946:	bf00      	nop

00404948 <__mcmp>:
  404948:	b430      	push	{r4, r5}
  40494a:	690b      	ldr	r3, [r1, #16]
  40494c:	4605      	mov	r5, r0
  40494e:	6900      	ldr	r0, [r0, #16]
  404950:	1ac0      	subs	r0, r0, r3
  404952:	d10f      	bne.n	404974 <__mcmp+0x2c>
  404954:	009b      	lsls	r3, r3, #2
  404956:	3514      	adds	r5, #20
  404958:	3114      	adds	r1, #20
  40495a:	4419      	add	r1, r3
  40495c:	442b      	add	r3, r5
  40495e:	e001      	b.n	404964 <__mcmp+0x1c>
  404960:	429d      	cmp	r5, r3
  404962:	d207      	bcs.n	404974 <__mcmp+0x2c>
  404964:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404968:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40496c:	4294      	cmp	r4, r2
  40496e:	d0f7      	beq.n	404960 <__mcmp+0x18>
  404970:	d302      	bcc.n	404978 <__mcmp+0x30>
  404972:	2001      	movs	r0, #1
  404974:	bc30      	pop	{r4, r5}
  404976:	4770      	bx	lr
  404978:	f04f 30ff 	mov.w	r0, #4294967295
  40497c:	e7fa      	b.n	404974 <__mcmp+0x2c>
  40497e:	bf00      	nop

00404980 <__mdiff>:
  404980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404984:	690f      	ldr	r7, [r1, #16]
  404986:	460e      	mov	r6, r1
  404988:	6911      	ldr	r1, [r2, #16]
  40498a:	1a7f      	subs	r7, r7, r1
  40498c:	2f00      	cmp	r7, #0
  40498e:	4690      	mov	r8, r2
  404990:	d117      	bne.n	4049c2 <__mdiff+0x42>
  404992:	0089      	lsls	r1, r1, #2
  404994:	f106 0514 	add.w	r5, r6, #20
  404998:	f102 0e14 	add.w	lr, r2, #20
  40499c:	186b      	adds	r3, r5, r1
  40499e:	4471      	add	r1, lr
  4049a0:	e001      	b.n	4049a6 <__mdiff+0x26>
  4049a2:	429d      	cmp	r5, r3
  4049a4:	d25c      	bcs.n	404a60 <__mdiff+0xe0>
  4049a6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4049aa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4049ae:	42a2      	cmp	r2, r4
  4049b0:	d0f7      	beq.n	4049a2 <__mdiff+0x22>
  4049b2:	d25e      	bcs.n	404a72 <__mdiff+0xf2>
  4049b4:	4633      	mov	r3, r6
  4049b6:	462c      	mov	r4, r5
  4049b8:	4646      	mov	r6, r8
  4049ba:	4675      	mov	r5, lr
  4049bc:	4698      	mov	r8, r3
  4049be:	2701      	movs	r7, #1
  4049c0:	e005      	b.n	4049ce <__mdiff+0x4e>
  4049c2:	db58      	blt.n	404a76 <__mdiff+0xf6>
  4049c4:	f106 0514 	add.w	r5, r6, #20
  4049c8:	f108 0414 	add.w	r4, r8, #20
  4049cc:	2700      	movs	r7, #0
  4049ce:	6871      	ldr	r1, [r6, #4]
  4049d0:	f7ff fdbc 	bl	40454c <_Balloc>
  4049d4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4049d8:	6936      	ldr	r6, [r6, #16]
  4049da:	60c7      	str	r7, [r0, #12]
  4049dc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4049e0:	46a6      	mov	lr, r4
  4049e2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4049e6:	f100 0414 	add.w	r4, r0, #20
  4049ea:	2300      	movs	r3, #0
  4049ec:	f85e 1b04 	ldr.w	r1, [lr], #4
  4049f0:	f855 8b04 	ldr.w	r8, [r5], #4
  4049f4:	b28a      	uxth	r2, r1
  4049f6:	fa13 f388 	uxtah	r3, r3, r8
  4049fa:	0c09      	lsrs	r1, r1, #16
  4049fc:	1a9a      	subs	r2, r3, r2
  4049fe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404a02:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404a06:	b292      	uxth	r2, r2
  404a08:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404a0c:	45f4      	cmp	ip, lr
  404a0e:	f844 2b04 	str.w	r2, [r4], #4
  404a12:	ea4f 4323 	mov.w	r3, r3, asr #16
  404a16:	d8e9      	bhi.n	4049ec <__mdiff+0x6c>
  404a18:	42af      	cmp	r7, r5
  404a1a:	d917      	bls.n	404a4c <__mdiff+0xcc>
  404a1c:	46a4      	mov	ip, r4
  404a1e:	46ae      	mov	lr, r5
  404a20:	f85e 2b04 	ldr.w	r2, [lr], #4
  404a24:	fa13 f382 	uxtah	r3, r3, r2
  404a28:	1419      	asrs	r1, r3, #16
  404a2a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404a2e:	b29b      	uxth	r3, r3
  404a30:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404a34:	4577      	cmp	r7, lr
  404a36:	f84c 2b04 	str.w	r2, [ip], #4
  404a3a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404a3e:	d8ef      	bhi.n	404a20 <__mdiff+0xa0>
  404a40:	43ed      	mvns	r5, r5
  404a42:	442f      	add	r7, r5
  404a44:	f027 0703 	bic.w	r7, r7, #3
  404a48:	3704      	adds	r7, #4
  404a4a:	443c      	add	r4, r7
  404a4c:	3c04      	subs	r4, #4
  404a4e:	b922      	cbnz	r2, 404a5a <__mdiff+0xda>
  404a50:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404a54:	3e01      	subs	r6, #1
  404a56:	2b00      	cmp	r3, #0
  404a58:	d0fa      	beq.n	404a50 <__mdiff+0xd0>
  404a5a:	6106      	str	r6, [r0, #16]
  404a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a60:	2100      	movs	r1, #0
  404a62:	f7ff fd73 	bl	40454c <_Balloc>
  404a66:	2201      	movs	r2, #1
  404a68:	2300      	movs	r3, #0
  404a6a:	6102      	str	r2, [r0, #16]
  404a6c:	6143      	str	r3, [r0, #20]
  404a6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a72:	4674      	mov	r4, lr
  404a74:	e7ab      	b.n	4049ce <__mdiff+0x4e>
  404a76:	4633      	mov	r3, r6
  404a78:	f106 0414 	add.w	r4, r6, #20
  404a7c:	f102 0514 	add.w	r5, r2, #20
  404a80:	4616      	mov	r6, r2
  404a82:	2701      	movs	r7, #1
  404a84:	4698      	mov	r8, r3
  404a86:	e7a2      	b.n	4049ce <__mdiff+0x4e>

00404a88 <__d2b>:
  404a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404a8c:	b082      	sub	sp, #8
  404a8e:	2101      	movs	r1, #1
  404a90:	461c      	mov	r4, r3
  404a92:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404a96:	4615      	mov	r5, r2
  404a98:	9e08      	ldr	r6, [sp, #32]
  404a9a:	f7ff fd57 	bl	40454c <_Balloc>
  404a9e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404aa2:	4680      	mov	r8, r0
  404aa4:	b10f      	cbz	r7, 404aaa <__d2b+0x22>
  404aa6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404aaa:	9401      	str	r4, [sp, #4]
  404aac:	b31d      	cbz	r5, 404af6 <__d2b+0x6e>
  404aae:	a802      	add	r0, sp, #8
  404ab0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404ab4:	f7ff fdda 	bl	40466c <__lo0bits>
  404ab8:	2800      	cmp	r0, #0
  404aba:	d134      	bne.n	404b26 <__d2b+0x9e>
  404abc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404ac0:	f8c8 2014 	str.w	r2, [r8, #20]
  404ac4:	2b00      	cmp	r3, #0
  404ac6:	bf0c      	ite	eq
  404ac8:	2101      	moveq	r1, #1
  404aca:	2102      	movne	r1, #2
  404acc:	f8c8 3018 	str.w	r3, [r8, #24]
  404ad0:	f8c8 1010 	str.w	r1, [r8, #16]
  404ad4:	b9df      	cbnz	r7, 404b0e <__d2b+0x86>
  404ad6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404ada:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404ade:	6030      	str	r0, [r6, #0]
  404ae0:	6918      	ldr	r0, [r3, #16]
  404ae2:	f7ff fda3 	bl	40462c <__hi0bits>
  404ae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ae8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404aec:	6018      	str	r0, [r3, #0]
  404aee:	4640      	mov	r0, r8
  404af0:	b002      	add	sp, #8
  404af2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404af6:	a801      	add	r0, sp, #4
  404af8:	f7ff fdb8 	bl	40466c <__lo0bits>
  404afc:	9b01      	ldr	r3, [sp, #4]
  404afe:	f8c8 3014 	str.w	r3, [r8, #20]
  404b02:	2101      	movs	r1, #1
  404b04:	3020      	adds	r0, #32
  404b06:	f8c8 1010 	str.w	r1, [r8, #16]
  404b0a:	2f00      	cmp	r7, #0
  404b0c:	d0e3      	beq.n	404ad6 <__d2b+0x4e>
  404b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404b10:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404b14:	4407      	add	r7, r0
  404b16:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404b1a:	6037      	str	r7, [r6, #0]
  404b1c:	6018      	str	r0, [r3, #0]
  404b1e:	4640      	mov	r0, r8
  404b20:	b002      	add	sp, #8
  404b22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b26:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404b2a:	f1c0 0220 	rsb	r2, r0, #32
  404b2e:	fa03 f202 	lsl.w	r2, r3, r2
  404b32:	430a      	orrs	r2, r1
  404b34:	40c3      	lsrs	r3, r0
  404b36:	9301      	str	r3, [sp, #4]
  404b38:	f8c8 2014 	str.w	r2, [r8, #20]
  404b3c:	e7c2      	b.n	404ac4 <__d2b+0x3c>
  404b3e:	bf00      	nop

00404b40 <_sbrk_r>:
  404b40:	b538      	push	{r3, r4, r5, lr}
  404b42:	4c07      	ldr	r4, [pc, #28]	; (404b60 <_sbrk_r+0x20>)
  404b44:	2300      	movs	r3, #0
  404b46:	4605      	mov	r5, r0
  404b48:	4608      	mov	r0, r1
  404b4a:	6023      	str	r3, [r4, #0]
  404b4c:	f7fc fbd2 	bl	4012f4 <_sbrk>
  404b50:	1c43      	adds	r3, r0, #1
  404b52:	d000      	beq.n	404b56 <_sbrk_r+0x16>
  404b54:	bd38      	pop	{r3, r4, r5, pc}
  404b56:	6823      	ldr	r3, [r4, #0]
  404b58:	2b00      	cmp	r3, #0
  404b5a:	d0fb      	beq.n	404b54 <_sbrk_r+0x14>
  404b5c:	602b      	str	r3, [r5, #0]
  404b5e:	bd38      	pop	{r3, r4, r5, pc}
  404b60:	20400cd0 	.word	0x20400cd0
	...

00404b80 <strlen>:
  404b80:	f890 f000 	pld	[r0]
  404b84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404b88:	f020 0107 	bic.w	r1, r0, #7
  404b8c:	f06f 0c00 	mvn.w	ip, #0
  404b90:	f010 0407 	ands.w	r4, r0, #7
  404b94:	f891 f020 	pld	[r1, #32]
  404b98:	f040 8049 	bne.w	404c2e <strlen+0xae>
  404b9c:	f04f 0400 	mov.w	r4, #0
  404ba0:	f06f 0007 	mvn.w	r0, #7
  404ba4:	e9d1 2300 	ldrd	r2, r3, [r1]
  404ba8:	f891 f040 	pld	[r1, #64]	; 0x40
  404bac:	f100 0008 	add.w	r0, r0, #8
  404bb0:	fa82 f24c 	uadd8	r2, r2, ip
  404bb4:	faa4 f28c 	sel	r2, r4, ip
  404bb8:	fa83 f34c 	uadd8	r3, r3, ip
  404bbc:	faa2 f38c 	sel	r3, r2, ip
  404bc0:	bb4b      	cbnz	r3, 404c16 <strlen+0x96>
  404bc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404bc6:	fa82 f24c 	uadd8	r2, r2, ip
  404bca:	f100 0008 	add.w	r0, r0, #8
  404bce:	faa4 f28c 	sel	r2, r4, ip
  404bd2:	fa83 f34c 	uadd8	r3, r3, ip
  404bd6:	faa2 f38c 	sel	r3, r2, ip
  404bda:	b9e3      	cbnz	r3, 404c16 <strlen+0x96>
  404bdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404be0:	fa82 f24c 	uadd8	r2, r2, ip
  404be4:	f100 0008 	add.w	r0, r0, #8
  404be8:	faa4 f28c 	sel	r2, r4, ip
  404bec:	fa83 f34c 	uadd8	r3, r3, ip
  404bf0:	faa2 f38c 	sel	r3, r2, ip
  404bf4:	b97b      	cbnz	r3, 404c16 <strlen+0x96>
  404bf6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404bfa:	f101 0120 	add.w	r1, r1, #32
  404bfe:	fa82 f24c 	uadd8	r2, r2, ip
  404c02:	f100 0008 	add.w	r0, r0, #8
  404c06:	faa4 f28c 	sel	r2, r4, ip
  404c0a:	fa83 f34c 	uadd8	r3, r3, ip
  404c0e:	faa2 f38c 	sel	r3, r2, ip
  404c12:	2b00      	cmp	r3, #0
  404c14:	d0c6      	beq.n	404ba4 <strlen+0x24>
  404c16:	2a00      	cmp	r2, #0
  404c18:	bf04      	itt	eq
  404c1a:	3004      	addeq	r0, #4
  404c1c:	461a      	moveq	r2, r3
  404c1e:	ba12      	rev	r2, r2
  404c20:	fab2 f282 	clz	r2, r2
  404c24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404c28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404c2c:	4770      	bx	lr
  404c2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  404c32:	f004 0503 	and.w	r5, r4, #3
  404c36:	f1c4 0000 	rsb	r0, r4, #0
  404c3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404c3e:	f014 0f04 	tst.w	r4, #4
  404c42:	f891 f040 	pld	[r1, #64]	; 0x40
  404c46:	fa0c f505 	lsl.w	r5, ip, r5
  404c4a:	ea62 0205 	orn	r2, r2, r5
  404c4e:	bf1c      	itt	ne
  404c50:	ea63 0305 	ornne	r3, r3, r5
  404c54:	4662      	movne	r2, ip
  404c56:	f04f 0400 	mov.w	r4, #0
  404c5a:	e7a9      	b.n	404bb0 <strlen+0x30>

00404c5c <__ssprint_r>:
  404c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404c60:	6893      	ldr	r3, [r2, #8]
  404c62:	b083      	sub	sp, #12
  404c64:	4690      	mov	r8, r2
  404c66:	2b00      	cmp	r3, #0
  404c68:	d070      	beq.n	404d4c <__ssprint_r+0xf0>
  404c6a:	4682      	mov	sl, r0
  404c6c:	460c      	mov	r4, r1
  404c6e:	6817      	ldr	r7, [r2, #0]
  404c70:	688d      	ldr	r5, [r1, #8]
  404c72:	6808      	ldr	r0, [r1, #0]
  404c74:	e042      	b.n	404cfc <__ssprint_r+0xa0>
  404c76:	89a3      	ldrh	r3, [r4, #12]
  404c78:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404c7c:	d02e      	beq.n	404cdc <__ssprint_r+0x80>
  404c7e:	6965      	ldr	r5, [r4, #20]
  404c80:	6921      	ldr	r1, [r4, #16]
  404c82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404c86:	eba0 0b01 	sub.w	fp, r0, r1
  404c8a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404c8e:	f10b 0001 	add.w	r0, fp, #1
  404c92:	106d      	asrs	r5, r5, #1
  404c94:	4430      	add	r0, r6
  404c96:	42a8      	cmp	r0, r5
  404c98:	462a      	mov	r2, r5
  404c9a:	bf84      	itt	hi
  404c9c:	4605      	movhi	r5, r0
  404c9e:	462a      	movhi	r2, r5
  404ca0:	055b      	lsls	r3, r3, #21
  404ca2:	d538      	bpl.n	404d16 <__ssprint_r+0xba>
  404ca4:	4611      	mov	r1, r2
  404ca6:	4650      	mov	r0, sl
  404ca8:	f7ff f8a4 	bl	403df4 <_malloc_r>
  404cac:	2800      	cmp	r0, #0
  404cae:	d03c      	beq.n	404d2a <__ssprint_r+0xce>
  404cb0:	465a      	mov	r2, fp
  404cb2:	6921      	ldr	r1, [r4, #16]
  404cb4:	9001      	str	r0, [sp, #4]
  404cb6:	f7ff fba3 	bl	404400 <memcpy>
  404cba:	89a2      	ldrh	r2, [r4, #12]
  404cbc:	9b01      	ldr	r3, [sp, #4]
  404cbe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404cc2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404cc6:	81a2      	strh	r2, [r4, #12]
  404cc8:	eba5 020b 	sub.w	r2, r5, fp
  404ccc:	eb03 000b 	add.w	r0, r3, fp
  404cd0:	6165      	str	r5, [r4, #20]
  404cd2:	6123      	str	r3, [r4, #16]
  404cd4:	6020      	str	r0, [r4, #0]
  404cd6:	60a2      	str	r2, [r4, #8]
  404cd8:	4635      	mov	r5, r6
  404cda:	46b3      	mov	fp, r6
  404cdc:	465a      	mov	r2, fp
  404cde:	4649      	mov	r1, r9
  404ce0:	f000 fa18 	bl	405114 <memmove>
  404ce4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404ce8:	68a2      	ldr	r2, [r4, #8]
  404cea:	6820      	ldr	r0, [r4, #0]
  404cec:	1b55      	subs	r5, r2, r5
  404cee:	4458      	add	r0, fp
  404cf0:	1b9e      	subs	r6, r3, r6
  404cf2:	60a5      	str	r5, [r4, #8]
  404cf4:	6020      	str	r0, [r4, #0]
  404cf6:	f8c8 6008 	str.w	r6, [r8, #8]
  404cfa:	b33e      	cbz	r6, 404d4c <__ssprint_r+0xf0>
  404cfc:	687e      	ldr	r6, [r7, #4]
  404cfe:	463b      	mov	r3, r7
  404d00:	3708      	adds	r7, #8
  404d02:	2e00      	cmp	r6, #0
  404d04:	d0fa      	beq.n	404cfc <__ssprint_r+0xa0>
  404d06:	42ae      	cmp	r6, r5
  404d08:	f8d3 9000 	ldr.w	r9, [r3]
  404d0c:	46ab      	mov	fp, r5
  404d0e:	d2b2      	bcs.n	404c76 <__ssprint_r+0x1a>
  404d10:	4635      	mov	r5, r6
  404d12:	46b3      	mov	fp, r6
  404d14:	e7e2      	b.n	404cdc <__ssprint_r+0x80>
  404d16:	4650      	mov	r0, sl
  404d18:	f000 fa60 	bl	4051dc <_realloc_r>
  404d1c:	4603      	mov	r3, r0
  404d1e:	2800      	cmp	r0, #0
  404d20:	d1d2      	bne.n	404cc8 <__ssprint_r+0x6c>
  404d22:	6921      	ldr	r1, [r4, #16]
  404d24:	4650      	mov	r0, sl
  404d26:	f000 f8f9 	bl	404f1c <_free_r>
  404d2a:	230c      	movs	r3, #12
  404d2c:	f8ca 3000 	str.w	r3, [sl]
  404d30:	89a3      	ldrh	r3, [r4, #12]
  404d32:	2200      	movs	r2, #0
  404d34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404d38:	f04f 30ff 	mov.w	r0, #4294967295
  404d3c:	81a3      	strh	r3, [r4, #12]
  404d3e:	f8c8 2008 	str.w	r2, [r8, #8]
  404d42:	f8c8 2004 	str.w	r2, [r8, #4]
  404d46:	b003      	add	sp, #12
  404d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d4c:	2000      	movs	r0, #0
  404d4e:	f8c8 0004 	str.w	r0, [r8, #4]
  404d52:	b003      	add	sp, #12
  404d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404d58 <__register_exitproc>:
  404d58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404d5c:	4d2c      	ldr	r5, [pc, #176]	; (404e10 <__register_exitproc+0xb8>)
  404d5e:	4606      	mov	r6, r0
  404d60:	6828      	ldr	r0, [r5, #0]
  404d62:	4698      	mov	r8, r3
  404d64:	460f      	mov	r7, r1
  404d66:	4691      	mov	r9, r2
  404d68:	f7ff f840 	bl	403dec <__retarget_lock_acquire_recursive>
  404d6c:	4b29      	ldr	r3, [pc, #164]	; (404e14 <__register_exitproc+0xbc>)
  404d6e:	681c      	ldr	r4, [r3, #0]
  404d70:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404d74:	2b00      	cmp	r3, #0
  404d76:	d03e      	beq.n	404df6 <__register_exitproc+0x9e>
  404d78:	685a      	ldr	r2, [r3, #4]
  404d7a:	2a1f      	cmp	r2, #31
  404d7c:	dc1c      	bgt.n	404db8 <__register_exitproc+0x60>
  404d7e:	f102 0e01 	add.w	lr, r2, #1
  404d82:	b176      	cbz	r6, 404da2 <__register_exitproc+0x4a>
  404d84:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404d88:	2401      	movs	r4, #1
  404d8a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404d8e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404d92:	4094      	lsls	r4, r2
  404d94:	4320      	orrs	r0, r4
  404d96:	2e02      	cmp	r6, #2
  404d98:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404d9c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404da0:	d023      	beq.n	404dea <__register_exitproc+0x92>
  404da2:	3202      	adds	r2, #2
  404da4:	f8c3 e004 	str.w	lr, [r3, #4]
  404da8:	6828      	ldr	r0, [r5, #0]
  404daa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404dae:	f7ff f81f 	bl	403df0 <__retarget_lock_release_recursive>
  404db2:	2000      	movs	r0, #0
  404db4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404db8:	4b17      	ldr	r3, [pc, #92]	; (404e18 <__register_exitproc+0xc0>)
  404dba:	b30b      	cbz	r3, 404e00 <__register_exitproc+0xa8>
  404dbc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404dc0:	f3af 8000 	nop.w
  404dc4:	4603      	mov	r3, r0
  404dc6:	b1d8      	cbz	r0, 404e00 <__register_exitproc+0xa8>
  404dc8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404dcc:	6002      	str	r2, [r0, #0]
  404dce:	2100      	movs	r1, #0
  404dd0:	6041      	str	r1, [r0, #4]
  404dd2:	460a      	mov	r2, r1
  404dd4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404dd8:	f04f 0e01 	mov.w	lr, #1
  404ddc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404de0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404de4:	2e00      	cmp	r6, #0
  404de6:	d0dc      	beq.n	404da2 <__register_exitproc+0x4a>
  404de8:	e7cc      	b.n	404d84 <__register_exitproc+0x2c>
  404dea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404dee:	430c      	orrs	r4, r1
  404df0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404df4:	e7d5      	b.n	404da2 <__register_exitproc+0x4a>
  404df6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404dfa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404dfe:	e7bb      	b.n	404d78 <__register_exitproc+0x20>
  404e00:	6828      	ldr	r0, [r5, #0]
  404e02:	f7fe fff5 	bl	403df0 <__retarget_lock_release_recursive>
  404e06:	f04f 30ff 	mov.w	r0, #4294967295
  404e0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404e0e:	bf00      	nop
  404e10:	20400450 	.word	0x20400450
  404e14:	00406bcc 	.word	0x00406bcc
  404e18:	00000000 	.word	0x00000000

00404e1c <_calloc_r>:
  404e1c:	b510      	push	{r4, lr}
  404e1e:	fb02 f101 	mul.w	r1, r2, r1
  404e22:	f7fe ffe7 	bl	403df4 <_malloc_r>
  404e26:	4604      	mov	r4, r0
  404e28:	b1d8      	cbz	r0, 404e62 <_calloc_r+0x46>
  404e2a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404e2e:	f022 0203 	bic.w	r2, r2, #3
  404e32:	3a04      	subs	r2, #4
  404e34:	2a24      	cmp	r2, #36	; 0x24
  404e36:	d818      	bhi.n	404e6a <_calloc_r+0x4e>
  404e38:	2a13      	cmp	r2, #19
  404e3a:	d914      	bls.n	404e66 <_calloc_r+0x4a>
  404e3c:	2300      	movs	r3, #0
  404e3e:	2a1b      	cmp	r2, #27
  404e40:	6003      	str	r3, [r0, #0]
  404e42:	6043      	str	r3, [r0, #4]
  404e44:	d916      	bls.n	404e74 <_calloc_r+0x58>
  404e46:	2a24      	cmp	r2, #36	; 0x24
  404e48:	6083      	str	r3, [r0, #8]
  404e4a:	60c3      	str	r3, [r0, #12]
  404e4c:	bf11      	iteee	ne
  404e4e:	f100 0210 	addne.w	r2, r0, #16
  404e52:	6103      	streq	r3, [r0, #16]
  404e54:	6143      	streq	r3, [r0, #20]
  404e56:	f100 0218 	addeq.w	r2, r0, #24
  404e5a:	2300      	movs	r3, #0
  404e5c:	6013      	str	r3, [r2, #0]
  404e5e:	6053      	str	r3, [r2, #4]
  404e60:	6093      	str	r3, [r2, #8]
  404e62:	4620      	mov	r0, r4
  404e64:	bd10      	pop	{r4, pc}
  404e66:	4602      	mov	r2, r0
  404e68:	e7f7      	b.n	404e5a <_calloc_r+0x3e>
  404e6a:	2100      	movs	r1, #0
  404e6c:	f7fc fd26 	bl	4018bc <memset>
  404e70:	4620      	mov	r0, r4
  404e72:	bd10      	pop	{r4, pc}
  404e74:	f100 0208 	add.w	r2, r0, #8
  404e78:	e7ef      	b.n	404e5a <_calloc_r+0x3e>
  404e7a:	bf00      	nop

00404e7c <_malloc_trim_r>:
  404e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404e7e:	4f24      	ldr	r7, [pc, #144]	; (404f10 <_malloc_trim_r+0x94>)
  404e80:	460c      	mov	r4, r1
  404e82:	4606      	mov	r6, r0
  404e84:	f7ff fb56 	bl	404534 <__malloc_lock>
  404e88:	68bb      	ldr	r3, [r7, #8]
  404e8a:	685d      	ldr	r5, [r3, #4]
  404e8c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404e90:	310f      	adds	r1, #15
  404e92:	f025 0503 	bic.w	r5, r5, #3
  404e96:	4429      	add	r1, r5
  404e98:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404e9c:	f021 010f 	bic.w	r1, r1, #15
  404ea0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404ea4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404ea8:	db07      	blt.n	404eba <_malloc_trim_r+0x3e>
  404eaa:	2100      	movs	r1, #0
  404eac:	4630      	mov	r0, r6
  404eae:	f7ff fe47 	bl	404b40 <_sbrk_r>
  404eb2:	68bb      	ldr	r3, [r7, #8]
  404eb4:	442b      	add	r3, r5
  404eb6:	4298      	cmp	r0, r3
  404eb8:	d004      	beq.n	404ec4 <_malloc_trim_r+0x48>
  404eba:	4630      	mov	r0, r6
  404ebc:	f7ff fb40 	bl	404540 <__malloc_unlock>
  404ec0:	2000      	movs	r0, #0
  404ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404ec4:	4261      	negs	r1, r4
  404ec6:	4630      	mov	r0, r6
  404ec8:	f7ff fe3a 	bl	404b40 <_sbrk_r>
  404ecc:	3001      	adds	r0, #1
  404ece:	d00d      	beq.n	404eec <_malloc_trim_r+0x70>
  404ed0:	4b10      	ldr	r3, [pc, #64]	; (404f14 <_malloc_trim_r+0x98>)
  404ed2:	68ba      	ldr	r2, [r7, #8]
  404ed4:	6819      	ldr	r1, [r3, #0]
  404ed6:	1b2d      	subs	r5, r5, r4
  404ed8:	f045 0501 	orr.w	r5, r5, #1
  404edc:	4630      	mov	r0, r6
  404ede:	1b09      	subs	r1, r1, r4
  404ee0:	6055      	str	r5, [r2, #4]
  404ee2:	6019      	str	r1, [r3, #0]
  404ee4:	f7ff fb2c 	bl	404540 <__malloc_unlock>
  404ee8:	2001      	movs	r0, #1
  404eea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404eec:	2100      	movs	r1, #0
  404eee:	4630      	mov	r0, r6
  404ef0:	f7ff fe26 	bl	404b40 <_sbrk_r>
  404ef4:	68ba      	ldr	r2, [r7, #8]
  404ef6:	1a83      	subs	r3, r0, r2
  404ef8:	2b0f      	cmp	r3, #15
  404efa:	ddde      	ble.n	404eba <_malloc_trim_r+0x3e>
  404efc:	4c06      	ldr	r4, [pc, #24]	; (404f18 <_malloc_trim_r+0x9c>)
  404efe:	4905      	ldr	r1, [pc, #20]	; (404f14 <_malloc_trim_r+0x98>)
  404f00:	6824      	ldr	r4, [r4, #0]
  404f02:	f043 0301 	orr.w	r3, r3, #1
  404f06:	1b00      	subs	r0, r0, r4
  404f08:	6053      	str	r3, [r2, #4]
  404f0a:	6008      	str	r0, [r1, #0]
  404f0c:	e7d5      	b.n	404eba <_malloc_trim_r+0x3e>
  404f0e:	bf00      	nop
  404f10:	20400454 	.word	0x20400454
  404f14:	20400c78 	.word	0x20400c78
  404f18:	2040085c 	.word	0x2040085c

00404f1c <_free_r>:
  404f1c:	2900      	cmp	r1, #0
  404f1e:	d044      	beq.n	404faa <_free_r+0x8e>
  404f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f24:	460d      	mov	r5, r1
  404f26:	4680      	mov	r8, r0
  404f28:	f7ff fb04 	bl	404534 <__malloc_lock>
  404f2c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404f30:	4969      	ldr	r1, [pc, #420]	; (4050d8 <_free_r+0x1bc>)
  404f32:	f027 0301 	bic.w	r3, r7, #1
  404f36:	f1a5 0408 	sub.w	r4, r5, #8
  404f3a:	18e2      	adds	r2, r4, r3
  404f3c:	688e      	ldr	r6, [r1, #8]
  404f3e:	6850      	ldr	r0, [r2, #4]
  404f40:	42b2      	cmp	r2, r6
  404f42:	f020 0003 	bic.w	r0, r0, #3
  404f46:	d05e      	beq.n	405006 <_free_r+0xea>
  404f48:	07fe      	lsls	r6, r7, #31
  404f4a:	6050      	str	r0, [r2, #4]
  404f4c:	d40b      	bmi.n	404f66 <_free_r+0x4a>
  404f4e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404f52:	1be4      	subs	r4, r4, r7
  404f54:	f101 0e08 	add.w	lr, r1, #8
  404f58:	68a5      	ldr	r5, [r4, #8]
  404f5a:	4575      	cmp	r5, lr
  404f5c:	443b      	add	r3, r7
  404f5e:	d06d      	beq.n	40503c <_free_r+0x120>
  404f60:	68e7      	ldr	r7, [r4, #12]
  404f62:	60ef      	str	r7, [r5, #12]
  404f64:	60bd      	str	r5, [r7, #8]
  404f66:	1815      	adds	r5, r2, r0
  404f68:	686d      	ldr	r5, [r5, #4]
  404f6a:	07ed      	lsls	r5, r5, #31
  404f6c:	d53e      	bpl.n	404fec <_free_r+0xd0>
  404f6e:	f043 0201 	orr.w	r2, r3, #1
  404f72:	6062      	str	r2, [r4, #4]
  404f74:	50e3      	str	r3, [r4, r3]
  404f76:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404f7a:	d217      	bcs.n	404fac <_free_r+0x90>
  404f7c:	08db      	lsrs	r3, r3, #3
  404f7e:	1c58      	adds	r0, r3, #1
  404f80:	109a      	asrs	r2, r3, #2
  404f82:	684d      	ldr	r5, [r1, #4]
  404f84:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404f88:	60a7      	str	r7, [r4, #8]
  404f8a:	2301      	movs	r3, #1
  404f8c:	4093      	lsls	r3, r2
  404f8e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404f92:	432b      	orrs	r3, r5
  404f94:	3a08      	subs	r2, #8
  404f96:	60e2      	str	r2, [r4, #12]
  404f98:	604b      	str	r3, [r1, #4]
  404f9a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404f9e:	60fc      	str	r4, [r7, #12]
  404fa0:	4640      	mov	r0, r8
  404fa2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404fa6:	f7ff bacb 	b.w	404540 <__malloc_unlock>
  404faa:	4770      	bx	lr
  404fac:	0a5a      	lsrs	r2, r3, #9
  404fae:	2a04      	cmp	r2, #4
  404fb0:	d852      	bhi.n	405058 <_free_r+0x13c>
  404fb2:	099a      	lsrs	r2, r3, #6
  404fb4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404fb8:	00ff      	lsls	r7, r7, #3
  404fba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404fbe:	19c8      	adds	r0, r1, r7
  404fc0:	59ca      	ldr	r2, [r1, r7]
  404fc2:	3808      	subs	r0, #8
  404fc4:	4290      	cmp	r0, r2
  404fc6:	d04f      	beq.n	405068 <_free_r+0x14c>
  404fc8:	6851      	ldr	r1, [r2, #4]
  404fca:	f021 0103 	bic.w	r1, r1, #3
  404fce:	428b      	cmp	r3, r1
  404fd0:	d232      	bcs.n	405038 <_free_r+0x11c>
  404fd2:	6892      	ldr	r2, [r2, #8]
  404fd4:	4290      	cmp	r0, r2
  404fd6:	d1f7      	bne.n	404fc8 <_free_r+0xac>
  404fd8:	68c3      	ldr	r3, [r0, #12]
  404fda:	60a0      	str	r0, [r4, #8]
  404fdc:	60e3      	str	r3, [r4, #12]
  404fde:	609c      	str	r4, [r3, #8]
  404fe0:	60c4      	str	r4, [r0, #12]
  404fe2:	4640      	mov	r0, r8
  404fe4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404fe8:	f7ff baaa 	b.w	404540 <__malloc_unlock>
  404fec:	6895      	ldr	r5, [r2, #8]
  404fee:	4f3b      	ldr	r7, [pc, #236]	; (4050dc <_free_r+0x1c0>)
  404ff0:	42bd      	cmp	r5, r7
  404ff2:	4403      	add	r3, r0
  404ff4:	d040      	beq.n	405078 <_free_r+0x15c>
  404ff6:	68d0      	ldr	r0, [r2, #12]
  404ff8:	60e8      	str	r0, [r5, #12]
  404ffa:	f043 0201 	orr.w	r2, r3, #1
  404ffe:	6085      	str	r5, [r0, #8]
  405000:	6062      	str	r2, [r4, #4]
  405002:	50e3      	str	r3, [r4, r3]
  405004:	e7b7      	b.n	404f76 <_free_r+0x5a>
  405006:	07ff      	lsls	r7, r7, #31
  405008:	4403      	add	r3, r0
  40500a:	d407      	bmi.n	40501c <_free_r+0x100>
  40500c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405010:	1aa4      	subs	r4, r4, r2
  405012:	4413      	add	r3, r2
  405014:	68a0      	ldr	r0, [r4, #8]
  405016:	68e2      	ldr	r2, [r4, #12]
  405018:	60c2      	str	r2, [r0, #12]
  40501a:	6090      	str	r0, [r2, #8]
  40501c:	4a30      	ldr	r2, [pc, #192]	; (4050e0 <_free_r+0x1c4>)
  40501e:	6812      	ldr	r2, [r2, #0]
  405020:	f043 0001 	orr.w	r0, r3, #1
  405024:	4293      	cmp	r3, r2
  405026:	6060      	str	r0, [r4, #4]
  405028:	608c      	str	r4, [r1, #8]
  40502a:	d3b9      	bcc.n	404fa0 <_free_r+0x84>
  40502c:	4b2d      	ldr	r3, [pc, #180]	; (4050e4 <_free_r+0x1c8>)
  40502e:	4640      	mov	r0, r8
  405030:	6819      	ldr	r1, [r3, #0]
  405032:	f7ff ff23 	bl	404e7c <_malloc_trim_r>
  405036:	e7b3      	b.n	404fa0 <_free_r+0x84>
  405038:	4610      	mov	r0, r2
  40503a:	e7cd      	b.n	404fd8 <_free_r+0xbc>
  40503c:	1811      	adds	r1, r2, r0
  40503e:	6849      	ldr	r1, [r1, #4]
  405040:	07c9      	lsls	r1, r1, #31
  405042:	d444      	bmi.n	4050ce <_free_r+0x1b2>
  405044:	6891      	ldr	r1, [r2, #8]
  405046:	68d2      	ldr	r2, [r2, #12]
  405048:	60ca      	str	r2, [r1, #12]
  40504a:	4403      	add	r3, r0
  40504c:	f043 0001 	orr.w	r0, r3, #1
  405050:	6091      	str	r1, [r2, #8]
  405052:	6060      	str	r0, [r4, #4]
  405054:	50e3      	str	r3, [r4, r3]
  405056:	e7a3      	b.n	404fa0 <_free_r+0x84>
  405058:	2a14      	cmp	r2, #20
  40505a:	d816      	bhi.n	40508a <_free_r+0x16e>
  40505c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405060:	00ff      	lsls	r7, r7, #3
  405062:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405066:	e7aa      	b.n	404fbe <_free_r+0xa2>
  405068:	10aa      	asrs	r2, r5, #2
  40506a:	2301      	movs	r3, #1
  40506c:	684d      	ldr	r5, [r1, #4]
  40506e:	4093      	lsls	r3, r2
  405070:	432b      	orrs	r3, r5
  405072:	604b      	str	r3, [r1, #4]
  405074:	4603      	mov	r3, r0
  405076:	e7b0      	b.n	404fda <_free_r+0xbe>
  405078:	f043 0201 	orr.w	r2, r3, #1
  40507c:	614c      	str	r4, [r1, #20]
  40507e:	610c      	str	r4, [r1, #16]
  405080:	60e5      	str	r5, [r4, #12]
  405082:	60a5      	str	r5, [r4, #8]
  405084:	6062      	str	r2, [r4, #4]
  405086:	50e3      	str	r3, [r4, r3]
  405088:	e78a      	b.n	404fa0 <_free_r+0x84>
  40508a:	2a54      	cmp	r2, #84	; 0x54
  40508c:	d806      	bhi.n	40509c <_free_r+0x180>
  40508e:	0b1a      	lsrs	r2, r3, #12
  405090:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405094:	00ff      	lsls	r7, r7, #3
  405096:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40509a:	e790      	b.n	404fbe <_free_r+0xa2>
  40509c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4050a0:	d806      	bhi.n	4050b0 <_free_r+0x194>
  4050a2:	0bda      	lsrs	r2, r3, #15
  4050a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4050a8:	00ff      	lsls	r7, r7, #3
  4050aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4050ae:	e786      	b.n	404fbe <_free_r+0xa2>
  4050b0:	f240 5054 	movw	r0, #1364	; 0x554
  4050b4:	4282      	cmp	r2, r0
  4050b6:	d806      	bhi.n	4050c6 <_free_r+0x1aa>
  4050b8:	0c9a      	lsrs	r2, r3, #18
  4050ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4050be:	00ff      	lsls	r7, r7, #3
  4050c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4050c4:	e77b      	b.n	404fbe <_free_r+0xa2>
  4050c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4050ca:	257e      	movs	r5, #126	; 0x7e
  4050cc:	e777      	b.n	404fbe <_free_r+0xa2>
  4050ce:	f043 0101 	orr.w	r1, r3, #1
  4050d2:	6061      	str	r1, [r4, #4]
  4050d4:	6013      	str	r3, [r2, #0]
  4050d6:	e763      	b.n	404fa0 <_free_r+0x84>
  4050d8:	20400454 	.word	0x20400454
  4050dc:	2040045c 	.word	0x2040045c
  4050e0:	20400860 	.word	0x20400860
  4050e4:	20400ca8 	.word	0x20400ca8

004050e8 <__ascii_mbtowc>:
  4050e8:	b082      	sub	sp, #8
  4050ea:	b149      	cbz	r1, 405100 <__ascii_mbtowc+0x18>
  4050ec:	b15a      	cbz	r2, 405106 <__ascii_mbtowc+0x1e>
  4050ee:	b16b      	cbz	r3, 40510c <__ascii_mbtowc+0x24>
  4050f0:	7813      	ldrb	r3, [r2, #0]
  4050f2:	600b      	str	r3, [r1, #0]
  4050f4:	7812      	ldrb	r2, [r2, #0]
  4050f6:	1c10      	adds	r0, r2, #0
  4050f8:	bf18      	it	ne
  4050fa:	2001      	movne	r0, #1
  4050fc:	b002      	add	sp, #8
  4050fe:	4770      	bx	lr
  405100:	a901      	add	r1, sp, #4
  405102:	2a00      	cmp	r2, #0
  405104:	d1f3      	bne.n	4050ee <__ascii_mbtowc+0x6>
  405106:	4610      	mov	r0, r2
  405108:	b002      	add	sp, #8
  40510a:	4770      	bx	lr
  40510c:	f06f 0001 	mvn.w	r0, #1
  405110:	e7f4      	b.n	4050fc <__ascii_mbtowc+0x14>
  405112:	bf00      	nop

00405114 <memmove>:
  405114:	4288      	cmp	r0, r1
  405116:	b5f0      	push	{r4, r5, r6, r7, lr}
  405118:	d90d      	bls.n	405136 <memmove+0x22>
  40511a:	188b      	adds	r3, r1, r2
  40511c:	4298      	cmp	r0, r3
  40511e:	d20a      	bcs.n	405136 <memmove+0x22>
  405120:	1884      	adds	r4, r0, r2
  405122:	2a00      	cmp	r2, #0
  405124:	d051      	beq.n	4051ca <memmove+0xb6>
  405126:	4622      	mov	r2, r4
  405128:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40512c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405130:	4299      	cmp	r1, r3
  405132:	d1f9      	bne.n	405128 <memmove+0x14>
  405134:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405136:	2a0f      	cmp	r2, #15
  405138:	d948      	bls.n	4051cc <memmove+0xb8>
  40513a:	ea41 0300 	orr.w	r3, r1, r0
  40513e:	079b      	lsls	r3, r3, #30
  405140:	d146      	bne.n	4051d0 <memmove+0xbc>
  405142:	f100 0410 	add.w	r4, r0, #16
  405146:	f101 0310 	add.w	r3, r1, #16
  40514a:	4615      	mov	r5, r2
  40514c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405150:	f844 6c10 	str.w	r6, [r4, #-16]
  405154:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405158:	f844 6c0c 	str.w	r6, [r4, #-12]
  40515c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405160:	f844 6c08 	str.w	r6, [r4, #-8]
  405164:	3d10      	subs	r5, #16
  405166:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40516a:	f844 6c04 	str.w	r6, [r4, #-4]
  40516e:	2d0f      	cmp	r5, #15
  405170:	f103 0310 	add.w	r3, r3, #16
  405174:	f104 0410 	add.w	r4, r4, #16
  405178:	d8e8      	bhi.n	40514c <memmove+0x38>
  40517a:	f1a2 0310 	sub.w	r3, r2, #16
  40517e:	f023 030f 	bic.w	r3, r3, #15
  405182:	f002 0e0f 	and.w	lr, r2, #15
  405186:	3310      	adds	r3, #16
  405188:	f1be 0f03 	cmp.w	lr, #3
  40518c:	4419      	add	r1, r3
  40518e:	4403      	add	r3, r0
  405190:	d921      	bls.n	4051d6 <memmove+0xc2>
  405192:	1f1e      	subs	r6, r3, #4
  405194:	460d      	mov	r5, r1
  405196:	4674      	mov	r4, lr
  405198:	3c04      	subs	r4, #4
  40519a:	f855 7b04 	ldr.w	r7, [r5], #4
  40519e:	f846 7f04 	str.w	r7, [r6, #4]!
  4051a2:	2c03      	cmp	r4, #3
  4051a4:	d8f8      	bhi.n	405198 <memmove+0x84>
  4051a6:	f1ae 0404 	sub.w	r4, lr, #4
  4051aa:	f024 0403 	bic.w	r4, r4, #3
  4051ae:	3404      	adds	r4, #4
  4051b0:	4421      	add	r1, r4
  4051b2:	4423      	add	r3, r4
  4051b4:	f002 0203 	and.w	r2, r2, #3
  4051b8:	b162      	cbz	r2, 4051d4 <memmove+0xc0>
  4051ba:	3b01      	subs	r3, #1
  4051bc:	440a      	add	r2, r1
  4051be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4051c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4051c6:	428a      	cmp	r2, r1
  4051c8:	d1f9      	bne.n	4051be <memmove+0xaa>
  4051ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4051cc:	4603      	mov	r3, r0
  4051ce:	e7f3      	b.n	4051b8 <memmove+0xa4>
  4051d0:	4603      	mov	r3, r0
  4051d2:	e7f2      	b.n	4051ba <memmove+0xa6>
  4051d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4051d6:	4672      	mov	r2, lr
  4051d8:	e7ee      	b.n	4051b8 <memmove+0xa4>
  4051da:	bf00      	nop

004051dc <_realloc_r>:
  4051dc:	2900      	cmp	r1, #0
  4051de:	f000 8095 	beq.w	40530c <_realloc_r+0x130>
  4051e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051e6:	460d      	mov	r5, r1
  4051e8:	4616      	mov	r6, r2
  4051ea:	b083      	sub	sp, #12
  4051ec:	4680      	mov	r8, r0
  4051ee:	f106 070b 	add.w	r7, r6, #11
  4051f2:	f7ff f99f 	bl	404534 <__malloc_lock>
  4051f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4051fa:	2f16      	cmp	r7, #22
  4051fc:	f02e 0403 	bic.w	r4, lr, #3
  405200:	f1a5 0908 	sub.w	r9, r5, #8
  405204:	d83c      	bhi.n	405280 <_realloc_r+0xa4>
  405206:	2210      	movs	r2, #16
  405208:	4617      	mov	r7, r2
  40520a:	42be      	cmp	r6, r7
  40520c:	d83d      	bhi.n	40528a <_realloc_r+0xae>
  40520e:	4294      	cmp	r4, r2
  405210:	da43      	bge.n	40529a <_realloc_r+0xbe>
  405212:	4bc4      	ldr	r3, [pc, #784]	; (405524 <_realloc_r+0x348>)
  405214:	6899      	ldr	r1, [r3, #8]
  405216:	eb09 0004 	add.w	r0, r9, r4
  40521a:	4288      	cmp	r0, r1
  40521c:	f000 80b4 	beq.w	405388 <_realloc_r+0x1ac>
  405220:	6843      	ldr	r3, [r0, #4]
  405222:	f023 0101 	bic.w	r1, r3, #1
  405226:	4401      	add	r1, r0
  405228:	6849      	ldr	r1, [r1, #4]
  40522a:	07c9      	lsls	r1, r1, #31
  40522c:	d54c      	bpl.n	4052c8 <_realloc_r+0xec>
  40522e:	f01e 0f01 	tst.w	lr, #1
  405232:	f000 809b 	beq.w	40536c <_realloc_r+0x190>
  405236:	4631      	mov	r1, r6
  405238:	4640      	mov	r0, r8
  40523a:	f7fe fddb 	bl	403df4 <_malloc_r>
  40523e:	4606      	mov	r6, r0
  405240:	2800      	cmp	r0, #0
  405242:	d03a      	beq.n	4052ba <_realloc_r+0xde>
  405244:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405248:	f023 0301 	bic.w	r3, r3, #1
  40524c:	444b      	add	r3, r9
  40524e:	f1a0 0208 	sub.w	r2, r0, #8
  405252:	429a      	cmp	r2, r3
  405254:	f000 8121 	beq.w	40549a <_realloc_r+0x2be>
  405258:	1f22      	subs	r2, r4, #4
  40525a:	2a24      	cmp	r2, #36	; 0x24
  40525c:	f200 8107 	bhi.w	40546e <_realloc_r+0x292>
  405260:	2a13      	cmp	r2, #19
  405262:	f200 80db 	bhi.w	40541c <_realloc_r+0x240>
  405266:	4603      	mov	r3, r0
  405268:	462a      	mov	r2, r5
  40526a:	6811      	ldr	r1, [r2, #0]
  40526c:	6019      	str	r1, [r3, #0]
  40526e:	6851      	ldr	r1, [r2, #4]
  405270:	6059      	str	r1, [r3, #4]
  405272:	6892      	ldr	r2, [r2, #8]
  405274:	609a      	str	r2, [r3, #8]
  405276:	4629      	mov	r1, r5
  405278:	4640      	mov	r0, r8
  40527a:	f7ff fe4f 	bl	404f1c <_free_r>
  40527e:	e01c      	b.n	4052ba <_realloc_r+0xde>
  405280:	f027 0707 	bic.w	r7, r7, #7
  405284:	2f00      	cmp	r7, #0
  405286:	463a      	mov	r2, r7
  405288:	dabf      	bge.n	40520a <_realloc_r+0x2e>
  40528a:	2600      	movs	r6, #0
  40528c:	230c      	movs	r3, #12
  40528e:	4630      	mov	r0, r6
  405290:	f8c8 3000 	str.w	r3, [r8]
  405294:	b003      	add	sp, #12
  405296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40529a:	462e      	mov	r6, r5
  40529c:	1be3      	subs	r3, r4, r7
  40529e:	2b0f      	cmp	r3, #15
  4052a0:	d81e      	bhi.n	4052e0 <_realloc_r+0x104>
  4052a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4052a6:	f003 0301 	and.w	r3, r3, #1
  4052aa:	4323      	orrs	r3, r4
  4052ac:	444c      	add	r4, r9
  4052ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4052b2:	6863      	ldr	r3, [r4, #4]
  4052b4:	f043 0301 	orr.w	r3, r3, #1
  4052b8:	6063      	str	r3, [r4, #4]
  4052ba:	4640      	mov	r0, r8
  4052bc:	f7ff f940 	bl	404540 <__malloc_unlock>
  4052c0:	4630      	mov	r0, r6
  4052c2:	b003      	add	sp, #12
  4052c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052c8:	f023 0303 	bic.w	r3, r3, #3
  4052cc:	18e1      	adds	r1, r4, r3
  4052ce:	4291      	cmp	r1, r2
  4052d0:	db1f      	blt.n	405312 <_realloc_r+0x136>
  4052d2:	68c3      	ldr	r3, [r0, #12]
  4052d4:	6882      	ldr	r2, [r0, #8]
  4052d6:	462e      	mov	r6, r5
  4052d8:	60d3      	str	r3, [r2, #12]
  4052da:	460c      	mov	r4, r1
  4052dc:	609a      	str	r2, [r3, #8]
  4052de:	e7dd      	b.n	40529c <_realloc_r+0xc0>
  4052e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4052e4:	eb09 0107 	add.w	r1, r9, r7
  4052e8:	f002 0201 	and.w	r2, r2, #1
  4052ec:	444c      	add	r4, r9
  4052ee:	f043 0301 	orr.w	r3, r3, #1
  4052f2:	4317      	orrs	r7, r2
  4052f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4052f8:	604b      	str	r3, [r1, #4]
  4052fa:	6863      	ldr	r3, [r4, #4]
  4052fc:	f043 0301 	orr.w	r3, r3, #1
  405300:	3108      	adds	r1, #8
  405302:	6063      	str	r3, [r4, #4]
  405304:	4640      	mov	r0, r8
  405306:	f7ff fe09 	bl	404f1c <_free_r>
  40530a:	e7d6      	b.n	4052ba <_realloc_r+0xde>
  40530c:	4611      	mov	r1, r2
  40530e:	f7fe bd71 	b.w	403df4 <_malloc_r>
  405312:	f01e 0f01 	tst.w	lr, #1
  405316:	d18e      	bne.n	405236 <_realloc_r+0x5a>
  405318:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40531c:	eba9 0a01 	sub.w	sl, r9, r1
  405320:	f8da 1004 	ldr.w	r1, [sl, #4]
  405324:	f021 0103 	bic.w	r1, r1, #3
  405328:	440b      	add	r3, r1
  40532a:	4423      	add	r3, r4
  40532c:	4293      	cmp	r3, r2
  40532e:	db25      	blt.n	40537c <_realloc_r+0x1a0>
  405330:	68c2      	ldr	r2, [r0, #12]
  405332:	6881      	ldr	r1, [r0, #8]
  405334:	4656      	mov	r6, sl
  405336:	60ca      	str	r2, [r1, #12]
  405338:	6091      	str	r1, [r2, #8]
  40533a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40533e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405342:	1f22      	subs	r2, r4, #4
  405344:	2a24      	cmp	r2, #36	; 0x24
  405346:	60c1      	str	r1, [r0, #12]
  405348:	6088      	str	r0, [r1, #8]
  40534a:	f200 8094 	bhi.w	405476 <_realloc_r+0x29a>
  40534e:	2a13      	cmp	r2, #19
  405350:	d96f      	bls.n	405432 <_realloc_r+0x256>
  405352:	6829      	ldr	r1, [r5, #0]
  405354:	f8ca 1008 	str.w	r1, [sl, #8]
  405358:	6869      	ldr	r1, [r5, #4]
  40535a:	f8ca 100c 	str.w	r1, [sl, #12]
  40535e:	2a1b      	cmp	r2, #27
  405360:	f200 80a2 	bhi.w	4054a8 <_realloc_r+0x2cc>
  405364:	3508      	adds	r5, #8
  405366:	f10a 0210 	add.w	r2, sl, #16
  40536a:	e063      	b.n	405434 <_realloc_r+0x258>
  40536c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405370:	eba9 0a03 	sub.w	sl, r9, r3
  405374:	f8da 1004 	ldr.w	r1, [sl, #4]
  405378:	f021 0103 	bic.w	r1, r1, #3
  40537c:	1863      	adds	r3, r4, r1
  40537e:	4293      	cmp	r3, r2
  405380:	f6ff af59 	blt.w	405236 <_realloc_r+0x5a>
  405384:	4656      	mov	r6, sl
  405386:	e7d8      	b.n	40533a <_realloc_r+0x15e>
  405388:	6841      	ldr	r1, [r0, #4]
  40538a:	f021 0b03 	bic.w	fp, r1, #3
  40538e:	44a3      	add	fp, r4
  405390:	f107 0010 	add.w	r0, r7, #16
  405394:	4583      	cmp	fp, r0
  405396:	da56      	bge.n	405446 <_realloc_r+0x26a>
  405398:	f01e 0f01 	tst.w	lr, #1
  40539c:	f47f af4b 	bne.w	405236 <_realloc_r+0x5a>
  4053a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4053a4:	eba9 0a01 	sub.w	sl, r9, r1
  4053a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4053ac:	f021 0103 	bic.w	r1, r1, #3
  4053b0:	448b      	add	fp, r1
  4053b2:	4558      	cmp	r0, fp
  4053b4:	dce2      	bgt.n	40537c <_realloc_r+0x1a0>
  4053b6:	4656      	mov	r6, sl
  4053b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4053bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4053c0:	1f22      	subs	r2, r4, #4
  4053c2:	2a24      	cmp	r2, #36	; 0x24
  4053c4:	60c1      	str	r1, [r0, #12]
  4053c6:	6088      	str	r0, [r1, #8]
  4053c8:	f200 808f 	bhi.w	4054ea <_realloc_r+0x30e>
  4053cc:	2a13      	cmp	r2, #19
  4053ce:	f240 808a 	bls.w	4054e6 <_realloc_r+0x30a>
  4053d2:	6829      	ldr	r1, [r5, #0]
  4053d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4053d8:	6869      	ldr	r1, [r5, #4]
  4053da:	f8ca 100c 	str.w	r1, [sl, #12]
  4053de:	2a1b      	cmp	r2, #27
  4053e0:	f200 808a 	bhi.w	4054f8 <_realloc_r+0x31c>
  4053e4:	3508      	adds	r5, #8
  4053e6:	f10a 0210 	add.w	r2, sl, #16
  4053ea:	6829      	ldr	r1, [r5, #0]
  4053ec:	6011      	str	r1, [r2, #0]
  4053ee:	6869      	ldr	r1, [r5, #4]
  4053f0:	6051      	str	r1, [r2, #4]
  4053f2:	68a9      	ldr	r1, [r5, #8]
  4053f4:	6091      	str	r1, [r2, #8]
  4053f6:	eb0a 0107 	add.w	r1, sl, r7
  4053fa:	ebab 0207 	sub.w	r2, fp, r7
  4053fe:	f042 0201 	orr.w	r2, r2, #1
  405402:	6099      	str	r1, [r3, #8]
  405404:	604a      	str	r2, [r1, #4]
  405406:	f8da 3004 	ldr.w	r3, [sl, #4]
  40540a:	f003 0301 	and.w	r3, r3, #1
  40540e:	431f      	orrs	r7, r3
  405410:	4640      	mov	r0, r8
  405412:	f8ca 7004 	str.w	r7, [sl, #4]
  405416:	f7ff f893 	bl	404540 <__malloc_unlock>
  40541a:	e751      	b.n	4052c0 <_realloc_r+0xe4>
  40541c:	682b      	ldr	r3, [r5, #0]
  40541e:	6003      	str	r3, [r0, #0]
  405420:	686b      	ldr	r3, [r5, #4]
  405422:	6043      	str	r3, [r0, #4]
  405424:	2a1b      	cmp	r2, #27
  405426:	d82d      	bhi.n	405484 <_realloc_r+0x2a8>
  405428:	f100 0308 	add.w	r3, r0, #8
  40542c:	f105 0208 	add.w	r2, r5, #8
  405430:	e71b      	b.n	40526a <_realloc_r+0x8e>
  405432:	4632      	mov	r2, r6
  405434:	6829      	ldr	r1, [r5, #0]
  405436:	6011      	str	r1, [r2, #0]
  405438:	6869      	ldr	r1, [r5, #4]
  40543a:	6051      	str	r1, [r2, #4]
  40543c:	68a9      	ldr	r1, [r5, #8]
  40543e:	6091      	str	r1, [r2, #8]
  405440:	461c      	mov	r4, r3
  405442:	46d1      	mov	r9, sl
  405444:	e72a      	b.n	40529c <_realloc_r+0xc0>
  405446:	eb09 0107 	add.w	r1, r9, r7
  40544a:	ebab 0b07 	sub.w	fp, fp, r7
  40544e:	f04b 0201 	orr.w	r2, fp, #1
  405452:	6099      	str	r1, [r3, #8]
  405454:	604a      	str	r2, [r1, #4]
  405456:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40545a:	f003 0301 	and.w	r3, r3, #1
  40545e:	431f      	orrs	r7, r3
  405460:	4640      	mov	r0, r8
  405462:	f845 7c04 	str.w	r7, [r5, #-4]
  405466:	f7ff f86b 	bl	404540 <__malloc_unlock>
  40546a:	462e      	mov	r6, r5
  40546c:	e728      	b.n	4052c0 <_realloc_r+0xe4>
  40546e:	4629      	mov	r1, r5
  405470:	f7ff fe50 	bl	405114 <memmove>
  405474:	e6ff      	b.n	405276 <_realloc_r+0x9a>
  405476:	4629      	mov	r1, r5
  405478:	4630      	mov	r0, r6
  40547a:	461c      	mov	r4, r3
  40547c:	46d1      	mov	r9, sl
  40547e:	f7ff fe49 	bl	405114 <memmove>
  405482:	e70b      	b.n	40529c <_realloc_r+0xc0>
  405484:	68ab      	ldr	r3, [r5, #8]
  405486:	6083      	str	r3, [r0, #8]
  405488:	68eb      	ldr	r3, [r5, #12]
  40548a:	60c3      	str	r3, [r0, #12]
  40548c:	2a24      	cmp	r2, #36	; 0x24
  40548e:	d017      	beq.n	4054c0 <_realloc_r+0x2e4>
  405490:	f100 0310 	add.w	r3, r0, #16
  405494:	f105 0210 	add.w	r2, r5, #16
  405498:	e6e7      	b.n	40526a <_realloc_r+0x8e>
  40549a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40549e:	f023 0303 	bic.w	r3, r3, #3
  4054a2:	441c      	add	r4, r3
  4054a4:	462e      	mov	r6, r5
  4054a6:	e6f9      	b.n	40529c <_realloc_r+0xc0>
  4054a8:	68a9      	ldr	r1, [r5, #8]
  4054aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4054ae:	68e9      	ldr	r1, [r5, #12]
  4054b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4054b4:	2a24      	cmp	r2, #36	; 0x24
  4054b6:	d00c      	beq.n	4054d2 <_realloc_r+0x2f6>
  4054b8:	3510      	adds	r5, #16
  4054ba:	f10a 0218 	add.w	r2, sl, #24
  4054be:	e7b9      	b.n	405434 <_realloc_r+0x258>
  4054c0:	692b      	ldr	r3, [r5, #16]
  4054c2:	6103      	str	r3, [r0, #16]
  4054c4:	696b      	ldr	r3, [r5, #20]
  4054c6:	6143      	str	r3, [r0, #20]
  4054c8:	f105 0218 	add.w	r2, r5, #24
  4054cc:	f100 0318 	add.w	r3, r0, #24
  4054d0:	e6cb      	b.n	40526a <_realloc_r+0x8e>
  4054d2:	692a      	ldr	r2, [r5, #16]
  4054d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4054d8:	696a      	ldr	r2, [r5, #20]
  4054da:	f8ca 201c 	str.w	r2, [sl, #28]
  4054de:	3518      	adds	r5, #24
  4054e0:	f10a 0220 	add.w	r2, sl, #32
  4054e4:	e7a6      	b.n	405434 <_realloc_r+0x258>
  4054e6:	4632      	mov	r2, r6
  4054e8:	e77f      	b.n	4053ea <_realloc_r+0x20e>
  4054ea:	4629      	mov	r1, r5
  4054ec:	4630      	mov	r0, r6
  4054ee:	9301      	str	r3, [sp, #4]
  4054f0:	f7ff fe10 	bl	405114 <memmove>
  4054f4:	9b01      	ldr	r3, [sp, #4]
  4054f6:	e77e      	b.n	4053f6 <_realloc_r+0x21a>
  4054f8:	68a9      	ldr	r1, [r5, #8]
  4054fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4054fe:	68e9      	ldr	r1, [r5, #12]
  405500:	f8ca 1014 	str.w	r1, [sl, #20]
  405504:	2a24      	cmp	r2, #36	; 0x24
  405506:	d003      	beq.n	405510 <_realloc_r+0x334>
  405508:	3510      	adds	r5, #16
  40550a:	f10a 0218 	add.w	r2, sl, #24
  40550e:	e76c      	b.n	4053ea <_realloc_r+0x20e>
  405510:	692a      	ldr	r2, [r5, #16]
  405512:	f8ca 2018 	str.w	r2, [sl, #24]
  405516:	696a      	ldr	r2, [r5, #20]
  405518:	f8ca 201c 	str.w	r2, [sl, #28]
  40551c:	3518      	adds	r5, #24
  40551e:	f10a 0220 	add.w	r2, sl, #32
  405522:	e762      	b.n	4053ea <_realloc_r+0x20e>
  405524:	20400454 	.word	0x20400454

00405528 <__ascii_wctomb>:
  405528:	b121      	cbz	r1, 405534 <__ascii_wctomb+0xc>
  40552a:	2aff      	cmp	r2, #255	; 0xff
  40552c:	d804      	bhi.n	405538 <__ascii_wctomb+0x10>
  40552e:	700a      	strb	r2, [r1, #0]
  405530:	2001      	movs	r0, #1
  405532:	4770      	bx	lr
  405534:	4608      	mov	r0, r1
  405536:	4770      	bx	lr
  405538:	238a      	movs	r3, #138	; 0x8a
  40553a:	6003      	str	r3, [r0, #0]
  40553c:	f04f 30ff 	mov.w	r0, #4294967295
  405540:	4770      	bx	lr
  405542:	bf00      	nop

00405544 <__aeabi_drsub>:
  405544:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405548:	e002      	b.n	405550 <__adddf3>
  40554a:	bf00      	nop

0040554c <__aeabi_dsub>:
  40554c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405550 <__adddf3>:
  405550:	b530      	push	{r4, r5, lr}
  405552:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405556:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40555a:	ea94 0f05 	teq	r4, r5
  40555e:	bf08      	it	eq
  405560:	ea90 0f02 	teqeq	r0, r2
  405564:	bf1f      	itttt	ne
  405566:	ea54 0c00 	orrsne.w	ip, r4, r0
  40556a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40556e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405572:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405576:	f000 80e2 	beq.w	40573e <__adddf3+0x1ee>
  40557a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40557e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405582:	bfb8      	it	lt
  405584:	426d      	neglt	r5, r5
  405586:	dd0c      	ble.n	4055a2 <__adddf3+0x52>
  405588:	442c      	add	r4, r5
  40558a:	ea80 0202 	eor.w	r2, r0, r2
  40558e:	ea81 0303 	eor.w	r3, r1, r3
  405592:	ea82 0000 	eor.w	r0, r2, r0
  405596:	ea83 0101 	eor.w	r1, r3, r1
  40559a:	ea80 0202 	eor.w	r2, r0, r2
  40559e:	ea81 0303 	eor.w	r3, r1, r3
  4055a2:	2d36      	cmp	r5, #54	; 0x36
  4055a4:	bf88      	it	hi
  4055a6:	bd30      	pophi	{r4, r5, pc}
  4055a8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4055ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4055b0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4055b4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4055b8:	d002      	beq.n	4055c0 <__adddf3+0x70>
  4055ba:	4240      	negs	r0, r0
  4055bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4055c0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4055c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4055c8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4055cc:	d002      	beq.n	4055d4 <__adddf3+0x84>
  4055ce:	4252      	negs	r2, r2
  4055d0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4055d4:	ea94 0f05 	teq	r4, r5
  4055d8:	f000 80a7 	beq.w	40572a <__adddf3+0x1da>
  4055dc:	f1a4 0401 	sub.w	r4, r4, #1
  4055e0:	f1d5 0e20 	rsbs	lr, r5, #32
  4055e4:	db0d      	blt.n	405602 <__adddf3+0xb2>
  4055e6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4055ea:	fa22 f205 	lsr.w	r2, r2, r5
  4055ee:	1880      	adds	r0, r0, r2
  4055f0:	f141 0100 	adc.w	r1, r1, #0
  4055f4:	fa03 f20e 	lsl.w	r2, r3, lr
  4055f8:	1880      	adds	r0, r0, r2
  4055fa:	fa43 f305 	asr.w	r3, r3, r5
  4055fe:	4159      	adcs	r1, r3
  405600:	e00e      	b.n	405620 <__adddf3+0xd0>
  405602:	f1a5 0520 	sub.w	r5, r5, #32
  405606:	f10e 0e20 	add.w	lr, lr, #32
  40560a:	2a01      	cmp	r2, #1
  40560c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405610:	bf28      	it	cs
  405612:	f04c 0c02 	orrcs.w	ip, ip, #2
  405616:	fa43 f305 	asr.w	r3, r3, r5
  40561a:	18c0      	adds	r0, r0, r3
  40561c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405620:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405624:	d507      	bpl.n	405636 <__adddf3+0xe6>
  405626:	f04f 0e00 	mov.w	lr, #0
  40562a:	f1dc 0c00 	rsbs	ip, ip, #0
  40562e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405632:	eb6e 0101 	sbc.w	r1, lr, r1
  405636:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40563a:	d31b      	bcc.n	405674 <__adddf3+0x124>
  40563c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405640:	d30c      	bcc.n	40565c <__adddf3+0x10c>
  405642:	0849      	lsrs	r1, r1, #1
  405644:	ea5f 0030 	movs.w	r0, r0, rrx
  405648:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40564c:	f104 0401 	add.w	r4, r4, #1
  405650:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405654:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405658:	f080 809a 	bcs.w	405790 <__adddf3+0x240>
  40565c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405660:	bf08      	it	eq
  405662:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405666:	f150 0000 	adcs.w	r0, r0, #0
  40566a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40566e:	ea41 0105 	orr.w	r1, r1, r5
  405672:	bd30      	pop	{r4, r5, pc}
  405674:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405678:	4140      	adcs	r0, r0
  40567a:	eb41 0101 	adc.w	r1, r1, r1
  40567e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405682:	f1a4 0401 	sub.w	r4, r4, #1
  405686:	d1e9      	bne.n	40565c <__adddf3+0x10c>
  405688:	f091 0f00 	teq	r1, #0
  40568c:	bf04      	itt	eq
  40568e:	4601      	moveq	r1, r0
  405690:	2000      	moveq	r0, #0
  405692:	fab1 f381 	clz	r3, r1
  405696:	bf08      	it	eq
  405698:	3320      	addeq	r3, #32
  40569a:	f1a3 030b 	sub.w	r3, r3, #11
  40569e:	f1b3 0220 	subs.w	r2, r3, #32
  4056a2:	da0c      	bge.n	4056be <__adddf3+0x16e>
  4056a4:	320c      	adds	r2, #12
  4056a6:	dd08      	ble.n	4056ba <__adddf3+0x16a>
  4056a8:	f102 0c14 	add.w	ip, r2, #20
  4056ac:	f1c2 020c 	rsb	r2, r2, #12
  4056b0:	fa01 f00c 	lsl.w	r0, r1, ip
  4056b4:	fa21 f102 	lsr.w	r1, r1, r2
  4056b8:	e00c      	b.n	4056d4 <__adddf3+0x184>
  4056ba:	f102 0214 	add.w	r2, r2, #20
  4056be:	bfd8      	it	le
  4056c0:	f1c2 0c20 	rsble	ip, r2, #32
  4056c4:	fa01 f102 	lsl.w	r1, r1, r2
  4056c8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4056cc:	bfdc      	itt	le
  4056ce:	ea41 010c 	orrle.w	r1, r1, ip
  4056d2:	4090      	lslle	r0, r2
  4056d4:	1ae4      	subs	r4, r4, r3
  4056d6:	bfa2      	ittt	ge
  4056d8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4056dc:	4329      	orrge	r1, r5
  4056de:	bd30      	popge	{r4, r5, pc}
  4056e0:	ea6f 0404 	mvn.w	r4, r4
  4056e4:	3c1f      	subs	r4, #31
  4056e6:	da1c      	bge.n	405722 <__adddf3+0x1d2>
  4056e8:	340c      	adds	r4, #12
  4056ea:	dc0e      	bgt.n	40570a <__adddf3+0x1ba>
  4056ec:	f104 0414 	add.w	r4, r4, #20
  4056f0:	f1c4 0220 	rsb	r2, r4, #32
  4056f4:	fa20 f004 	lsr.w	r0, r0, r4
  4056f8:	fa01 f302 	lsl.w	r3, r1, r2
  4056fc:	ea40 0003 	orr.w	r0, r0, r3
  405700:	fa21 f304 	lsr.w	r3, r1, r4
  405704:	ea45 0103 	orr.w	r1, r5, r3
  405708:	bd30      	pop	{r4, r5, pc}
  40570a:	f1c4 040c 	rsb	r4, r4, #12
  40570e:	f1c4 0220 	rsb	r2, r4, #32
  405712:	fa20 f002 	lsr.w	r0, r0, r2
  405716:	fa01 f304 	lsl.w	r3, r1, r4
  40571a:	ea40 0003 	orr.w	r0, r0, r3
  40571e:	4629      	mov	r1, r5
  405720:	bd30      	pop	{r4, r5, pc}
  405722:	fa21 f004 	lsr.w	r0, r1, r4
  405726:	4629      	mov	r1, r5
  405728:	bd30      	pop	{r4, r5, pc}
  40572a:	f094 0f00 	teq	r4, #0
  40572e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405732:	bf06      	itte	eq
  405734:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405738:	3401      	addeq	r4, #1
  40573a:	3d01      	subne	r5, #1
  40573c:	e74e      	b.n	4055dc <__adddf3+0x8c>
  40573e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405742:	bf18      	it	ne
  405744:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405748:	d029      	beq.n	40579e <__adddf3+0x24e>
  40574a:	ea94 0f05 	teq	r4, r5
  40574e:	bf08      	it	eq
  405750:	ea90 0f02 	teqeq	r0, r2
  405754:	d005      	beq.n	405762 <__adddf3+0x212>
  405756:	ea54 0c00 	orrs.w	ip, r4, r0
  40575a:	bf04      	itt	eq
  40575c:	4619      	moveq	r1, r3
  40575e:	4610      	moveq	r0, r2
  405760:	bd30      	pop	{r4, r5, pc}
  405762:	ea91 0f03 	teq	r1, r3
  405766:	bf1e      	ittt	ne
  405768:	2100      	movne	r1, #0
  40576a:	2000      	movne	r0, #0
  40576c:	bd30      	popne	{r4, r5, pc}
  40576e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405772:	d105      	bne.n	405780 <__adddf3+0x230>
  405774:	0040      	lsls	r0, r0, #1
  405776:	4149      	adcs	r1, r1
  405778:	bf28      	it	cs
  40577a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40577e:	bd30      	pop	{r4, r5, pc}
  405780:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405784:	bf3c      	itt	cc
  405786:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40578a:	bd30      	popcc	{r4, r5, pc}
  40578c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405790:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405794:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405798:	f04f 0000 	mov.w	r0, #0
  40579c:	bd30      	pop	{r4, r5, pc}
  40579e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4057a2:	bf1a      	itte	ne
  4057a4:	4619      	movne	r1, r3
  4057a6:	4610      	movne	r0, r2
  4057a8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4057ac:	bf1c      	itt	ne
  4057ae:	460b      	movne	r3, r1
  4057b0:	4602      	movne	r2, r0
  4057b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4057b6:	bf06      	itte	eq
  4057b8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4057bc:	ea91 0f03 	teqeq	r1, r3
  4057c0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4057c4:	bd30      	pop	{r4, r5, pc}
  4057c6:	bf00      	nop

004057c8 <__aeabi_ui2d>:
  4057c8:	f090 0f00 	teq	r0, #0
  4057cc:	bf04      	itt	eq
  4057ce:	2100      	moveq	r1, #0
  4057d0:	4770      	bxeq	lr
  4057d2:	b530      	push	{r4, r5, lr}
  4057d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4057d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4057dc:	f04f 0500 	mov.w	r5, #0
  4057e0:	f04f 0100 	mov.w	r1, #0
  4057e4:	e750      	b.n	405688 <__adddf3+0x138>
  4057e6:	bf00      	nop

004057e8 <__aeabi_i2d>:
  4057e8:	f090 0f00 	teq	r0, #0
  4057ec:	bf04      	itt	eq
  4057ee:	2100      	moveq	r1, #0
  4057f0:	4770      	bxeq	lr
  4057f2:	b530      	push	{r4, r5, lr}
  4057f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4057f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4057fc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405800:	bf48      	it	mi
  405802:	4240      	negmi	r0, r0
  405804:	f04f 0100 	mov.w	r1, #0
  405808:	e73e      	b.n	405688 <__adddf3+0x138>
  40580a:	bf00      	nop

0040580c <__aeabi_f2d>:
  40580c:	0042      	lsls	r2, r0, #1
  40580e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405812:	ea4f 0131 	mov.w	r1, r1, rrx
  405816:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40581a:	bf1f      	itttt	ne
  40581c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405820:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405824:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405828:	4770      	bxne	lr
  40582a:	f092 0f00 	teq	r2, #0
  40582e:	bf14      	ite	ne
  405830:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405834:	4770      	bxeq	lr
  405836:	b530      	push	{r4, r5, lr}
  405838:	f44f 7460 	mov.w	r4, #896	; 0x380
  40583c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405840:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405844:	e720      	b.n	405688 <__adddf3+0x138>
  405846:	bf00      	nop

00405848 <__aeabi_ul2d>:
  405848:	ea50 0201 	orrs.w	r2, r0, r1
  40584c:	bf08      	it	eq
  40584e:	4770      	bxeq	lr
  405850:	b530      	push	{r4, r5, lr}
  405852:	f04f 0500 	mov.w	r5, #0
  405856:	e00a      	b.n	40586e <__aeabi_l2d+0x16>

00405858 <__aeabi_l2d>:
  405858:	ea50 0201 	orrs.w	r2, r0, r1
  40585c:	bf08      	it	eq
  40585e:	4770      	bxeq	lr
  405860:	b530      	push	{r4, r5, lr}
  405862:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405866:	d502      	bpl.n	40586e <__aeabi_l2d+0x16>
  405868:	4240      	negs	r0, r0
  40586a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40586e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405872:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405876:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40587a:	f43f aedc 	beq.w	405636 <__adddf3+0xe6>
  40587e:	f04f 0203 	mov.w	r2, #3
  405882:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405886:	bf18      	it	ne
  405888:	3203      	addne	r2, #3
  40588a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40588e:	bf18      	it	ne
  405890:	3203      	addne	r2, #3
  405892:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405896:	f1c2 0320 	rsb	r3, r2, #32
  40589a:	fa00 fc03 	lsl.w	ip, r0, r3
  40589e:	fa20 f002 	lsr.w	r0, r0, r2
  4058a2:	fa01 fe03 	lsl.w	lr, r1, r3
  4058a6:	ea40 000e 	orr.w	r0, r0, lr
  4058aa:	fa21 f102 	lsr.w	r1, r1, r2
  4058ae:	4414      	add	r4, r2
  4058b0:	e6c1      	b.n	405636 <__adddf3+0xe6>
  4058b2:	bf00      	nop

004058b4 <__aeabi_dmul>:
  4058b4:	b570      	push	{r4, r5, r6, lr}
  4058b6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4058ba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4058be:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4058c2:	bf1d      	ittte	ne
  4058c4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4058c8:	ea94 0f0c 	teqne	r4, ip
  4058cc:	ea95 0f0c 	teqne	r5, ip
  4058d0:	f000 f8de 	bleq	405a90 <__aeabi_dmul+0x1dc>
  4058d4:	442c      	add	r4, r5
  4058d6:	ea81 0603 	eor.w	r6, r1, r3
  4058da:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4058de:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4058e2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4058e6:	bf18      	it	ne
  4058e8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4058ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4058f0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4058f4:	d038      	beq.n	405968 <__aeabi_dmul+0xb4>
  4058f6:	fba0 ce02 	umull	ip, lr, r0, r2
  4058fa:	f04f 0500 	mov.w	r5, #0
  4058fe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405902:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405906:	fbe0 e503 	umlal	lr, r5, r0, r3
  40590a:	f04f 0600 	mov.w	r6, #0
  40590e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405912:	f09c 0f00 	teq	ip, #0
  405916:	bf18      	it	ne
  405918:	f04e 0e01 	orrne.w	lr, lr, #1
  40591c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405920:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405924:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405928:	d204      	bcs.n	405934 <__aeabi_dmul+0x80>
  40592a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40592e:	416d      	adcs	r5, r5
  405930:	eb46 0606 	adc.w	r6, r6, r6
  405934:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405938:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40593c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405940:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405944:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405948:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40594c:	bf88      	it	hi
  40594e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405952:	d81e      	bhi.n	405992 <__aeabi_dmul+0xde>
  405954:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405958:	bf08      	it	eq
  40595a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40595e:	f150 0000 	adcs.w	r0, r0, #0
  405962:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405966:	bd70      	pop	{r4, r5, r6, pc}
  405968:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40596c:	ea46 0101 	orr.w	r1, r6, r1
  405970:	ea40 0002 	orr.w	r0, r0, r2
  405974:	ea81 0103 	eor.w	r1, r1, r3
  405978:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40597c:	bfc2      	ittt	gt
  40597e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405982:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405986:	bd70      	popgt	{r4, r5, r6, pc}
  405988:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40598c:	f04f 0e00 	mov.w	lr, #0
  405990:	3c01      	subs	r4, #1
  405992:	f300 80ab 	bgt.w	405aec <__aeabi_dmul+0x238>
  405996:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40599a:	bfde      	ittt	le
  40599c:	2000      	movle	r0, #0
  40599e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4059a2:	bd70      	pople	{r4, r5, r6, pc}
  4059a4:	f1c4 0400 	rsb	r4, r4, #0
  4059a8:	3c20      	subs	r4, #32
  4059aa:	da35      	bge.n	405a18 <__aeabi_dmul+0x164>
  4059ac:	340c      	adds	r4, #12
  4059ae:	dc1b      	bgt.n	4059e8 <__aeabi_dmul+0x134>
  4059b0:	f104 0414 	add.w	r4, r4, #20
  4059b4:	f1c4 0520 	rsb	r5, r4, #32
  4059b8:	fa00 f305 	lsl.w	r3, r0, r5
  4059bc:	fa20 f004 	lsr.w	r0, r0, r4
  4059c0:	fa01 f205 	lsl.w	r2, r1, r5
  4059c4:	ea40 0002 	orr.w	r0, r0, r2
  4059c8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4059cc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4059d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4059d4:	fa21 f604 	lsr.w	r6, r1, r4
  4059d8:	eb42 0106 	adc.w	r1, r2, r6
  4059dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4059e0:	bf08      	it	eq
  4059e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4059e6:	bd70      	pop	{r4, r5, r6, pc}
  4059e8:	f1c4 040c 	rsb	r4, r4, #12
  4059ec:	f1c4 0520 	rsb	r5, r4, #32
  4059f0:	fa00 f304 	lsl.w	r3, r0, r4
  4059f4:	fa20 f005 	lsr.w	r0, r0, r5
  4059f8:	fa01 f204 	lsl.w	r2, r1, r4
  4059fc:	ea40 0002 	orr.w	r0, r0, r2
  405a00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405a04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405a08:	f141 0100 	adc.w	r1, r1, #0
  405a0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405a10:	bf08      	it	eq
  405a12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405a16:	bd70      	pop	{r4, r5, r6, pc}
  405a18:	f1c4 0520 	rsb	r5, r4, #32
  405a1c:	fa00 f205 	lsl.w	r2, r0, r5
  405a20:	ea4e 0e02 	orr.w	lr, lr, r2
  405a24:	fa20 f304 	lsr.w	r3, r0, r4
  405a28:	fa01 f205 	lsl.w	r2, r1, r5
  405a2c:	ea43 0302 	orr.w	r3, r3, r2
  405a30:	fa21 f004 	lsr.w	r0, r1, r4
  405a34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405a38:	fa21 f204 	lsr.w	r2, r1, r4
  405a3c:	ea20 0002 	bic.w	r0, r0, r2
  405a40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405a44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405a48:	bf08      	it	eq
  405a4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405a4e:	bd70      	pop	{r4, r5, r6, pc}
  405a50:	f094 0f00 	teq	r4, #0
  405a54:	d10f      	bne.n	405a76 <__aeabi_dmul+0x1c2>
  405a56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405a5a:	0040      	lsls	r0, r0, #1
  405a5c:	eb41 0101 	adc.w	r1, r1, r1
  405a60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405a64:	bf08      	it	eq
  405a66:	3c01      	subeq	r4, #1
  405a68:	d0f7      	beq.n	405a5a <__aeabi_dmul+0x1a6>
  405a6a:	ea41 0106 	orr.w	r1, r1, r6
  405a6e:	f095 0f00 	teq	r5, #0
  405a72:	bf18      	it	ne
  405a74:	4770      	bxne	lr
  405a76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405a7a:	0052      	lsls	r2, r2, #1
  405a7c:	eb43 0303 	adc.w	r3, r3, r3
  405a80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405a84:	bf08      	it	eq
  405a86:	3d01      	subeq	r5, #1
  405a88:	d0f7      	beq.n	405a7a <__aeabi_dmul+0x1c6>
  405a8a:	ea43 0306 	orr.w	r3, r3, r6
  405a8e:	4770      	bx	lr
  405a90:	ea94 0f0c 	teq	r4, ip
  405a94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405a98:	bf18      	it	ne
  405a9a:	ea95 0f0c 	teqne	r5, ip
  405a9e:	d00c      	beq.n	405aba <__aeabi_dmul+0x206>
  405aa0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405aa4:	bf18      	it	ne
  405aa6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405aaa:	d1d1      	bne.n	405a50 <__aeabi_dmul+0x19c>
  405aac:	ea81 0103 	eor.w	r1, r1, r3
  405ab0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ab4:	f04f 0000 	mov.w	r0, #0
  405ab8:	bd70      	pop	{r4, r5, r6, pc}
  405aba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405abe:	bf06      	itte	eq
  405ac0:	4610      	moveq	r0, r2
  405ac2:	4619      	moveq	r1, r3
  405ac4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405ac8:	d019      	beq.n	405afe <__aeabi_dmul+0x24a>
  405aca:	ea94 0f0c 	teq	r4, ip
  405ace:	d102      	bne.n	405ad6 <__aeabi_dmul+0x222>
  405ad0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405ad4:	d113      	bne.n	405afe <__aeabi_dmul+0x24a>
  405ad6:	ea95 0f0c 	teq	r5, ip
  405ada:	d105      	bne.n	405ae8 <__aeabi_dmul+0x234>
  405adc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405ae0:	bf1c      	itt	ne
  405ae2:	4610      	movne	r0, r2
  405ae4:	4619      	movne	r1, r3
  405ae6:	d10a      	bne.n	405afe <__aeabi_dmul+0x24a>
  405ae8:	ea81 0103 	eor.w	r1, r1, r3
  405aec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405af0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405af4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405af8:	f04f 0000 	mov.w	r0, #0
  405afc:	bd70      	pop	{r4, r5, r6, pc}
  405afe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405b02:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405b06:	bd70      	pop	{r4, r5, r6, pc}

00405b08 <__aeabi_ddiv>:
  405b08:	b570      	push	{r4, r5, r6, lr}
  405b0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405b0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405b12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405b16:	bf1d      	ittte	ne
  405b18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405b1c:	ea94 0f0c 	teqne	r4, ip
  405b20:	ea95 0f0c 	teqne	r5, ip
  405b24:	f000 f8a7 	bleq	405c76 <__aeabi_ddiv+0x16e>
  405b28:	eba4 0405 	sub.w	r4, r4, r5
  405b2c:	ea81 0e03 	eor.w	lr, r1, r3
  405b30:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405b34:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405b38:	f000 8088 	beq.w	405c4c <__aeabi_ddiv+0x144>
  405b3c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405b40:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405b44:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405b48:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405b4c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405b50:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405b54:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405b58:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405b5c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405b60:	429d      	cmp	r5, r3
  405b62:	bf08      	it	eq
  405b64:	4296      	cmpeq	r6, r2
  405b66:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405b6a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405b6e:	d202      	bcs.n	405b76 <__aeabi_ddiv+0x6e>
  405b70:	085b      	lsrs	r3, r3, #1
  405b72:	ea4f 0232 	mov.w	r2, r2, rrx
  405b76:	1ab6      	subs	r6, r6, r2
  405b78:	eb65 0503 	sbc.w	r5, r5, r3
  405b7c:	085b      	lsrs	r3, r3, #1
  405b7e:	ea4f 0232 	mov.w	r2, r2, rrx
  405b82:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405b86:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405b8a:	ebb6 0e02 	subs.w	lr, r6, r2
  405b8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405b92:	bf22      	ittt	cs
  405b94:	1ab6      	subcs	r6, r6, r2
  405b96:	4675      	movcs	r5, lr
  405b98:	ea40 000c 	orrcs.w	r0, r0, ip
  405b9c:	085b      	lsrs	r3, r3, #1
  405b9e:	ea4f 0232 	mov.w	r2, r2, rrx
  405ba2:	ebb6 0e02 	subs.w	lr, r6, r2
  405ba6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405baa:	bf22      	ittt	cs
  405bac:	1ab6      	subcs	r6, r6, r2
  405bae:	4675      	movcs	r5, lr
  405bb0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405bb4:	085b      	lsrs	r3, r3, #1
  405bb6:	ea4f 0232 	mov.w	r2, r2, rrx
  405bba:	ebb6 0e02 	subs.w	lr, r6, r2
  405bbe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405bc2:	bf22      	ittt	cs
  405bc4:	1ab6      	subcs	r6, r6, r2
  405bc6:	4675      	movcs	r5, lr
  405bc8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405bcc:	085b      	lsrs	r3, r3, #1
  405bce:	ea4f 0232 	mov.w	r2, r2, rrx
  405bd2:	ebb6 0e02 	subs.w	lr, r6, r2
  405bd6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405bda:	bf22      	ittt	cs
  405bdc:	1ab6      	subcs	r6, r6, r2
  405bde:	4675      	movcs	r5, lr
  405be0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405be4:	ea55 0e06 	orrs.w	lr, r5, r6
  405be8:	d018      	beq.n	405c1c <__aeabi_ddiv+0x114>
  405bea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405bee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405bf2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405bf6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405bfa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405bfe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405c02:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405c06:	d1c0      	bne.n	405b8a <__aeabi_ddiv+0x82>
  405c08:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405c0c:	d10b      	bne.n	405c26 <__aeabi_ddiv+0x11e>
  405c0e:	ea41 0100 	orr.w	r1, r1, r0
  405c12:	f04f 0000 	mov.w	r0, #0
  405c16:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405c1a:	e7b6      	b.n	405b8a <__aeabi_ddiv+0x82>
  405c1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405c20:	bf04      	itt	eq
  405c22:	4301      	orreq	r1, r0
  405c24:	2000      	moveq	r0, #0
  405c26:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405c2a:	bf88      	it	hi
  405c2c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405c30:	f63f aeaf 	bhi.w	405992 <__aeabi_dmul+0xde>
  405c34:	ebb5 0c03 	subs.w	ip, r5, r3
  405c38:	bf04      	itt	eq
  405c3a:	ebb6 0c02 	subseq.w	ip, r6, r2
  405c3e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405c42:	f150 0000 	adcs.w	r0, r0, #0
  405c46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405c4a:	bd70      	pop	{r4, r5, r6, pc}
  405c4c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405c50:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405c54:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405c58:	bfc2      	ittt	gt
  405c5a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405c5e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405c62:	bd70      	popgt	{r4, r5, r6, pc}
  405c64:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405c68:	f04f 0e00 	mov.w	lr, #0
  405c6c:	3c01      	subs	r4, #1
  405c6e:	e690      	b.n	405992 <__aeabi_dmul+0xde>
  405c70:	ea45 0e06 	orr.w	lr, r5, r6
  405c74:	e68d      	b.n	405992 <__aeabi_dmul+0xde>
  405c76:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405c7a:	ea94 0f0c 	teq	r4, ip
  405c7e:	bf08      	it	eq
  405c80:	ea95 0f0c 	teqeq	r5, ip
  405c84:	f43f af3b 	beq.w	405afe <__aeabi_dmul+0x24a>
  405c88:	ea94 0f0c 	teq	r4, ip
  405c8c:	d10a      	bne.n	405ca4 <__aeabi_ddiv+0x19c>
  405c8e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405c92:	f47f af34 	bne.w	405afe <__aeabi_dmul+0x24a>
  405c96:	ea95 0f0c 	teq	r5, ip
  405c9a:	f47f af25 	bne.w	405ae8 <__aeabi_dmul+0x234>
  405c9e:	4610      	mov	r0, r2
  405ca0:	4619      	mov	r1, r3
  405ca2:	e72c      	b.n	405afe <__aeabi_dmul+0x24a>
  405ca4:	ea95 0f0c 	teq	r5, ip
  405ca8:	d106      	bne.n	405cb8 <__aeabi_ddiv+0x1b0>
  405caa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405cae:	f43f aefd 	beq.w	405aac <__aeabi_dmul+0x1f8>
  405cb2:	4610      	mov	r0, r2
  405cb4:	4619      	mov	r1, r3
  405cb6:	e722      	b.n	405afe <__aeabi_dmul+0x24a>
  405cb8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405cbc:	bf18      	it	ne
  405cbe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405cc2:	f47f aec5 	bne.w	405a50 <__aeabi_dmul+0x19c>
  405cc6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405cca:	f47f af0d 	bne.w	405ae8 <__aeabi_dmul+0x234>
  405cce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405cd2:	f47f aeeb 	bne.w	405aac <__aeabi_dmul+0x1f8>
  405cd6:	e712      	b.n	405afe <__aeabi_dmul+0x24a>

00405cd8 <__gedf2>:
  405cd8:	f04f 3cff 	mov.w	ip, #4294967295
  405cdc:	e006      	b.n	405cec <__cmpdf2+0x4>
  405cde:	bf00      	nop

00405ce0 <__ledf2>:
  405ce0:	f04f 0c01 	mov.w	ip, #1
  405ce4:	e002      	b.n	405cec <__cmpdf2+0x4>
  405ce6:	bf00      	nop

00405ce8 <__cmpdf2>:
  405ce8:	f04f 0c01 	mov.w	ip, #1
  405cec:	f84d cd04 	str.w	ip, [sp, #-4]!
  405cf0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405cf4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405cf8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405cfc:	bf18      	it	ne
  405cfe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405d02:	d01b      	beq.n	405d3c <__cmpdf2+0x54>
  405d04:	b001      	add	sp, #4
  405d06:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405d0a:	bf0c      	ite	eq
  405d0c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405d10:	ea91 0f03 	teqne	r1, r3
  405d14:	bf02      	ittt	eq
  405d16:	ea90 0f02 	teqeq	r0, r2
  405d1a:	2000      	moveq	r0, #0
  405d1c:	4770      	bxeq	lr
  405d1e:	f110 0f00 	cmn.w	r0, #0
  405d22:	ea91 0f03 	teq	r1, r3
  405d26:	bf58      	it	pl
  405d28:	4299      	cmppl	r1, r3
  405d2a:	bf08      	it	eq
  405d2c:	4290      	cmpeq	r0, r2
  405d2e:	bf2c      	ite	cs
  405d30:	17d8      	asrcs	r0, r3, #31
  405d32:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405d36:	f040 0001 	orr.w	r0, r0, #1
  405d3a:	4770      	bx	lr
  405d3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405d40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d44:	d102      	bne.n	405d4c <__cmpdf2+0x64>
  405d46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405d4a:	d107      	bne.n	405d5c <__cmpdf2+0x74>
  405d4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405d50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d54:	d1d6      	bne.n	405d04 <__cmpdf2+0x1c>
  405d56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405d5a:	d0d3      	beq.n	405d04 <__cmpdf2+0x1c>
  405d5c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405d60:	4770      	bx	lr
  405d62:	bf00      	nop

00405d64 <__aeabi_cdrcmple>:
  405d64:	4684      	mov	ip, r0
  405d66:	4610      	mov	r0, r2
  405d68:	4662      	mov	r2, ip
  405d6a:	468c      	mov	ip, r1
  405d6c:	4619      	mov	r1, r3
  405d6e:	4663      	mov	r3, ip
  405d70:	e000      	b.n	405d74 <__aeabi_cdcmpeq>
  405d72:	bf00      	nop

00405d74 <__aeabi_cdcmpeq>:
  405d74:	b501      	push	{r0, lr}
  405d76:	f7ff ffb7 	bl	405ce8 <__cmpdf2>
  405d7a:	2800      	cmp	r0, #0
  405d7c:	bf48      	it	mi
  405d7e:	f110 0f00 	cmnmi.w	r0, #0
  405d82:	bd01      	pop	{r0, pc}

00405d84 <__aeabi_dcmpeq>:
  405d84:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d88:	f7ff fff4 	bl	405d74 <__aeabi_cdcmpeq>
  405d8c:	bf0c      	ite	eq
  405d8e:	2001      	moveq	r0, #1
  405d90:	2000      	movne	r0, #0
  405d92:	f85d fb08 	ldr.w	pc, [sp], #8
  405d96:	bf00      	nop

00405d98 <__aeabi_dcmplt>:
  405d98:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d9c:	f7ff ffea 	bl	405d74 <__aeabi_cdcmpeq>
  405da0:	bf34      	ite	cc
  405da2:	2001      	movcc	r0, #1
  405da4:	2000      	movcs	r0, #0
  405da6:	f85d fb08 	ldr.w	pc, [sp], #8
  405daa:	bf00      	nop

00405dac <__aeabi_dcmple>:
  405dac:	f84d ed08 	str.w	lr, [sp, #-8]!
  405db0:	f7ff ffe0 	bl	405d74 <__aeabi_cdcmpeq>
  405db4:	bf94      	ite	ls
  405db6:	2001      	movls	r0, #1
  405db8:	2000      	movhi	r0, #0
  405dba:	f85d fb08 	ldr.w	pc, [sp], #8
  405dbe:	bf00      	nop

00405dc0 <__aeabi_dcmpge>:
  405dc0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405dc4:	f7ff ffce 	bl	405d64 <__aeabi_cdrcmple>
  405dc8:	bf94      	ite	ls
  405dca:	2001      	movls	r0, #1
  405dcc:	2000      	movhi	r0, #0
  405dce:	f85d fb08 	ldr.w	pc, [sp], #8
  405dd2:	bf00      	nop

00405dd4 <__aeabi_dcmpgt>:
  405dd4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405dd8:	f7ff ffc4 	bl	405d64 <__aeabi_cdrcmple>
  405ddc:	bf34      	ite	cc
  405dde:	2001      	movcc	r0, #1
  405de0:	2000      	movcs	r0, #0
  405de2:	f85d fb08 	ldr.w	pc, [sp], #8
  405de6:	bf00      	nop

00405de8 <__aeabi_dcmpun>:
  405de8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405dec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405df0:	d102      	bne.n	405df8 <__aeabi_dcmpun+0x10>
  405df2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405df6:	d10a      	bne.n	405e0e <__aeabi_dcmpun+0x26>
  405df8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405dfc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e00:	d102      	bne.n	405e08 <__aeabi_dcmpun+0x20>
  405e02:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e06:	d102      	bne.n	405e0e <__aeabi_dcmpun+0x26>
  405e08:	f04f 0000 	mov.w	r0, #0
  405e0c:	4770      	bx	lr
  405e0e:	f04f 0001 	mov.w	r0, #1
  405e12:	4770      	bx	lr

00405e14 <__aeabi_d2iz>:
  405e14:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405e18:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405e1c:	d215      	bcs.n	405e4a <__aeabi_d2iz+0x36>
  405e1e:	d511      	bpl.n	405e44 <__aeabi_d2iz+0x30>
  405e20:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405e24:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405e28:	d912      	bls.n	405e50 <__aeabi_d2iz+0x3c>
  405e2a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405e2e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405e32:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405e36:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405e3a:	fa23 f002 	lsr.w	r0, r3, r2
  405e3e:	bf18      	it	ne
  405e40:	4240      	negne	r0, r0
  405e42:	4770      	bx	lr
  405e44:	f04f 0000 	mov.w	r0, #0
  405e48:	4770      	bx	lr
  405e4a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405e4e:	d105      	bne.n	405e5c <__aeabi_d2iz+0x48>
  405e50:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405e54:	bf08      	it	eq
  405e56:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405e5a:	4770      	bx	lr
  405e5c:	f04f 0000 	mov.w	r0, #0
  405e60:	4770      	bx	lr
  405e62:	bf00      	nop

00405e64 <__aeabi_uldivmod>:
  405e64:	b953      	cbnz	r3, 405e7c <__aeabi_uldivmod+0x18>
  405e66:	b94a      	cbnz	r2, 405e7c <__aeabi_uldivmod+0x18>
  405e68:	2900      	cmp	r1, #0
  405e6a:	bf08      	it	eq
  405e6c:	2800      	cmpeq	r0, #0
  405e6e:	bf1c      	itt	ne
  405e70:	f04f 31ff 	movne.w	r1, #4294967295
  405e74:	f04f 30ff 	movne.w	r0, #4294967295
  405e78:	f000 b97a 	b.w	406170 <__aeabi_idiv0>
  405e7c:	f1ad 0c08 	sub.w	ip, sp, #8
  405e80:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405e84:	f000 f806 	bl	405e94 <__udivmoddi4>
  405e88:	f8dd e004 	ldr.w	lr, [sp, #4]
  405e8c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405e90:	b004      	add	sp, #16
  405e92:	4770      	bx	lr

00405e94 <__udivmoddi4>:
  405e94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405e98:	468c      	mov	ip, r1
  405e9a:	460d      	mov	r5, r1
  405e9c:	4604      	mov	r4, r0
  405e9e:	9e08      	ldr	r6, [sp, #32]
  405ea0:	2b00      	cmp	r3, #0
  405ea2:	d151      	bne.n	405f48 <__udivmoddi4+0xb4>
  405ea4:	428a      	cmp	r2, r1
  405ea6:	4617      	mov	r7, r2
  405ea8:	d96d      	bls.n	405f86 <__udivmoddi4+0xf2>
  405eaa:	fab2 fe82 	clz	lr, r2
  405eae:	f1be 0f00 	cmp.w	lr, #0
  405eb2:	d00b      	beq.n	405ecc <__udivmoddi4+0x38>
  405eb4:	f1ce 0c20 	rsb	ip, lr, #32
  405eb8:	fa01 f50e 	lsl.w	r5, r1, lr
  405ebc:	fa20 fc0c 	lsr.w	ip, r0, ip
  405ec0:	fa02 f70e 	lsl.w	r7, r2, lr
  405ec4:	ea4c 0c05 	orr.w	ip, ip, r5
  405ec8:	fa00 f40e 	lsl.w	r4, r0, lr
  405ecc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405ed0:	0c25      	lsrs	r5, r4, #16
  405ed2:	fbbc f8fa 	udiv	r8, ip, sl
  405ed6:	fa1f f987 	uxth.w	r9, r7
  405eda:	fb0a cc18 	mls	ip, sl, r8, ip
  405ede:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405ee2:	fb08 f309 	mul.w	r3, r8, r9
  405ee6:	42ab      	cmp	r3, r5
  405ee8:	d90a      	bls.n	405f00 <__udivmoddi4+0x6c>
  405eea:	19ed      	adds	r5, r5, r7
  405eec:	f108 32ff 	add.w	r2, r8, #4294967295
  405ef0:	f080 8123 	bcs.w	40613a <__udivmoddi4+0x2a6>
  405ef4:	42ab      	cmp	r3, r5
  405ef6:	f240 8120 	bls.w	40613a <__udivmoddi4+0x2a6>
  405efa:	f1a8 0802 	sub.w	r8, r8, #2
  405efe:	443d      	add	r5, r7
  405f00:	1aed      	subs	r5, r5, r3
  405f02:	b2a4      	uxth	r4, r4
  405f04:	fbb5 f0fa 	udiv	r0, r5, sl
  405f08:	fb0a 5510 	mls	r5, sl, r0, r5
  405f0c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405f10:	fb00 f909 	mul.w	r9, r0, r9
  405f14:	45a1      	cmp	r9, r4
  405f16:	d909      	bls.n	405f2c <__udivmoddi4+0x98>
  405f18:	19e4      	adds	r4, r4, r7
  405f1a:	f100 33ff 	add.w	r3, r0, #4294967295
  405f1e:	f080 810a 	bcs.w	406136 <__udivmoddi4+0x2a2>
  405f22:	45a1      	cmp	r9, r4
  405f24:	f240 8107 	bls.w	406136 <__udivmoddi4+0x2a2>
  405f28:	3802      	subs	r0, #2
  405f2a:	443c      	add	r4, r7
  405f2c:	eba4 0409 	sub.w	r4, r4, r9
  405f30:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405f34:	2100      	movs	r1, #0
  405f36:	2e00      	cmp	r6, #0
  405f38:	d061      	beq.n	405ffe <__udivmoddi4+0x16a>
  405f3a:	fa24 f40e 	lsr.w	r4, r4, lr
  405f3e:	2300      	movs	r3, #0
  405f40:	6034      	str	r4, [r6, #0]
  405f42:	6073      	str	r3, [r6, #4]
  405f44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f48:	428b      	cmp	r3, r1
  405f4a:	d907      	bls.n	405f5c <__udivmoddi4+0xc8>
  405f4c:	2e00      	cmp	r6, #0
  405f4e:	d054      	beq.n	405ffa <__udivmoddi4+0x166>
  405f50:	2100      	movs	r1, #0
  405f52:	e886 0021 	stmia.w	r6, {r0, r5}
  405f56:	4608      	mov	r0, r1
  405f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f5c:	fab3 f183 	clz	r1, r3
  405f60:	2900      	cmp	r1, #0
  405f62:	f040 808e 	bne.w	406082 <__udivmoddi4+0x1ee>
  405f66:	42ab      	cmp	r3, r5
  405f68:	d302      	bcc.n	405f70 <__udivmoddi4+0xdc>
  405f6a:	4282      	cmp	r2, r0
  405f6c:	f200 80fa 	bhi.w	406164 <__udivmoddi4+0x2d0>
  405f70:	1a84      	subs	r4, r0, r2
  405f72:	eb65 0503 	sbc.w	r5, r5, r3
  405f76:	2001      	movs	r0, #1
  405f78:	46ac      	mov	ip, r5
  405f7a:	2e00      	cmp	r6, #0
  405f7c:	d03f      	beq.n	405ffe <__udivmoddi4+0x16a>
  405f7e:	e886 1010 	stmia.w	r6, {r4, ip}
  405f82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f86:	b912      	cbnz	r2, 405f8e <__udivmoddi4+0xfa>
  405f88:	2701      	movs	r7, #1
  405f8a:	fbb7 f7f2 	udiv	r7, r7, r2
  405f8e:	fab7 fe87 	clz	lr, r7
  405f92:	f1be 0f00 	cmp.w	lr, #0
  405f96:	d134      	bne.n	406002 <__udivmoddi4+0x16e>
  405f98:	1beb      	subs	r3, r5, r7
  405f9a:	0c3a      	lsrs	r2, r7, #16
  405f9c:	fa1f fc87 	uxth.w	ip, r7
  405fa0:	2101      	movs	r1, #1
  405fa2:	fbb3 f8f2 	udiv	r8, r3, r2
  405fa6:	0c25      	lsrs	r5, r4, #16
  405fa8:	fb02 3318 	mls	r3, r2, r8, r3
  405fac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405fb0:	fb0c f308 	mul.w	r3, ip, r8
  405fb4:	42ab      	cmp	r3, r5
  405fb6:	d907      	bls.n	405fc8 <__udivmoddi4+0x134>
  405fb8:	19ed      	adds	r5, r5, r7
  405fba:	f108 30ff 	add.w	r0, r8, #4294967295
  405fbe:	d202      	bcs.n	405fc6 <__udivmoddi4+0x132>
  405fc0:	42ab      	cmp	r3, r5
  405fc2:	f200 80d1 	bhi.w	406168 <__udivmoddi4+0x2d4>
  405fc6:	4680      	mov	r8, r0
  405fc8:	1aed      	subs	r5, r5, r3
  405fca:	b2a3      	uxth	r3, r4
  405fcc:	fbb5 f0f2 	udiv	r0, r5, r2
  405fd0:	fb02 5510 	mls	r5, r2, r0, r5
  405fd4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405fd8:	fb0c fc00 	mul.w	ip, ip, r0
  405fdc:	45a4      	cmp	ip, r4
  405fde:	d907      	bls.n	405ff0 <__udivmoddi4+0x15c>
  405fe0:	19e4      	adds	r4, r4, r7
  405fe2:	f100 33ff 	add.w	r3, r0, #4294967295
  405fe6:	d202      	bcs.n	405fee <__udivmoddi4+0x15a>
  405fe8:	45a4      	cmp	ip, r4
  405fea:	f200 80b8 	bhi.w	40615e <__udivmoddi4+0x2ca>
  405fee:	4618      	mov	r0, r3
  405ff0:	eba4 040c 	sub.w	r4, r4, ip
  405ff4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405ff8:	e79d      	b.n	405f36 <__udivmoddi4+0xa2>
  405ffa:	4631      	mov	r1, r6
  405ffc:	4630      	mov	r0, r6
  405ffe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406002:	f1ce 0420 	rsb	r4, lr, #32
  406006:	fa05 f30e 	lsl.w	r3, r5, lr
  40600a:	fa07 f70e 	lsl.w	r7, r7, lr
  40600e:	fa20 f804 	lsr.w	r8, r0, r4
  406012:	0c3a      	lsrs	r2, r7, #16
  406014:	fa25 f404 	lsr.w	r4, r5, r4
  406018:	ea48 0803 	orr.w	r8, r8, r3
  40601c:	fbb4 f1f2 	udiv	r1, r4, r2
  406020:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406024:	fb02 4411 	mls	r4, r2, r1, r4
  406028:	fa1f fc87 	uxth.w	ip, r7
  40602c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406030:	fb01 f30c 	mul.w	r3, r1, ip
  406034:	42ab      	cmp	r3, r5
  406036:	fa00 f40e 	lsl.w	r4, r0, lr
  40603a:	d909      	bls.n	406050 <__udivmoddi4+0x1bc>
  40603c:	19ed      	adds	r5, r5, r7
  40603e:	f101 30ff 	add.w	r0, r1, #4294967295
  406042:	f080 808a 	bcs.w	40615a <__udivmoddi4+0x2c6>
  406046:	42ab      	cmp	r3, r5
  406048:	f240 8087 	bls.w	40615a <__udivmoddi4+0x2c6>
  40604c:	3902      	subs	r1, #2
  40604e:	443d      	add	r5, r7
  406050:	1aeb      	subs	r3, r5, r3
  406052:	fa1f f588 	uxth.w	r5, r8
  406056:	fbb3 f0f2 	udiv	r0, r3, r2
  40605a:	fb02 3310 	mls	r3, r2, r0, r3
  40605e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406062:	fb00 f30c 	mul.w	r3, r0, ip
  406066:	42ab      	cmp	r3, r5
  406068:	d907      	bls.n	40607a <__udivmoddi4+0x1e6>
  40606a:	19ed      	adds	r5, r5, r7
  40606c:	f100 38ff 	add.w	r8, r0, #4294967295
  406070:	d26f      	bcs.n	406152 <__udivmoddi4+0x2be>
  406072:	42ab      	cmp	r3, r5
  406074:	d96d      	bls.n	406152 <__udivmoddi4+0x2be>
  406076:	3802      	subs	r0, #2
  406078:	443d      	add	r5, r7
  40607a:	1aeb      	subs	r3, r5, r3
  40607c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406080:	e78f      	b.n	405fa2 <__udivmoddi4+0x10e>
  406082:	f1c1 0720 	rsb	r7, r1, #32
  406086:	fa22 f807 	lsr.w	r8, r2, r7
  40608a:	408b      	lsls	r3, r1
  40608c:	fa05 f401 	lsl.w	r4, r5, r1
  406090:	ea48 0303 	orr.w	r3, r8, r3
  406094:	fa20 fe07 	lsr.w	lr, r0, r7
  406098:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40609c:	40fd      	lsrs	r5, r7
  40609e:	ea4e 0e04 	orr.w	lr, lr, r4
  4060a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4060a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4060aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4060ae:	fa1f f883 	uxth.w	r8, r3
  4060b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4060b6:	fb09 f408 	mul.w	r4, r9, r8
  4060ba:	42ac      	cmp	r4, r5
  4060bc:	fa02 f201 	lsl.w	r2, r2, r1
  4060c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4060c4:	d908      	bls.n	4060d8 <__udivmoddi4+0x244>
  4060c6:	18ed      	adds	r5, r5, r3
  4060c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4060cc:	d243      	bcs.n	406156 <__udivmoddi4+0x2c2>
  4060ce:	42ac      	cmp	r4, r5
  4060d0:	d941      	bls.n	406156 <__udivmoddi4+0x2c2>
  4060d2:	f1a9 0902 	sub.w	r9, r9, #2
  4060d6:	441d      	add	r5, r3
  4060d8:	1b2d      	subs	r5, r5, r4
  4060da:	fa1f fe8e 	uxth.w	lr, lr
  4060de:	fbb5 f0fc 	udiv	r0, r5, ip
  4060e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4060e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4060ea:	fb00 f808 	mul.w	r8, r0, r8
  4060ee:	45a0      	cmp	r8, r4
  4060f0:	d907      	bls.n	406102 <__udivmoddi4+0x26e>
  4060f2:	18e4      	adds	r4, r4, r3
  4060f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4060f8:	d229      	bcs.n	40614e <__udivmoddi4+0x2ba>
  4060fa:	45a0      	cmp	r8, r4
  4060fc:	d927      	bls.n	40614e <__udivmoddi4+0x2ba>
  4060fe:	3802      	subs	r0, #2
  406100:	441c      	add	r4, r3
  406102:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406106:	eba4 0408 	sub.w	r4, r4, r8
  40610a:	fba0 8902 	umull	r8, r9, r0, r2
  40610e:	454c      	cmp	r4, r9
  406110:	46c6      	mov	lr, r8
  406112:	464d      	mov	r5, r9
  406114:	d315      	bcc.n	406142 <__udivmoddi4+0x2ae>
  406116:	d012      	beq.n	40613e <__udivmoddi4+0x2aa>
  406118:	b156      	cbz	r6, 406130 <__udivmoddi4+0x29c>
  40611a:	ebba 030e 	subs.w	r3, sl, lr
  40611e:	eb64 0405 	sbc.w	r4, r4, r5
  406122:	fa04 f707 	lsl.w	r7, r4, r7
  406126:	40cb      	lsrs	r3, r1
  406128:	431f      	orrs	r7, r3
  40612a:	40cc      	lsrs	r4, r1
  40612c:	6037      	str	r7, [r6, #0]
  40612e:	6074      	str	r4, [r6, #4]
  406130:	2100      	movs	r1, #0
  406132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406136:	4618      	mov	r0, r3
  406138:	e6f8      	b.n	405f2c <__udivmoddi4+0x98>
  40613a:	4690      	mov	r8, r2
  40613c:	e6e0      	b.n	405f00 <__udivmoddi4+0x6c>
  40613e:	45c2      	cmp	sl, r8
  406140:	d2ea      	bcs.n	406118 <__udivmoddi4+0x284>
  406142:	ebb8 0e02 	subs.w	lr, r8, r2
  406146:	eb69 0503 	sbc.w	r5, r9, r3
  40614a:	3801      	subs	r0, #1
  40614c:	e7e4      	b.n	406118 <__udivmoddi4+0x284>
  40614e:	4628      	mov	r0, r5
  406150:	e7d7      	b.n	406102 <__udivmoddi4+0x26e>
  406152:	4640      	mov	r0, r8
  406154:	e791      	b.n	40607a <__udivmoddi4+0x1e6>
  406156:	4681      	mov	r9, r0
  406158:	e7be      	b.n	4060d8 <__udivmoddi4+0x244>
  40615a:	4601      	mov	r1, r0
  40615c:	e778      	b.n	406050 <__udivmoddi4+0x1bc>
  40615e:	3802      	subs	r0, #2
  406160:	443c      	add	r4, r7
  406162:	e745      	b.n	405ff0 <__udivmoddi4+0x15c>
  406164:	4608      	mov	r0, r1
  406166:	e708      	b.n	405f7a <__udivmoddi4+0xe6>
  406168:	f1a8 0802 	sub.w	r8, r8, #2
  40616c:	443d      	add	r5, r7
  40616e:	e72b      	b.n	405fc8 <__udivmoddi4+0x134>

00406170 <__aeabi_idiv0>:
  406170:	4770      	bx	lr
  406172:	bf00      	nop

00406174 <sysfont_glyphs>:
	...
  406194:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4061a4:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  4061b4:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  4061cc:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  4061dc:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  4061ec:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406204:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406214:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406224:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  40623c:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406258:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406268:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406278:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406288:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4062b0:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  4062d8:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  4062e8:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  40630c:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  40631c:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  40632c:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  40633c:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406354:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406364:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406374:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  40638c:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  40639c:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4063ac:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  4063c4:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  4063d4:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  4063e4:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  4063fc:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  40640c:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  40641c:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406434:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406444:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406454:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  406470:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  406480:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406490:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4064ac:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  4064c4:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  4064dc:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  4064ec:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  4064fc:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406514:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406524:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406534:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  40654c:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  40655c:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  40656c:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406584:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406594:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4065a4:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  4065bc:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  4065cc:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  4065dc:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  4065f4:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406604:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406614:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  40662c:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  40663c:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  40664c:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406664:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406674:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406684:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  40669c:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4066ac:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  4066bc:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  4066d4:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4066e4:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  4066f4:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  40670c:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  40671c:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  40672c:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406744:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406754:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406764:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  40677c:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  40678c:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  40679c:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  4067b4:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  4067c4:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  4067d4:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  4067ec:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  4067fc:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  40680c:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406824:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406834:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406844:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  40686c:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  40687c:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406898:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4068b0:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  4068c0:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4068d0:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  4068e8:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  4068f8:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406908:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406920:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406930:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406940:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406950:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406960:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406970:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406980:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406990:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  4069a0:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  4069b0:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  4069c8:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  4069d8:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4069e8:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406a04:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406a20:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406a3c:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406a4c:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406a5c:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406a74:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406a90:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406aac:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406ac8:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406ae4:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406b00:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406b1c:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406b38:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406b48:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406b58:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406b68:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406b78:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406b88:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406b98:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406ba8:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406bb8:	0000 0000 6425 253a 3a64 6425 6320 253a     ....%d:%d:%d c:%
  406bc8:	0064 0000                                   d...

00406bcc <_global_impure_ptr>:
  406bcc:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406bdc:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406bec:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406bfc:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406c0c:	296c 0000 0030 0000                         l)..0...

00406c14 <blanks.7223>:
  406c14:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406c24 <zeroes.7224>:
  406c24:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406c34:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406c44:	0000 0000                                   ....

00406c48 <__mprec_bigtens>:
  406c48:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406c58:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406c68:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406c70 <__mprec_tens>:
  406c70:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406c80:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406c90:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406ca0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406cb0:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406cc0:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406cd0:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406ce0:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406cf0:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406d00:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406d10:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406d20:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406d30:	9db4 79d9 7843 44ea                         ...yCx.D

00406d38 <p05.6055>:
  406d38:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406d48:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406d54 <_ctype_>:
  406d54:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406d64:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406d74:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406d84:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406d94:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406da4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406db4:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406dc4:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406dd4:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406e58 <_init>:
  406e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e5a:	bf00      	nop
  406e5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e5e:	bc08      	pop	{r3}
  406e60:	469e      	mov	lr, r3
  406e62:	4770      	bx	lr

00406e64 <__init_array_start>:
  406e64:	00402e01 	.word	0x00402e01

00406e68 <__frame_dummy_init_array_entry>:
  406e68:	00400165                                e.@.

00406e6c <_fini>:
  406e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e6e:	bf00      	nop
  406e70:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e72:	bc08      	pop	{r3}
  406e74:	469e      	mov	lr, r3
  406e76:	4770      	bx	lr

00406e78 <__fini_array_start>:
  406e78:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6174 0040 0e0a 7d20               ....ta@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <flag_leds_ligados>:
20400020:	0101                                             .

20400021 <led1_on>:
20400021:	0101                                             .

20400022 <led3_on>:
20400022:	0001                                        ..

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cac 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5529 0040 50e9 0040 0000 0000 6d54 0040     )U@..P@.....Tm@.
20400954:	6d50 0040 6bf0 0040 6bf0 0040 6bf0 0040     Pm@..k@..k@..k@.
20400964:	6bf0 0040 6bf0 0040 6bf0 0040 6bf0 0040     .k@..k@..k@..k@.
20400974:	6bf0 0040 6bf0 0040 ffff ffff ffff ffff     .k@..k@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
